// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/sudoswedenab/dockyards-backend/api/v1alpha3

package v1alpha3

import (
	apiextensionsv1 "k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#HelmDeploymentKind: "HelmDeployment"

#HelmDeploymentSpec: {
	chart:          string                       @go(Chart)
	repository:     string                       @go(Repository)
	version:        string                       @go(Version)
	values?:        null | apiextensionsv1.#JSON @go(Values,*apiextensionsv1.JSON)
	skipNamespace?: bool                         @go(SkipNamespace)
}

#HelmDeploymentStatus: {
	conditions?: [...metav1.#Condition] @go(Conditions,[]metav1.Condition)
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
// +kubebuilder:deprecatedversion
// +kubebuilder:printcolumn:name="Ready",type=string,JSONPath=".status.conditions[?(@.type==\"Ready\")].status"
// +kubebuilder:printcolumn:name="Age",type=date,JSONPath=".metadata.creationTimestamp"
#HelmDeployment: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta    @go(ObjectMeta)
	spec?:     #HelmDeploymentSpec   @go(Spec)
	status?:   #HelmDeploymentStatus @go(Status)
}

// +kubebuilder:object:root=true
#HelmDeploymentList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#HelmDeployment] @go(Items,[]HelmDeployment)
}
