// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/RedHatInsights/strimzi-client-go/apis/kafka.strimzi.io/v1beta2

package v1beta2

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	apiextensions "k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1"
)

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// KafkaConnect
#KafkaConnect: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)

	// The specification of the Kafka Connect cluster.
	spec?: null | #KafkaConnectSpec @go(Spec,*KafkaConnectSpec)

	// The status of the Kafka Connect cluster.
	status?: null | #KafkaConnectStatus @go(Status,*KafkaConnectStatus)
}

// +kubebuilder:object:root=true
// KafkaConnectList contains a list of instances.
#KafkaConnectList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)

	// A list of KafkaConnect objects.
	items?: [...#KafkaConnect] @go(Items,[]KafkaConnect)
}

// The specification of the Kafka Connect cluster.
#KafkaConnectSpec: _

// Authentication configuration for Kafka Connect.
#KafkaConnectSpecAuthentication: _

// Link to Kubernetes Secret containing the access token which was obtained from
// the authorization server.
#KafkaConnectSpecAuthenticationAccessToken: _

// Reference to the `Secret` which holds the certificate and private key pair.
#KafkaConnectSpecAuthenticationCertificateAndKey: _

// Link to Kubernetes Secret containing the OAuth client secret which the Kafka
// client can use to authenticate against the OAuth server and use the token
// endpoint URI.
#KafkaConnectSpecAuthenticationClientSecret: _

// Reference to the `Secret` which holds the password.
#KafkaConnectSpecAuthenticationPasswordSecret: _

// Link to Kubernetes Secret containing the refresh token which can be used to
// obtain access token from the authorization server.
#KafkaConnectSpecAuthenticationRefreshToken: _

#KafkaConnectSpecAuthenticationTlsTrustedCertificatesElem: _

#KafkaConnectSpecAuthenticationType: _ // #enumKafkaConnectSpecAuthenticationType

#enumKafkaConnectSpecAuthenticationType:
	#KafkaConnectSpecAuthenticationTypeOauth |
	#KafkaConnectSpecAuthenticationTypePlain |
	#KafkaConnectSpecAuthenticationTypeScramSha256 |
	#KafkaConnectSpecAuthenticationTypeScramSha512 |
	#KafkaConnectSpecAuthenticationTypeTls

#KafkaConnectSpecAuthenticationTypeOauth: #KafkaConnectSpecAuthenticationType & "oauth"

#KafkaConnectSpecAuthenticationTypePlain: #KafkaConnectSpecAuthenticationType & "plain"

#KafkaConnectSpecAuthenticationTypeScramSha256: #KafkaConnectSpecAuthenticationType & "scram-sha-256"

#KafkaConnectSpecAuthenticationTypeScramSha512: #KafkaConnectSpecAuthenticationType & "scram-sha-512"

#KafkaConnectSpecAuthenticationTypeTls: #KafkaConnectSpecAuthenticationType & "tls"

// Configures how the Connect container image should be built. Optional.
#KafkaConnectSpecBuild: _

// Configures where should the newly built image be stored. Required.
#KafkaConnectSpecBuildOutput: _

#KafkaConnectSpecBuildOutputType: _ // #enumKafkaConnectSpecBuildOutputType

#enumKafkaConnectSpecBuildOutputType:
	#KafkaConnectSpecBuildOutputTypeDocker |
	#KafkaConnectSpecBuildOutputTypeImagestream

#KafkaConnectSpecBuildOutputTypeDocker: #KafkaConnectSpecBuildOutputType & "docker"

#KafkaConnectSpecBuildOutputTypeImagestream: #KafkaConnectSpecBuildOutputType & "imagestream"

#KafkaConnectSpecBuildPluginsElem: _

#KafkaConnectSpecBuildPluginsElemArtifactsElem: _

#KafkaConnectSpecBuildPluginsElemArtifactsElemType: _ // #enumKafkaConnectSpecBuildPluginsElemArtifactsElemType

#enumKafkaConnectSpecBuildPluginsElemArtifactsElemType:
	#KafkaConnectSpecBuildPluginsElemArtifactsElemTypeJar |
	#KafkaConnectSpecBuildPluginsElemArtifactsElemTypeMaven |
	#KafkaConnectSpecBuildPluginsElemArtifactsElemTypeOther |
	#KafkaConnectSpecBuildPluginsElemArtifactsElemTypeTgz |
	#KafkaConnectSpecBuildPluginsElemArtifactsElemTypeZip

#KafkaConnectSpecBuildPluginsElemArtifactsElemTypeJar: #KafkaConnectSpecBuildPluginsElemArtifactsElemType & "jar"

#KafkaConnectSpecBuildPluginsElemArtifactsElemTypeMaven: #KafkaConnectSpecBuildPluginsElemArtifactsElemType & "maven"

#KafkaConnectSpecBuildPluginsElemArtifactsElemTypeOther: #KafkaConnectSpecBuildPluginsElemArtifactsElemType & "other"

#KafkaConnectSpecBuildPluginsElemArtifactsElemTypeTgz: #KafkaConnectSpecBuildPluginsElemArtifactsElemType & "tgz"

#KafkaConnectSpecBuildPluginsElemArtifactsElemTypeZip: #KafkaConnectSpecBuildPluginsElemArtifactsElemType & "zip"

// CPU and memory resources to reserve for the build.
#KafkaConnectSpecBuildResources: {
	// Claims corresponds to the JSON schema field "claims".
	claims?: [...#KafkaConnectSpecBuildResourcesClaimsElem] @go(Claims,[]KafkaConnectSpecBuildResourcesClaimsElem)

	// Limits corresponds to the JSON schema field "limits".
	limits?: null | apiextensions.#JSON @go(Limits,*apiextensions.JSON)

	// Requests corresponds to the JSON schema field "requests".
	requests?: null | apiextensions.#JSON @go(Requests,*apiextensions.JSON)
}

#KafkaConnectSpecBuildResourcesClaimsElem: {
	// Name corresponds to the JSON schema field "name".
	name?: null | string @go(Name,*string)
}

// Pass data from Secrets or ConfigMaps to the Kafka Connect pods and use them to
// configure connectors.
#KafkaConnectSpecExternalConfiguration: {
	// Makes data from a Secret or ConfigMap available in the Kafka Connect pods as
	// environment variables.
	env?: [...#KafkaConnectSpecExternalConfigurationEnvElem] @go(Env,[]KafkaConnectSpecExternalConfigurationEnvElem)

	// Makes data from a Secret or ConfigMap available in the Kafka Connect pods as
	// volumes.
	volumes?: [...#KafkaConnectSpecExternalConfigurationVolumesElem] @go(Volumes,[]KafkaConnectSpecExternalConfigurationVolumesElem)
}

#KafkaConnectSpecExternalConfigurationEnvElem: _

// Value of the environment variable which will be passed to the Kafka Connect
// pods. It can be passed either as a reference to Secret or ConfigMap field. The
// field has to specify exactly one Secret or ConfigMap.
#KafkaConnectSpecExternalConfigurationEnvElemValueFrom: {
	// Reference to a key in a ConfigMap.
	configMapKeyRef?: null | #KafkaConnectSpecExternalConfigurationEnvElemValueFromConfigMapKeyRef @go(ConfigMapKeyRef,*KafkaConnectSpecExternalConfigurationEnvElemValueFromConfigMapKeyRef)

	// Reference to a key in a Secret.
	secretKeyRef?: null | #KafkaConnectSpecExternalConfigurationEnvElemValueFromSecretKeyRef @go(SecretKeyRef,*KafkaConnectSpecExternalConfigurationEnvElemValueFromSecretKeyRef)
}

// Reference to a key in a ConfigMap.
#KafkaConnectSpecExternalConfigurationEnvElemValueFromConfigMapKeyRef: {
	// Key corresponds to the JSON schema field "key".
	key?: null | string @go(Key,*string)

	// Name corresponds to the JSON schema field "name".
	name?: null | string @go(Name,*string)

	// Optional corresponds to the JSON schema field "optional".
	optional?: null | bool @go(Optional,*bool)
}

// Reference to a key in a Secret.
#KafkaConnectSpecExternalConfigurationEnvElemValueFromSecretKeyRef: {
	// Key corresponds to the JSON schema field "key".
	key?: null | string @go(Key,*string)

	// Name corresponds to the JSON schema field "name".
	name?: null | string @go(Name,*string)

	// Optional corresponds to the JSON schema field "optional".
	optional?: null | bool @go(Optional,*bool)
}

#KafkaConnectSpecExternalConfigurationVolumesElem: _

// Reference to a key in a ConfigMap. Exactly one Secret or ConfigMap has to be
// specified.
#KafkaConnectSpecExternalConfigurationVolumesElemConfigMap: {
	// DefaultMode corresponds to the JSON schema field "defaultMode".
	defaultMode?: null | int32 @go(DefaultMode,*int32)

	// Items corresponds to the JSON schema field "items".
	items?: [...#KafkaConnectSpecExternalConfigurationVolumesElemConfigMapItemsElem] @go(Items,[]KafkaConnectSpecExternalConfigurationVolumesElemConfigMapItemsElem)

	// Name corresponds to the JSON schema field "name".
	name?: null | string @go(Name,*string)

	// Optional corresponds to the JSON schema field "optional".
	optional?: null | bool @go(Optional,*bool)
}

#KafkaConnectSpecExternalConfigurationVolumesElemConfigMapItemsElem: {
	// Key corresponds to the JSON schema field "key".
	key?: null | string @go(Key,*string)

	// Mode corresponds to the JSON schema field "mode".
	mode?: null | int32 @go(Mode,*int32)

	// Path corresponds to the JSON schema field "path".
	path?: null | string @go(Path,*string)
}

// Reference to a key in a Secret. Exactly one Secret or ConfigMap has to be
// specified.
#KafkaConnectSpecExternalConfigurationVolumesElemSecret: {
	// DefaultMode corresponds to the JSON schema field "defaultMode".
	defaultMode?: null | int32 @go(DefaultMode,*int32)

	// Items corresponds to the JSON schema field "items".
	items?: [...#KafkaConnectSpecExternalConfigurationVolumesElemSecretItemsElem] @go(Items,[]KafkaConnectSpecExternalConfigurationVolumesElemSecretItemsElem)

	// Optional corresponds to the JSON schema field "optional".
	optional?: null | bool @go(Optional,*bool)

	// SecretName corresponds to the JSON schema field "secretName".
	secretName?: null | string @go(SecretName,*string)
}

#KafkaConnectSpecExternalConfigurationVolumesElemSecretItemsElem: {
	// Key corresponds to the JSON schema field "key".
	key?: null | string @go(Key,*string)

	// Mode corresponds to the JSON schema field "mode".
	mode?: null | int32 @go(Mode,*int32)

	// Path corresponds to the JSON schema field "path".
	path?: null | string @go(Path,*string)
}

// JMX Options.
#KafkaConnectSpecJmxOptions: {
	// Authentication configuration for connecting to the JMX port.
	authentication?: null | #KafkaConnectSpecJmxOptionsAuthentication @go(Authentication,*KafkaConnectSpecJmxOptionsAuthentication)
}

// Authentication configuration for connecting to the JMX port.
#KafkaConnectSpecJmxOptionsAuthentication: _

#KafkaConnectSpecJmxOptionsAuthenticationType: _ // #enumKafkaConnectSpecJmxOptionsAuthenticationType

#enumKafkaConnectSpecJmxOptionsAuthenticationType:
	#KafkaConnectSpecJmxOptionsAuthenticationTypePassword

#KafkaConnectSpecJmxOptionsAuthenticationTypePassword: #KafkaConnectSpecJmxOptionsAuthenticationType & "password"

// JVM Options for pods.
#KafkaConnectSpecJvmOptions: {
	// A map of -XX options to the JVM.
	"-XX"?: #KafkaConnectSpecJvmOptionsXX @go(XX)

	// -Xms option to to the JVM.
	"-Xms"?: null | string @go(Xms,*string)

	// -Xmx option to to the JVM.
	"-Xmx"?: null | string @go(Xmx,*string)

	// Specifies whether the Garbage Collection logging is enabled. The default is
	// false.
	gcLoggingEnabled?: null | bool @go(GcLoggingEnabled,*bool)

	// A map of additional system properties which will be passed using the `-D`
	// option to the JVM.
	javaSystemProperties?: [...#KafkaConnectSpecJvmOptionsJavaSystemPropertiesElem] @go(JavaSystemProperties,[]KafkaConnectSpecJvmOptionsJavaSystemPropertiesElem)
}

#KafkaConnectSpecJvmOptionsJavaSystemPropertiesElem: {
	// The system property name.
	name?: null | string @go(Name,*string)

	// The system property value.
	value?: null | string @go(Value,*string)
}

// A map of -XX options to the JVM.
#KafkaConnectSpecJvmOptionsXX: {[string]: string}

// Pod liveness checking.
#KafkaConnectSpecLivenessProbe: {
	// Minimum consecutive failures for the probe to be considered failed after having
	// succeeded. Defaults to 3. Minimum value is 1.
	failureThreshold?: null | int32 @go(FailureThreshold,*int32)

	// The initial delay before first the health is first checked. Default to 15
	// seconds. Minimum value is 0.
	initialDelaySeconds?: null | int32 @go(InitialDelaySeconds,*int32)

	// How often (in seconds) to perform the probe. Default to 10 seconds. Minimum
	// value is 1.
	periodSeconds?: null | int32 @go(PeriodSeconds,*int32)

	// Minimum consecutive successes for the probe to be considered successful after
	// having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
	successThreshold?: null | int32 @go(SuccessThreshold,*int32)

	// The timeout for each attempted health check. Default to 5 seconds. Minimum
	// value is 1.
	timeoutSeconds?: null | int32 @go(TimeoutSeconds,*int32)
}

// Logging configuration for Kafka Connect.
#KafkaConnectSpecLogging: _

// A Map from logger name to logger level.
#KafkaConnectSpecLoggingLoggers: {[string]: string}

#KafkaConnectSpecLoggingType: _ // #enumKafkaConnectSpecLoggingType

#enumKafkaConnectSpecLoggingType:
	#KafkaConnectSpecLoggingTypeExternal |
	#KafkaConnectSpecLoggingTypeInline

#KafkaConnectSpecLoggingTypeExternal: #KafkaConnectSpecLoggingType & "external"

#KafkaConnectSpecLoggingTypeInline: #KafkaConnectSpecLoggingType & "inline"

// `ConfigMap` entry where the logging configuration is stored.
#KafkaConnectSpecLoggingValueFrom: {
	// Reference to the key in the ConfigMap containing the configuration.
	configMapKeyRef?: null | #KafkaConnectSpecLoggingValueFromConfigMapKeyRef @go(ConfigMapKeyRef,*KafkaConnectSpecLoggingValueFromConfigMapKeyRef)
}

// Reference to the key in the ConfigMap containing the configuration.
#KafkaConnectSpecLoggingValueFromConfigMapKeyRef: {
	// Key corresponds to the JSON schema field "key".
	key?: null | string @go(Key,*string)

	// Name corresponds to the JSON schema field "name".
	name?: null | string @go(Name,*string)

	// Optional corresponds to the JSON schema field "optional".
	optional?: null | bool @go(Optional,*bool)
}

// Metrics configuration.
#KafkaConnectSpecMetricsConfig: _

#KafkaConnectSpecMetricsConfigType: _ // #enumKafkaConnectSpecMetricsConfigType

#enumKafkaConnectSpecMetricsConfigType:
	#KafkaConnectSpecMetricsConfigTypeJmxPrometheusExporter

#KafkaConnectSpecMetricsConfigTypeJmxPrometheusExporter: #KafkaConnectSpecMetricsConfigType & "jmxPrometheusExporter"

// ConfigMap entry where the Prometheus JMX Exporter configuration is stored.
#KafkaConnectSpecMetricsConfigValueFrom: {
	// Reference to the key in the ConfigMap containing the configuration.
	configMapKeyRef?: null | #KafkaConnectSpecMetricsConfigValueFromConfigMapKeyRef @go(ConfigMapKeyRef,*KafkaConnectSpecMetricsConfigValueFromConfigMapKeyRef)
}

// Reference to the key in the ConfigMap containing the configuration.
#KafkaConnectSpecMetricsConfigValueFromConfigMapKeyRef: {
	// Key corresponds to the JSON schema field "key".
	key?: null | string @go(Key,*string)

	// Name corresponds to the JSON schema field "name".
	name?: null | string @go(Name,*string)

	// Optional corresponds to the JSON schema field "optional".
	optional?: null | bool @go(Optional,*bool)
}

// Configuration of the node label which will be used as the `client.rack` consumer
// configuration.
#KafkaConnectSpecRack: _

// Pod readiness checking.
#KafkaConnectSpecReadinessProbe: {
	// Minimum consecutive failures for the probe to be considered failed after having
	// succeeded. Defaults to 3. Minimum value is 1.
	failureThreshold?: null | int32 @go(FailureThreshold,*int32)

	// The initial delay before first the health is first checked. Default to 15
	// seconds. Minimum value is 0.
	initialDelaySeconds?: null | int32 @go(InitialDelaySeconds,*int32)

	// How often (in seconds) to perform the probe. Default to 10 seconds. Minimum
	// value is 1.
	periodSeconds?: null | int32 @go(PeriodSeconds,*int32)

	// Minimum consecutive successes for the probe to be considered successful after
	// having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
	successThreshold?: null | int32 @go(SuccessThreshold,*int32)

	// The timeout for each attempted health check. Default to 5 seconds. Minimum
	// value is 1.
	timeoutSeconds?: null | int32 @go(TimeoutSeconds,*int32)
}

// The maximum limits for CPU and memory resources and the requested initial
// resources.
#KafkaConnectSpecResources: {
	// Claims corresponds to the JSON schema field "claims".
	claims?: [...#KafkaConnectSpecResourcesClaimsElem] @go(Claims,[]KafkaConnectSpecResourcesClaimsElem)

	// Limits corresponds to the JSON schema field "limits".
	limits?: null | apiextensions.#JSON @go(Limits,*apiextensions.JSON)

	// Requests corresponds to the JSON schema field "requests".
	requests?: null | apiextensions.#JSON @go(Requests,*apiextensions.JSON)
}

#KafkaConnectSpecResourcesClaimsElem: {
	// Name corresponds to the JSON schema field "name".
	name?: null | string @go(Name,*string)
}

// Template for Kafka Connect and Kafka Mirror Maker 2 resources. The template
// allows users to specify how the `Pods`, `Service`, and other services are
// generated.
#KafkaConnectSpecTemplate: {
	// Template for Kafka Connect API `Service`.
	apiService?: null | #KafkaConnectSpecTemplateApiService @go(ApiService,*KafkaConnectSpecTemplateApiService)

	// Template for the Kafka Connect BuildConfig used to build new container images.
	// The BuildConfig is used only on OpenShift.
	buildConfig?: null | #KafkaConnectSpecTemplateBuildConfig @go(BuildConfig,*KafkaConnectSpecTemplateBuildConfig)

	// Template for the Kafka Connect Build container. The build container is used
	// only on Kubernetes.
	buildContainer?: null | #KafkaConnectSpecTemplateBuildContainer @go(BuildContainer,*KafkaConnectSpecTemplateBuildContainer)

	// Template for Kafka Connect Build `Pods`. The build pod is used only on
	// Kubernetes.
	buildPod?: null | #KafkaConnectSpecTemplateBuildPod @go(BuildPod,*KafkaConnectSpecTemplateBuildPod)

	// Template for the Kafka Connect Build service account.
	buildServiceAccount?: null | #KafkaConnectSpecTemplateBuildServiceAccount @go(BuildServiceAccount,*KafkaConnectSpecTemplateBuildServiceAccount)

	// Template for the Kafka Connect ClusterRoleBinding.
	clusterRoleBinding?: null | #KafkaConnectSpecTemplateClusterRoleBinding @go(ClusterRoleBinding,*KafkaConnectSpecTemplateClusterRoleBinding)

	// Template for the Kafka Connect container.
	connectContainer?: null | #KafkaConnectSpecTemplateConnectContainer @go(ConnectContainer,*KafkaConnectSpecTemplateConnectContainer)

	// Template for Kafka Connect `Deployment`.
	deployment?: null | #KafkaConnectSpecTemplateDeployment @go(Deployment,*KafkaConnectSpecTemplateDeployment)

	// Template for Kafka Connect headless `Service`.
	headlessService?: null | #KafkaConnectSpecTemplateHeadlessService @go(HeadlessService,*KafkaConnectSpecTemplateHeadlessService)

	// Template for the Kafka init container.
	initContainer?: null | #KafkaConnectSpecTemplateInitContainer @go(InitContainer,*KafkaConnectSpecTemplateInitContainer)

	// Template for Secret of the Kafka Connect Cluster JMX authentication.
	jmxSecret?: null | #KafkaConnectSpecTemplateJmxSecret @go(JmxSecret,*KafkaConnectSpecTemplateJmxSecret)

	// Template for Kafka Connect `Pods`.
	pod?: null | #KafkaConnectSpecTemplatePod @go(Pod,*KafkaConnectSpecTemplatePod)

	// Template for Kafka Connect `PodDisruptionBudget`.
	podDisruptionBudget?: null | #KafkaConnectSpecTemplatePodDisruptionBudget @go(PodDisruptionBudget,*KafkaConnectSpecTemplatePodDisruptionBudget)

	// Template for Kafka Connect `StrimziPodSet` resource.
	podSet?: null | #KafkaConnectSpecTemplatePodSet @go(PodSet,*KafkaConnectSpecTemplatePodSet)

	// Template for the Kafka Connect service account.
	serviceAccount?: null | #KafkaConnectSpecTemplateServiceAccount @go(ServiceAccount,*KafkaConnectSpecTemplateServiceAccount)
}

// Template for Kafka Connect API `Service`.
#KafkaConnectSpecTemplateApiService: {
	// Specifies the IP Families used by the service. Available options are `IPv4` and
	// `IPv6`. If unspecified, Kubernetes will choose the default value based on the
	// `ipFamilyPolicy` setting.
	ipFamilies?: [...#KafkaConnectSpecTemplateApiServiceIpFamiliesElem] @go(IpFamilies,[]KafkaConnectSpecTemplateApiServiceIpFamiliesElem)

	// Specifies the IP Family Policy used by the service. Available options are
	// `SingleStack`, `PreferDualStack` and `RequireDualStack`. `SingleStack` is for a
	// single IP family. `PreferDualStack` is for two IP families on dual-stack
	// configured clusters or a single IP family on single-stack clusters.
	// `RequireDualStack` fails unless there are two IP families on dual-stack
	// configured clusters. If unspecified, Kubernetes will choose the default value
	// based on the service type.
	ipFamilyPolicy?: null | #KafkaConnectSpecTemplateApiServiceIpFamilyPolicy @go(IpFamilyPolicy,*KafkaConnectSpecTemplateApiServiceIpFamilyPolicy)

	// Metadata applied to the resource.
	metadata?: null | #KafkaConnectSpecTemplateApiServiceMetadata @go(Metadata,*KafkaConnectSpecTemplateApiServiceMetadata)
}

#KafkaConnectSpecTemplateApiServiceIpFamiliesElem: _ // #enumKafkaConnectSpecTemplateApiServiceIpFamiliesElem

#enumKafkaConnectSpecTemplateApiServiceIpFamiliesElem:
	#KafkaConnectSpecTemplateApiServiceIpFamiliesElemIPv4 |
	#KafkaConnectSpecTemplateApiServiceIpFamiliesElemIPv6

#KafkaConnectSpecTemplateApiServiceIpFamiliesElemIPv4: #KafkaConnectSpecTemplateApiServiceIpFamiliesElem & "IPv4"

#KafkaConnectSpecTemplateApiServiceIpFamiliesElemIPv6: #KafkaConnectSpecTemplateApiServiceIpFamiliesElem & "IPv6"

#KafkaConnectSpecTemplateApiServiceIpFamilyPolicy: _ // #enumKafkaConnectSpecTemplateApiServiceIpFamilyPolicy

#enumKafkaConnectSpecTemplateApiServiceIpFamilyPolicy:
	#KafkaConnectSpecTemplateApiServiceIpFamilyPolicyPreferDualStack |
	#KafkaConnectSpecTemplateApiServiceIpFamilyPolicyRequireDualStack |
	#KafkaConnectSpecTemplateApiServiceIpFamilyPolicySingleStack

#KafkaConnectSpecTemplateApiServiceIpFamilyPolicyPreferDualStack: #KafkaConnectSpecTemplateApiServiceIpFamilyPolicy & "PreferDualStack"

#KafkaConnectSpecTemplateApiServiceIpFamilyPolicyRequireDualStack: #KafkaConnectSpecTemplateApiServiceIpFamilyPolicy & "RequireDualStack"

#KafkaConnectSpecTemplateApiServiceIpFamilyPolicySingleStack: #KafkaConnectSpecTemplateApiServiceIpFamilyPolicy & "SingleStack"

// Metadata applied to the resource.
#KafkaConnectSpecTemplateApiServiceMetadata: {
	// Annotations added to the Kubernetes resource.
	annotations?: #KafkaConnectSpecTemplateApiServiceMetadataAnnotations @go(Annotations)

	// Labels added to the Kubernetes resource.
	labels?: #KafkaConnectSpecTemplateApiServiceMetadataLabels @go(Labels)
}

// Annotations added to the Kubernetes resource.
#KafkaConnectSpecTemplateApiServiceMetadataAnnotations: {[string]: string}

// Labels added to the Kubernetes resource.
#KafkaConnectSpecTemplateApiServiceMetadataLabels: {[string]: string}

// Template for the Kafka Connect BuildConfig used to build new container images.
// The BuildConfig is used only on OpenShift.
#KafkaConnectSpecTemplateBuildConfig: {
	// Metadata to apply to the `PodDisruptionBudgetTemplate` resource.
	metadata?: null | #KafkaConnectSpecTemplateBuildConfigMetadata @go(Metadata,*KafkaConnectSpecTemplateBuildConfigMetadata)

	// Container Registry Secret with the credentials for pulling the base image.
	pullSecret?: null | string @go(PullSecret,*string)
}

// Metadata to apply to the `PodDisruptionBudgetTemplate` resource.
#KafkaConnectSpecTemplateBuildConfigMetadata: {
	// Annotations added to the Kubernetes resource.
	annotations?: #KafkaConnectSpecTemplateBuildConfigMetadataAnnotations @go(Annotations)

	// Labels added to the Kubernetes resource.
	labels?: #KafkaConnectSpecTemplateBuildConfigMetadataLabels @go(Labels)
}

// Annotations added to the Kubernetes resource.
#KafkaConnectSpecTemplateBuildConfigMetadataAnnotations: {[string]: string}

// Labels added to the Kubernetes resource.
#KafkaConnectSpecTemplateBuildConfigMetadataLabels: {[string]: string}

// Template for the Kafka Connect Build container. The build container is used only
// on Kubernetes.
#KafkaConnectSpecTemplateBuildContainer: {
	// Environment variables which should be applied to the container.
	env?: [...#KafkaConnectSpecTemplateBuildContainerEnvElem] @go(Env,[]KafkaConnectSpecTemplateBuildContainerEnvElem)

	// Security context for the container.
	securityContext?: null | #KafkaConnectSpecTemplateBuildContainerSecurityContext @go(SecurityContext,*KafkaConnectSpecTemplateBuildContainerSecurityContext)
}

#KafkaConnectSpecTemplateBuildContainerEnvElem: {
	// The environment variable key.
	name?: null | string @go(Name,*string)

	// The environment variable value.
	value?: null | string @go(Value,*string)
}

// Security context for the container.
#KafkaConnectSpecTemplateBuildContainerSecurityContext: {
	// AllowPrivilegeEscalation corresponds to the JSON schema field
	// "allowPrivilegeEscalation".
	allowPrivilegeEscalation?: null | bool @go(AllowPrivilegeEscalation,*bool)

	// Capabilities corresponds to the JSON schema field "capabilities".
	capabilities?: null | #KafkaConnectSpecTemplateBuildContainerSecurityContextCapabilities @go(Capabilities,*KafkaConnectSpecTemplateBuildContainerSecurityContextCapabilities)

	// Privileged corresponds to the JSON schema field "privileged".
	privileged?: null | bool @go(Privileged,*bool)

	// ProcMount corresponds to the JSON schema field "procMount".
	procMount?: null | string @go(ProcMount,*string)

	// ReadOnlyRootFilesystem corresponds to the JSON schema field
	// "readOnlyRootFilesystem".
	readOnlyRootFilesystem?: null | bool @go(ReadOnlyRootFilesystem,*bool)

	// RunAsGroup corresponds to the JSON schema field "runAsGroup".
	runAsGroup?: null | int32 @go(RunAsGroup,*int32)

	// RunAsNonRoot corresponds to the JSON schema field "runAsNonRoot".
	runAsNonRoot?: null | bool @go(RunAsNonRoot,*bool)

	// RunAsUser corresponds to the JSON schema field "runAsUser".
	runAsUser?: null | int32 @go(RunAsUser,*int32)

	// SeLinuxOptions corresponds to the JSON schema field "seLinuxOptions".
	seLinuxOptions?: null | #KafkaConnectSpecTemplateBuildContainerSecurityContextSeLinuxOptions @go(SeLinuxOptions,*KafkaConnectSpecTemplateBuildContainerSecurityContextSeLinuxOptions)

	// SeccompProfile corresponds to the JSON schema field "seccompProfile".
	seccompProfile?: null | #KafkaConnectSpecTemplateBuildContainerSecurityContextSeccompProfile @go(SeccompProfile,*KafkaConnectSpecTemplateBuildContainerSecurityContextSeccompProfile)

	// WindowsOptions corresponds to the JSON schema field "windowsOptions".
	windowsOptions?: null | #KafkaConnectSpecTemplateBuildContainerSecurityContextWindowsOptions @go(WindowsOptions,*KafkaConnectSpecTemplateBuildContainerSecurityContextWindowsOptions)
}

#KafkaConnectSpecTemplateBuildContainerSecurityContextCapabilities: {
	// Add corresponds to the JSON schema field "add".
	add?: [...string] @go(Add,[]string)

	// Drop corresponds to the JSON schema field "drop".
	drop?: [...string] @go(Drop,[]string)
}

#KafkaConnectSpecTemplateBuildContainerSecurityContextSeLinuxOptions: {
	// Level corresponds to the JSON schema field "level".
	level?: null | string @go(Level,*string)

	// Role corresponds to the JSON schema field "role".
	role?: null | string @go(Role,*string)

	// Type corresponds to the JSON schema field "type".
	type?: null | string @go(Type,*string)

	// User corresponds to the JSON schema field "user".
	user?: null | string @go(User,*string)
}

#KafkaConnectSpecTemplateBuildContainerSecurityContextSeccompProfile: {
	// LocalhostProfile corresponds to the JSON schema field "localhostProfile".
	localhostProfile?: null | string @go(LocalhostProfile,*string)

	// Type corresponds to the JSON schema field "type".
	type?: null | string @go(Type,*string)
}

#KafkaConnectSpecTemplateBuildContainerSecurityContextWindowsOptions: {
	// GmsaCredentialSpec corresponds to the JSON schema field "gmsaCredentialSpec".
	gmsaCredentialSpec?: null | string @go(GmsaCredentialSpec,*string)

	// GmsaCredentialSpecName corresponds to the JSON schema field
	// "gmsaCredentialSpecName".
	gmsaCredentialSpecName?: null | string @go(GmsaCredentialSpecName,*string)

	// HostProcess corresponds to the JSON schema field "hostProcess".
	hostProcess?: null | bool @go(HostProcess,*bool)

	// RunAsUserName corresponds to the JSON schema field "runAsUserName".
	runAsUserName?: null | string @go(RunAsUserName,*string)
}

// Template for Kafka Connect Build `Pods`. The build pod is used only on
// Kubernetes.
#KafkaConnectSpecTemplateBuildPod: {
	// The pod's affinity rules.
	affinity?: null | #KafkaConnectSpecTemplateBuildPodAffinity @go(Affinity,*KafkaConnectSpecTemplateBuildPodAffinity)

	// Indicates whether information about services should be injected into Pod's
	// environment variables.
	enableServiceLinks?: null | bool @go(EnableServiceLinks,*bool)

	// The pod's HostAliases. HostAliases is an optional list of hosts and IPs that
	// will be injected into the Pod's hosts file if specified.
	hostAliases?: [...#KafkaConnectSpecTemplateBuildPodHostAliasesElem] @go(HostAliases,[]KafkaConnectSpecTemplateBuildPodHostAliasesElem)

	// List of references to secrets in the same namespace to use for pulling any of
	// the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment
	// variable in Cluster Operator and the `imagePullSecrets` option are specified,
	// only the `imagePullSecrets` variable is used and the
	// `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored.
	imagePullSecrets?: [...#KafkaConnectSpecTemplateBuildPodImagePullSecretsElem] @go(ImagePullSecrets,[]KafkaConnectSpecTemplateBuildPodImagePullSecretsElem)

	// Metadata applied to the resource.
	metadata?: null | #KafkaConnectSpecTemplateBuildPodMetadata @go(Metadata,*KafkaConnectSpecTemplateBuildPodMetadata)

	// The name of the priority class used to assign priority to the pods.
	priorityClassName?: null | string @go(PriorityClassName,*string)

	// The name of the scheduler used to dispatch this `Pod`. If not specified, the
	// default scheduler will be used.
	schedulerName?: null | string @go(SchedulerName,*string)

	// Configures pod-level security attributes and common container settings.
	securityContext?: null | #KafkaConnectSpecTemplateBuildPodSecurityContext @go(SecurityContext,*KafkaConnectSpecTemplateBuildPodSecurityContext)

	// The grace period is the duration in seconds after the processes running in the
	// pod are sent a termination signal, and the time when the processes are forcibly
	// halted with a kill signal. Set this value to longer than the expected cleanup
	// time for your process. Value must be a non-negative integer. A zero value
	// indicates delete immediately. You might need to increase the grace period for
	// very large Kafka clusters, so that the Kafka brokers have enough time to
	// transfer their work to another broker before they are terminated. Defaults to
	// 30 seconds.
	terminationGracePeriodSeconds?: null | int32 @go(TerminationGracePeriodSeconds,*int32)

	// Defines the total amount (for example `1Gi`) of local storage required for
	// temporary EmptyDir volume (`/tmp`). Default value is `5Mi`.
	tmpDirSizeLimit?: null | string @go(TmpDirSizeLimit,*string)

	// The pod's tolerations.
	tolerations?: [...#KafkaConnectSpecTemplateBuildPodTolerationsElem] @go(Tolerations,[]KafkaConnectSpecTemplateBuildPodTolerationsElem)

	// The pod's topology spread constraints.
	topologySpreadConstraints?: [...#KafkaConnectSpecTemplateBuildPodTopologySpreadConstraintsElem] @go(TopologySpreadConstraints,[]KafkaConnectSpecTemplateBuildPodTopologySpreadConstraintsElem)
}

// The pod's affinity rules.
#KafkaConnectSpecTemplateBuildPodAffinity: {
	// NodeAffinity corresponds to the JSON schema field "nodeAffinity".
	nodeAffinity?: null | #KafkaConnectSpecTemplateBuildPodAffinityNodeAffinity @go(NodeAffinity,*KafkaConnectSpecTemplateBuildPodAffinityNodeAffinity)

	// PodAffinity corresponds to the JSON schema field "podAffinity".
	podAffinity?: null | #KafkaConnectSpecTemplateBuildPodAffinityPodAffinity @go(PodAffinity,*KafkaConnectSpecTemplateBuildPodAffinityPodAffinity)

	// PodAntiAffinity corresponds to the JSON schema field "podAntiAffinity".
	podAntiAffinity?: null | #KafkaConnectSpecTemplateBuildPodAffinityPodAntiAffinity @go(PodAntiAffinity,*KafkaConnectSpecTemplateBuildPodAffinityPodAntiAffinity)
}

#KafkaConnectSpecTemplateBuildPodAffinityNodeAffinity: {
	// PreferredDuringSchedulingIgnoredDuringExecution corresponds to the JSON schema
	// field "preferredDuringSchedulingIgnoredDuringExecution".
	preferredDuringSchedulingIgnoredDuringExecution?: [...#KafkaConnectSpecTemplateBuildPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionElem] @go(PreferredDuringSchedulingIgnoredDuringExecution,[]KafkaConnectSpecTemplateBuildPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionElem)

	// RequiredDuringSchedulingIgnoredDuringExecution corresponds to the JSON schema
	// field "requiredDuringSchedulingIgnoredDuringExecution".
	requiredDuringSchedulingIgnoredDuringExecution?: null | #KafkaConnectSpecTemplateBuildPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution @go(RequiredDuringSchedulingIgnoredDuringExecution,*KafkaConnectSpecTemplateBuildPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution)
}

#KafkaConnectSpecTemplateBuildPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionElem: {
	// Preference corresponds to the JSON schema field "preference".
	preference?: null | #KafkaConnectSpecTemplateBuildPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPreference @go(Preference,*KafkaConnectSpecTemplateBuildPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPreference)

	// Weight corresponds to the JSON schema field "weight".
	weight?: null | int32 @go(Weight,*int32)
}

#KafkaConnectSpecTemplateBuildPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPreference: {
	// MatchExpressions corresponds to the JSON schema field "matchExpressions".
	matchExpressions?: [...#KafkaConnectSpecTemplateBuildPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPreferenceMatchExpressionsElem] @go(MatchExpressions,[]KafkaConnectSpecTemplateBuildPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPreferenceMatchExpressionsElem)

	// MatchFields corresponds to the JSON schema field "matchFields".
	matchFields?: [...#KafkaConnectSpecTemplateBuildPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPreferenceMatchFieldsElem] @go(MatchFields,[]KafkaConnectSpecTemplateBuildPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPreferenceMatchFieldsElem)
}

#KafkaConnectSpecTemplateBuildPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPreferenceMatchExpressionsElem: {
	// Key corresponds to the JSON schema field "key".
	key?: null | string @go(Key,*string)

	// Operator corresponds to the JSON schema field "operator".
	operator?: null | string @go(Operator,*string)

	// Values corresponds to the JSON schema field "values".
	values?: [...string] @go(Values,[]string)
}

#KafkaConnectSpecTemplateBuildPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPreferenceMatchFieldsElem: {
	// Key corresponds to the JSON schema field "key".
	key?: null | string @go(Key,*string)

	// Operator corresponds to the JSON schema field "operator".
	operator?: null | string @go(Operator,*string)

	// Values corresponds to the JSON schema field "values".
	values?: [...string] @go(Values,[]string)
}

#KafkaConnectSpecTemplateBuildPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution: {
	// NodeSelectorTerms corresponds to the JSON schema field "nodeSelectorTerms".
	nodeSelectorTerms?: [...#KafkaConnectSpecTemplateBuildPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsElem] @go(NodeSelectorTerms,[]KafkaConnectSpecTemplateBuildPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsElem)
}

#KafkaConnectSpecTemplateBuildPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsElem: {
	// MatchExpressions corresponds to the JSON schema field "matchExpressions".
	matchExpressions?: [...#KafkaConnectSpecTemplateBuildPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsElemMatchExpressionsElem] @go(MatchExpressions,[]KafkaConnectSpecTemplateBuildPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsElemMatchExpressionsElem)

	// MatchFields corresponds to the JSON schema field "matchFields".
	matchFields?: [...#KafkaConnectSpecTemplateBuildPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsElemMatchFieldsElem] @go(MatchFields,[]KafkaConnectSpecTemplateBuildPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsElemMatchFieldsElem)
}

#KafkaConnectSpecTemplateBuildPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsElemMatchExpressionsElem: {
	// Key corresponds to the JSON schema field "key".
	key?: null | string @go(Key,*string)

	// Operator corresponds to the JSON schema field "operator".
	operator?: null | string @go(Operator,*string)

	// Values corresponds to the JSON schema field "values".
	values?: [...string] @go(Values,[]string)
}

#KafkaConnectSpecTemplateBuildPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsElemMatchFieldsElem: {
	// Key corresponds to the JSON schema field "key".
	key?: null | string @go(Key,*string)

	// Operator corresponds to the JSON schema field "operator".
	operator?: null | string @go(Operator,*string)

	// Values corresponds to the JSON schema field "values".
	values?: [...string] @go(Values,[]string)
}

#KafkaConnectSpecTemplateBuildPodAffinityPodAffinity: {
	// PreferredDuringSchedulingIgnoredDuringExecution corresponds to the JSON schema
	// field "preferredDuringSchedulingIgnoredDuringExecution".
	preferredDuringSchedulingIgnoredDuringExecution?: [...#KafkaConnectSpecTemplateBuildPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElem] @go(PreferredDuringSchedulingIgnoredDuringExecution,[]KafkaConnectSpecTemplateBuildPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElem)

	// RequiredDuringSchedulingIgnoredDuringExecution corresponds to the JSON schema
	// field "requiredDuringSchedulingIgnoredDuringExecution".
	requiredDuringSchedulingIgnoredDuringExecution?: [...#KafkaConnectSpecTemplateBuildPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElem] @go(RequiredDuringSchedulingIgnoredDuringExecution,[]KafkaConnectSpecTemplateBuildPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElem)
}

#KafkaConnectSpecTemplateBuildPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElem: {
	// PodAffinityTerm corresponds to the JSON schema field "podAffinityTerm".
	podAffinityTerm?: null | #KafkaConnectSpecTemplateBuildPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTerm @go(PodAffinityTerm,*KafkaConnectSpecTemplateBuildPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTerm)

	// Weight corresponds to the JSON schema field "weight".
	weight?: null | int32 @go(Weight,*int32)
}

#KafkaConnectSpecTemplateBuildPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTerm: {
	// LabelSelector corresponds to the JSON schema field "labelSelector".
	labelSelector?: null | #KafkaConnectSpecTemplateBuildPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermLabelSelector @go(LabelSelector,*KafkaConnectSpecTemplateBuildPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermLabelSelector)

	// MatchLabelKeys corresponds to the JSON schema field "matchLabelKeys".
	matchLabelKeys?: [...string] @go(MatchLabelKeys,[]string)

	// MismatchLabelKeys corresponds to the JSON schema field "mismatchLabelKeys".
	mismatchLabelKeys?: [...string] @go(MismatchLabelKeys,[]string)

	// NamespaceSelector corresponds to the JSON schema field "namespaceSelector".
	namespaceSelector?: null | #KafkaConnectSpecTemplateBuildPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermNamespaceSelector @go(NamespaceSelector,*KafkaConnectSpecTemplateBuildPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermNamespaceSelector)

	// Namespaces corresponds to the JSON schema field "namespaces".
	namespaces?: [...string] @go(Namespaces,[]string)

	// TopologyKey corresponds to the JSON schema field "topologyKey".
	topologyKey?: null | string @go(TopologyKey,*string)
}

#KafkaConnectSpecTemplateBuildPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermLabelSelector: {
	// MatchExpressions corresponds to the JSON schema field "matchExpressions".
	matchExpressions?: [...#KafkaConnectSpecTemplateBuildPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermLabelSelectorMatchExpressionsElem] @go(MatchExpressions,[]KafkaConnectSpecTemplateBuildPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermLabelSelectorMatchExpressionsElem)

	// MatchLabels corresponds to the JSON schema field "matchLabels".
	matchLabels?: #KafkaConnectSpecTemplateBuildPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermLabelSelectorMatchLabels @go(MatchLabels)
}

#KafkaConnectSpecTemplateBuildPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermLabelSelectorMatchExpressionsElem: {
	// Key corresponds to the JSON schema field "key".
	key?: null | string @go(Key,*string)

	// Operator corresponds to the JSON schema field "operator".
	operator?: null | string @go(Operator,*string)

	// Values corresponds to the JSON schema field "values".
	values?: [...string] @go(Values,[]string)
}

#KafkaConnectSpecTemplateBuildPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermLabelSelectorMatchLabels: [string]: string

#KafkaConnectSpecTemplateBuildPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermNamespaceSelector: {
	// MatchExpressions corresponds to the JSON schema field "matchExpressions".
	matchExpressions?: [...#KafkaConnectSpecTemplateBuildPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermNamespaceSelectorMatchExpressionsElem] @go(MatchExpressions,[]KafkaConnectSpecTemplateBuildPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermNamespaceSelectorMatchExpressionsElem)

	// MatchLabels corresponds to the JSON schema field "matchLabels".
	matchLabels?: #KafkaConnectSpecTemplateBuildPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermNamespaceSelectorMatchLabels @go(MatchLabels)
}

#KafkaConnectSpecTemplateBuildPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermNamespaceSelectorMatchExpressionsElem: {
	// Key corresponds to the JSON schema field "key".
	key?: null | string @go(Key,*string)

	// Operator corresponds to the JSON schema field "operator".
	operator?: null | string @go(Operator,*string)

	// Values corresponds to the JSON schema field "values".
	values?: [...string] @go(Values,[]string)
}

#KafkaConnectSpecTemplateBuildPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermNamespaceSelectorMatchLabels: [string]: string

#KafkaConnectSpecTemplateBuildPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElem: {
	// LabelSelector corresponds to the JSON schema field "labelSelector".
	labelSelector?: null | #KafkaConnectSpecTemplateBuildPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemLabelSelector @go(LabelSelector,*KafkaConnectSpecTemplateBuildPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemLabelSelector)

	// MatchLabelKeys corresponds to the JSON schema field "matchLabelKeys".
	matchLabelKeys?: [...string] @go(MatchLabelKeys,[]string)

	// MismatchLabelKeys corresponds to the JSON schema field "mismatchLabelKeys".
	mismatchLabelKeys?: [...string] @go(MismatchLabelKeys,[]string)

	// NamespaceSelector corresponds to the JSON schema field "namespaceSelector".
	namespaceSelector?: null | #KafkaConnectSpecTemplateBuildPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemNamespaceSelector @go(NamespaceSelector,*KafkaConnectSpecTemplateBuildPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemNamespaceSelector)

	// Namespaces corresponds to the JSON schema field "namespaces".
	namespaces?: [...string] @go(Namespaces,[]string)

	// TopologyKey corresponds to the JSON schema field "topologyKey".
	topologyKey?: null | string @go(TopologyKey,*string)
}

#KafkaConnectSpecTemplateBuildPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemLabelSelector: {
	// MatchExpressions corresponds to the JSON schema field "matchExpressions".
	matchExpressions?: [...#KafkaConnectSpecTemplateBuildPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemLabelSelectorMatchExpressionsElem] @go(MatchExpressions,[]KafkaConnectSpecTemplateBuildPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemLabelSelectorMatchExpressionsElem)

	// MatchLabels corresponds to the JSON schema field "matchLabels".
	matchLabels?: #KafkaConnectSpecTemplateBuildPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemLabelSelectorMatchLabels @go(MatchLabels)
}

#KafkaConnectSpecTemplateBuildPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemLabelSelectorMatchExpressionsElem: {
	// Key corresponds to the JSON schema field "key".
	key?: null | string @go(Key,*string)

	// Operator corresponds to the JSON schema field "operator".
	operator?: null | string @go(Operator,*string)

	// Values corresponds to the JSON schema field "values".
	values?: [...string] @go(Values,[]string)
}

#KafkaConnectSpecTemplateBuildPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemLabelSelectorMatchLabels: [string]: string

#KafkaConnectSpecTemplateBuildPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemNamespaceSelector: {
	// MatchExpressions corresponds to the JSON schema field "matchExpressions".
	matchExpressions?: [...#KafkaConnectSpecTemplateBuildPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemNamespaceSelectorMatchExpressionsElem] @go(MatchExpressions,[]KafkaConnectSpecTemplateBuildPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemNamespaceSelectorMatchExpressionsElem)

	// MatchLabels corresponds to the JSON schema field "matchLabels".
	matchLabels?: #KafkaConnectSpecTemplateBuildPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemNamespaceSelectorMatchLabels @go(MatchLabels)
}

#KafkaConnectSpecTemplateBuildPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemNamespaceSelectorMatchExpressionsElem: {
	// Key corresponds to the JSON schema field "key".
	key?: null | string @go(Key,*string)

	// Operator corresponds to the JSON schema field "operator".
	operator?: null | string @go(Operator,*string)

	// Values corresponds to the JSON schema field "values".
	values?: [...string] @go(Values,[]string)
}

#KafkaConnectSpecTemplateBuildPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemNamespaceSelectorMatchLabels: [string]: string

#KafkaConnectSpecTemplateBuildPodAffinityPodAntiAffinity: {
	// PreferredDuringSchedulingIgnoredDuringExecution corresponds to the JSON schema
	// field "preferredDuringSchedulingIgnoredDuringExecution".
	preferredDuringSchedulingIgnoredDuringExecution?: [...#KafkaConnectSpecTemplateBuildPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElem] @go(PreferredDuringSchedulingIgnoredDuringExecution,[]KafkaConnectSpecTemplateBuildPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElem)

	// RequiredDuringSchedulingIgnoredDuringExecution corresponds to the JSON schema
	// field "requiredDuringSchedulingIgnoredDuringExecution".
	requiredDuringSchedulingIgnoredDuringExecution?: [...#KafkaConnectSpecTemplateBuildPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElem] @go(RequiredDuringSchedulingIgnoredDuringExecution,[]KafkaConnectSpecTemplateBuildPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElem)
}

#KafkaConnectSpecTemplateBuildPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElem: {
	// PodAffinityTerm corresponds to the JSON schema field "podAffinityTerm".
	podAffinityTerm?: null | #KafkaConnectSpecTemplateBuildPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTerm @go(PodAffinityTerm,*KafkaConnectSpecTemplateBuildPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTerm)

	// Weight corresponds to the JSON schema field "weight".
	weight?: null | int32 @go(Weight,*int32)
}

#KafkaConnectSpecTemplateBuildPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTerm: {
	// LabelSelector corresponds to the JSON schema field "labelSelector".
	labelSelector?: null | #KafkaConnectSpecTemplateBuildPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermLabelSelector @go(LabelSelector,*KafkaConnectSpecTemplateBuildPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermLabelSelector)

	// MatchLabelKeys corresponds to the JSON schema field "matchLabelKeys".
	matchLabelKeys?: [...string] @go(MatchLabelKeys,[]string)

	// MismatchLabelKeys corresponds to the JSON schema field "mismatchLabelKeys".
	mismatchLabelKeys?: [...string] @go(MismatchLabelKeys,[]string)

	// NamespaceSelector corresponds to the JSON schema field "namespaceSelector".
	namespaceSelector?: null | #KafkaConnectSpecTemplateBuildPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermNamespaceSelector @go(NamespaceSelector,*KafkaConnectSpecTemplateBuildPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermNamespaceSelector)

	// Namespaces corresponds to the JSON schema field "namespaces".
	namespaces?: [...string] @go(Namespaces,[]string)

	// TopologyKey corresponds to the JSON schema field "topologyKey".
	topologyKey?: null | string @go(TopologyKey,*string)
}

#KafkaConnectSpecTemplateBuildPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermLabelSelector: {
	// MatchExpressions corresponds to the JSON schema field "matchExpressions".
	matchExpressions?: [...#KafkaConnectSpecTemplateBuildPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermLabelSelectorMatchExpressionsElem] @go(MatchExpressions,[]KafkaConnectSpecTemplateBuildPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermLabelSelectorMatchExpressionsElem)

	// MatchLabels corresponds to the JSON schema field "matchLabels".
	matchLabels?: #KafkaConnectSpecTemplateBuildPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermLabelSelectorMatchLabels @go(MatchLabels)
}

#KafkaConnectSpecTemplateBuildPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermLabelSelectorMatchExpressionsElem: {
	// Key corresponds to the JSON schema field "key".
	key?: null | string @go(Key,*string)

	// Operator corresponds to the JSON schema field "operator".
	operator?: null | string @go(Operator,*string)

	// Values corresponds to the JSON schema field "values".
	values?: [...string] @go(Values,[]string)
}

#KafkaConnectSpecTemplateBuildPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermLabelSelectorMatchLabels: [string]: string

#KafkaConnectSpecTemplateBuildPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermNamespaceSelector: {
	// MatchExpressions corresponds to the JSON schema field "matchExpressions".
	matchExpressions?: [...#KafkaConnectSpecTemplateBuildPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermNamespaceSelectorMatchExpressionsElem] @go(MatchExpressions,[]KafkaConnectSpecTemplateBuildPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermNamespaceSelectorMatchExpressionsElem)

	// MatchLabels corresponds to the JSON schema field "matchLabels".
	matchLabels?: #KafkaConnectSpecTemplateBuildPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermNamespaceSelectorMatchLabels @go(MatchLabels)
}

#KafkaConnectSpecTemplateBuildPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermNamespaceSelectorMatchExpressionsElem: {
	// Key corresponds to the JSON schema field "key".
	key?: null | string @go(Key,*string)

	// Operator corresponds to the JSON schema field "operator".
	operator?: null | string @go(Operator,*string)

	// Values corresponds to the JSON schema field "values".
	values?: [...string] @go(Values,[]string)
}

#KafkaConnectSpecTemplateBuildPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermNamespaceSelectorMatchLabels: [string]: string

#KafkaConnectSpecTemplateBuildPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElem: {
	// LabelSelector corresponds to the JSON schema field "labelSelector".
	labelSelector?: null | #KafkaConnectSpecTemplateBuildPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemLabelSelector @go(LabelSelector,*KafkaConnectSpecTemplateBuildPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemLabelSelector)

	// MatchLabelKeys corresponds to the JSON schema field "matchLabelKeys".
	matchLabelKeys?: [...string] @go(MatchLabelKeys,[]string)

	// MismatchLabelKeys corresponds to the JSON schema field "mismatchLabelKeys".
	mismatchLabelKeys?: [...string] @go(MismatchLabelKeys,[]string)

	// NamespaceSelector corresponds to the JSON schema field "namespaceSelector".
	namespaceSelector?: null | #KafkaConnectSpecTemplateBuildPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemNamespaceSelector @go(NamespaceSelector,*KafkaConnectSpecTemplateBuildPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemNamespaceSelector)

	// Namespaces corresponds to the JSON schema field "namespaces".
	namespaces?: [...string] @go(Namespaces,[]string)

	// TopologyKey corresponds to the JSON schema field "topologyKey".
	topologyKey?: null | string @go(TopologyKey,*string)
}

#KafkaConnectSpecTemplateBuildPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemLabelSelector: {
	// MatchExpressions corresponds to the JSON schema field "matchExpressions".
	matchExpressions?: [...#KafkaConnectSpecTemplateBuildPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemLabelSelectorMatchExpressionsElem] @go(MatchExpressions,[]KafkaConnectSpecTemplateBuildPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemLabelSelectorMatchExpressionsElem)

	// MatchLabels corresponds to the JSON schema field "matchLabels".
	matchLabels?: #KafkaConnectSpecTemplateBuildPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemLabelSelectorMatchLabels @go(MatchLabels)
}

#KafkaConnectSpecTemplateBuildPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemLabelSelectorMatchExpressionsElem: {
	// Key corresponds to the JSON schema field "key".
	key?: null | string @go(Key,*string)

	// Operator corresponds to the JSON schema field "operator".
	operator?: null | string @go(Operator,*string)

	// Values corresponds to the JSON schema field "values".
	values?: [...string] @go(Values,[]string)
}

#KafkaConnectSpecTemplateBuildPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemLabelSelectorMatchLabels: [string]: string

#KafkaConnectSpecTemplateBuildPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemNamespaceSelector: {
	// MatchExpressions corresponds to the JSON schema field "matchExpressions".
	matchExpressions?: [...#KafkaConnectSpecTemplateBuildPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemNamespaceSelectorMatchExpressionsElem] @go(MatchExpressions,[]KafkaConnectSpecTemplateBuildPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemNamespaceSelectorMatchExpressionsElem)

	// MatchLabels corresponds to the JSON schema field "matchLabels".
	matchLabels?: #KafkaConnectSpecTemplateBuildPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemNamespaceSelectorMatchLabels @go(MatchLabels)
}

#KafkaConnectSpecTemplateBuildPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemNamespaceSelectorMatchExpressionsElem: {
	// Key corresponds to the JSON schema field "key".
	key?: null | string @go(Key,*string)

	// Operator corresponds to the JSON schema field "operator".
	operator?: null | string @go(Operator,*string)

	// Values corresponds to the JSON schema field "values".
	values?: [...string] @go(Values,[]string)
}

#KafkaConnectSpecTemplateBuildPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemNamespaceSelectorMatchLabels: [string]: string

#KafkaConnectSpecTemplateBuildPodHostAliasesElem: {
	// Hostnames corresponds to the JSON schema field "hostnames".
	hostnames?: [...string] @go(Hostnames,[]string)

	// Ip corresponds to the JSON schema field "ip".
	ip?: null | string @go(Ip,*string)
}

#KafkaConnectSpecTemplateBuildPodImagePullSecretsElem: {
	// Name corresponds to the JSON schema field "name".
	name?: null | string @go(Name,*string)
}

// Metadata applied to the resource.
#KafkaConnectSpecTemplateBuildPodMetadata: {
	// Annotations added to the Kubernetes resource.
	annotations?: #KafkaConnectSpecTemplateBuildPodMetadataAnnotations @go(Annotations)

	// Labels added to the Kubernetes resource.
	labels?: #KafkaConnectSpecTemplateBuildPodMetadataLabels @go(Labels)
}

// Annotations added to the Kubernetes resource.
#KafkaConnectSpecTemplateBuildPodMetadataAnnotations: {[string]: string}

// Labels added to the Kubernetes resource.
#KafkaConnectSpecTemplateBuildPodMetadataLabels: {[string]: string}

// Configures pod-level security attributes and common container settings.
#KafkaConnectSpecTemplateBuildPodSecurityContext: {
	// FsGroup corresponds to the JSON schema field "fsGroup".
	fsGroup?: null | int32 @go(FsGroup,*int32)

	// FsGroupChangePolicy corresponds to the JSON schema field "fsGroupChangePolicy".
	fsGroupChangePolicy?: null | string @go(FsGroupChangePolicy,*string)

	// RunAsGroup corresponds to the JSON schema field "runAsGroup".
	runAsGroup?: null | int32 @go(RunAsGroup,*int32)

	// RunAsNonRoot corresponds to the JSON schema field "runAsNonRoot".
	runAsNonRoot?: null | bool @go(RunAsNonRoot,*bool)

	// RunAsUser corresponds to the JSON schema field "runAsUser".
	runAsUser?: null | int32 @go(RunAsUser,*int32)

	// SeLinuxOptions corresponds to the JSON schema field "seLinuxOptions".
	seLinuxOptions?: null | #KafkaConnectSpecTemplateBuildPodSecurityContextSeLinuxOptions @go(SeLinuxOptions,*KafkaConnectSpecTemplateBuildPodSecurityContextSeLinuxOptions)

	// SeccompProfile corresponds to the JSON schema field "seccompProfile".
	seccompProfile?: null | #KafkaConnectSpecTemplateBuildPodSecurityContextSeccompProfile @go(SeccompProfile,*KafkaConnectSpecTemplateBuildPodSecurityContextSeccompProfile)

	// SupplementalGroups corresponds to the JSON schema field "supplementalGroups".
	supplementalGroups?: [...int32] @go(SupplementalGroups,[]int32)

	// Sysctls corresponds to the JSON schema field "sysctls".
	sysctls?: [...#KafkaConnectSpecTemplateBuildPodSecurityContextSysctlsElem] @go(Sysctls,[]KafkaConnectSpecTemplateBuildPodSecurityContextSysctlsElem)

	// WindowsOptions corresponds to the JSON schema field "windowsOptions".
	windowsOptions?: null | #KafkaConnectSpecTemplateBuildPodSecurityContextWindowsOptions @go(WindowsOptions,*KafkaConnectSpecTemplateBuildPodSecurityContextWindowsOptions)
}

#KafkaConnectSpecTemplateBuildPodSecurityContextSeLinuxOptions: {
	// Level corresponds to the JSON schema field "level".
	level?: null | string @go(Level,*string)

	// Role corresponds to the JSON schema field "role".
	role?: null | string @go(Role,*string)

	// Type corresponds to the JSON schema field "type".
	type?: null | string @go(Type,*string)

	// User corresponds to the JSON schema field "user".
	user?: null | string @go(User,*string)
}

#KafkaConnectSpecTemplateBuildPodSecurityContextSeccompProfile: {
	// LocalhostProfile corresponds to the JSON schema field "localhostProfile".
	localhostProfile?: null | string @go(LocalhostProfile,*string)

	// Type corresponds to the JSON schema field "type".
	type?: null | string @go(Type,*string)
}

#KafkaConnectSpecTemplateBuildPodSecurityContextSysctlsElem: {
	// Name corresponds to the JSON schema field "name".
	name?: null | string @go(Name,*string)

	// Value corresponds to the JSON schema field "value".
	value?: null | string @go(Value,*string)
}

#KafkaConnectSpecTemplateBuildPodSecurityContextWindowsOptions: {
	// GmsaCredentialSpec corresponds to the JSON schema field "gmsaCredentialSpec".
	gmsaCredentialSpec?: null | string @go(GmsaCredentialSpec,*string)

	// GmsaCredentialSpecName corresponds to the JSON schema field
	// "gmsaCredentialSpecName".
	gmsaCredentialSpecName?: null | string @go(GmsaCredentialSpecName,*string)

	// HostProcess corresponds to the JSON schema field "hostProcess".
	hostProcess?: null | bool @go(HostProcess,*bool)

	// RunAsUserName corresponds to the JSON schema field "runAsUserName".
	runAsUserName?: null | string @go(RunAsUserName,*string)
}

#KafkaConnectSpecTemplateBuildPodTolerationsElem: {
	// Effect corresponds to the JSON schema field "effect".
	effect?: null | string @go(Effect,*string)

	// Key corresponds to the JSON schema field "key".
	key?: null | string @go(Key,*string)

	// Operator corresponds to the JSON schema field "operator".
	operator?: null | string @go(Operator,*string)

	// TolerationSeconds corresponds to the JSON schema field "tolerationSeconds".
	tolerationSeconds?: null | int32 @go(TolerationSeconds,*int32)

	// Value corresponds to the JSON schema field "value".
	value?: null | string @go(Value,*string)
}

#KafkaConnectSpecTemplateBuildPodTopologySpreadConstraintsElem: {
	// LabelSelector corresponds to the JSON schema field "labelSelector".
	labelSelector?: null | #KafkaConnectSpecTemplateBuildPodTopologySpreadConstraintsElemLabelSelector @go(LabelSelector,*KafkaConnectSpecTemplateBuildPodTopologySpreadConstraintsElemLabelSelector)

	// MatchLabelKeys corresponds to the JSON schema field "matchLabelKeys".
	matchLabelKeys?: [...string] @go(MatchLabelKeys,[]string)

	// MaxSkew corresponds to the JSON schema field "maxSkew".
	maxSkew?: null | int32 @go(MaxSkew,*int32)

	// MinDomains corresponds to the JSON schema field "minDomains".
	minDomains?: null | int32 @go(MinDomains,*int32)

	// NodeAffinityPolicy corresponds to the JSON schema field "nodeAffinityPolicy".
	nodeAffinityPolicy?: null | string @go(NodeAffinityPolicy,*string)

	// NodeTaintsPolicy corresponds to the JSON schema field "nodeTaintsPolicy".
	nodeTaintsPolicy?: null | string @go(NodeTaintsPolicy,*string)

	// TopologyKey corresponds to the JSON schema field "topologyKey".
	topologyKey?: null | string @go(TopologyKey,*string)

	// WhenUnsatisfiable corresponds to the JSON schema field "whenUnsatisfiable".
	whenUnsatisfiable?: null | string @go(WhenUnsatisfiable,*string)
}

#KafkaConnectSpecTemplateBuildPodTopologySpreadConstraintsElemLabelSelector: {
	// MatchExpressions corresponds to the JSON schema field "matchExpressions".
	matchExpressions?: [...#KafkaConnectSpecTemplateBuildPodTopologySpreadConstraintsElemLabelSelectorMatchExpressionsElem] @go(MatchExpressions,[]KafkaConnectSpecTemplateBuildPodTopologySpreadConstraintsElemLabelSelectorMatchExpressionsElem)

	// MatchLabels corresponds to the JSON schema field "matchLabels".
	matchLabels?: #KafkaConnectSpecTemplateBuildPodTopologySpreadConstraintsElemLabelSelectorMatchLabels @go(MatchLabels)
}

#KafkaConnectSpecTemplateBuildPodTopologySpreadConstraintsElemLabelSelectorMatchExpressionsElem: {
	// Key corresponds to the JSON schema field "key".
	key?: null | string @go(Key,*string)

	// Operator corresponds to the JSON schema field "operator".
	operator?: null | string @go(Operator,*string)

	// Values corresponds to the JSON schema field "values".
	values?: [...string] @go(Values,[]string)
}

#KafkaConnectSpecTemplateBuildPodTopologySpreadConstraintsElemLabelSelectorMatchLabels: [string]: string

// Template for the Kafka Connect Build service account.
#KafkaConnectSpecTemplateBuildServiceAccount: {
	// Metadata applied to the resource.
	metadata?: null | #KafkaConnectSpecTemplateBuildServiceAccountMetadata @go(Metadata,*KafkaConnectSpecTemplateBuildServiceAccountMetadata)
}

// Metadata applied to the resource.
#KafkaConnectSpecTemplateBuildServiceAccountMetadata: {
	// Annotations added to the Kubernetes resource.
	annotations?: #KafkaConnectSpecTemplateBuildServiceAccountMetadataAnnotations @go(Annotations)

	// Labels added to the Kubernetes resource.
	labels?: #KafkaConnectSpecTemplateBuildServiceAccountMetadataLabels @go(Labels)
}

// Annotations added to the Kubernetes resource.
#KafkaConnectSpecTemplateBuildServiceAccountMetadataAnnotations: {[string]: string}

// Labels added to the Kubernetes resource.
#KafkaConnectSpecTemplateBuildServiceAccountMetadataLabels: {[string]: string}

// Template for the Kafka Connect ClusterRoleBinding.
#KafkaConnectSpecTemplateClusterRoleBinding: {
	// Metadata applied to the resource.
	metadata?: null | #KafkaConnectSpecTemplateClusterRoleBindingMetadata @go(Metadata,*KafkaConnectSpecTemplateClusterRoleBindingMetadata)
}

// Metadata applied to the resource.
#KafkaConnectSpecTemplateClusterRoleBindingMetadata: {
	// Annotations added to the Kubernetes resource.
	annotations?: #KafkaConnectSpecTemplateClusterRoleBindingMetadataAnnotations @go(Annotations)

	// Labels added to the Kubernetes resource.
	labels?: #KafkaConnectSpecTemplateClusterRoleBindingMetadataLabels @go(Labels)
}

// Annotations added to the Kubernetes resource.
#KafkaConnectSpecTemplateClusterRoleBindingMetadataAnnotations: {[string]: string}

// Labels added to the Kubernetes resource.
#KafkaConnectSpecTemplateClusterRoleBindingMetadataLabels: {[string]: string}

// Template for the Kafka Connect container.
#KafkaConnectSpecTemplateConnectContainer: {
	// Environment variables which should be applied to the container.
	env?: [...#KafkaConnectSpecTemplateConnectContainerEnvElem] @go(Env,[]KafkaConnectSpecTemplateConnectContainerEnvElem)

	// Security context for the container.
	securityContext?: null | #KafkaConnectSpecTemplateConnectContainerSecurityContext @go(SecurityContext,*KafkaConnectSpecTemplateConnectContainerSecurityContext)
}

#KafkaConnectSpecTemplateConnectContainerEnvElem: {
	// The environment variable key.
	name?: null | string @go(Name,*string)

	// The environment variable value.
	value?: null | string @go(Value,*string)
}

// Security context for the container.
#KafkaConnectSpecTemplateConnectContainerSecurityContext: {
	// AllowPrivilegeEscalation corresponds to the JSON schema field
	// "allowPrivilegeEscalation".
	allowPrivilegeEscalation?: null | bool @go(AllowPrivilegeEscalation,*bool)

	// Capabilities corresponds to the JSON schema field "capabilities".
	capabilities?: null | #KafkaConnectSpecTemplateConnectContainerSecurityContextCapabilities @go(Capabilities,*KafkaConnectSpecTemplateConnectContainerSecurityContextCapabilities)

	// Privileged corresponds to the JSON schema field "privileged".
	privileged?: null | bool @go(Privileged,*bool)

	// ProcMount corresponds to the JSON schema field "procMount".
	procMount?: null | string @go(ProcMount,*string)

	// ReadOnlyRootFilesystem corresponds to the JSON schema field
	// "readOnlyRootFilesystem".
	readOnlyRootFilesystem?: null | bool @go(ReadOnlyRootFilesystem,*bool)

	// RunAsGroup corresponds to the JSON schema field "runAsGroup".
	runAsGroup?: null | int32 @go(RunAsGroup,*int32)

	// RunAsNonRoot corresponds to the JSON schema field "runAsNonRoot".
	runAsNonRoot?: null | bool @go(RunAsNonRoot,*bool)

	// RunAsUser corresponds to the JSON schema field "runAsUser".
	runAsUser?: null | int32 @go(RunAsUser,*int32)

	// SeLinuxOptions corresponds to the JSON schema field "seLinuxOptions".
	seLinuxOptions?: null | #KafkaConnectSpecTemplateConnectContainerSecurityContextSeLinuxOptions @go(SeLinuxOptions,*KafkaConnectSpecTemplateConnectContainerSecurityContextSeLinuxOptions)

	// SeccompProfile corresponds to the JSON schema field "seccompProfile".
	seccompProfile?: null | #KafkaConnectSpecTemplateConnectContainerSecurityContextSeccompProfile @go(SeccompProfile,*KafkaConnectSpecTemplateConnectContainerSecurityContextSeccompProfile)

	// WindowsOptions corresponds to the JSON schema field "windowsOptions".
	windowsOptions?: null | #KafkaConnectSpecTemplateConnectContainerSecurityContextWindowsOptions @go(WindowsOptions,*KafkaConnectSpecTemplateConnectContainerSecurityContextWindowsOptions)
}

#KafkaConnectSpecTemplateConnectContainerSecurityContextCapabilities: {
	// Add corresponds to the JSON schema field "add".
	add?: [...string] @go(Add,[]string)

	// Drop corresponds to the JSON schema field "drop".
	drop?: [...string] @go(Drop,[]string)
}

#KafkaConnectSpecTemplateConnectContainerSecurityContextSeLinuxOptions: {
	// Level corresponds to the JSON schema field "level".
	level?: null | string @go(Level,*string)

	// Role corresponds to the JSON schema field "role".
	role?: null | string @go(Role,*string)

	// Type corresponds to the JSON schema field "type".
	type?: null | string @go(Type,*string)

	// User corresponds to the JSON schema field "user".
	user?: null | string @go(User,*string)
}

#KafkaConnectSpecTemplateConnectContainerSecurityContextSeccompProfile: {
	// LocalhostProfile corresponds to the JSON schema field "localhostProfile".
	localhostProfile?: null | string @go(LocalhostProfile,*string)

	// Type corresponds to the JSON schema field "type".
	type?: null | string @go(Type,*string)
}

#KafkaConnectSpecTemplateConnectContainerSecurityContextWindowsOptions: {
	// GmsaCredentialSpec corresponds to the JSON schema field "gmsaCredentialSpec".
	gmsaCredentialSpec?: null | string @go(GmsaCredentialSpec,*string)

	// GmsaCredentialSpecName corresponds to the JSON schema field
	// "gmsaCredentialSpecName".
	gmsaCredentialSpecName?: null | string @go(GmsaCredentialSpecName,*string)

	// HostProcess corresponds to the JSON schema field "hostProcess".
	hostProcess?: null | bool @go(HostProcess,*bool)

	// RunAsUserName corresponds to the JSON schema field "runAsUserName".
	runAsUserName?: null | string @go(RunAsUserName,*string)
}

// Template for Kafka Connect `Deployment`.
#KafkaConnectSpecTemplateDeployment: {
	// Pod replacement strategy for deployment configuration changes. Valid values are
	// `RollingUpdate` and `Recreate`. Defaults to `RollingUpdate`.
	deploymentStrategy?: null | #KafkaConnectSpecTemplateDeploymentDeploymentStrategy @go(DeploymentStrategy,*KafkaConnectSpecTemplateDeploymentDeploymentStrategy)

	// Metadata applied to the resource.
	metadata?: null | #KafkaConnectSpecTemplateDeploymentMetadata @go(Metadata,*KafkaConnectSpecTemplateDeploymentMetadata)
}

#KafkaConnectSpecTemplateDeploymentDeploymentStrategy: _ // #enumKafkaConnectSpecTemplateDeploymentDeploymentStrategy

#enumKafkaConnectSpecTemplateDeploymentDeploymentStrategy:
	#KafkaConnectSpecTemplateDeploymentDeploymentStrategyRecreate |
	#KafkaConnectSpecTemplateDeploymentDeploymentStrategyRollingUpdate

#KafkaConnectSpecTemplateDeploymentDeploymentStrategyRecreate: #KafkaConnectSpecTemplateDeploymentDeploymentStrategy & "Recreate"

#KafkaConnectSpecTemplateDeploymentDeploymentStrategyRollingUpdate: #KafkaConnectSpecTemplateDeploymentDeploymentStrategy & "RollingUpdate"

// Metadata applied to the resource.
#KafkaConnectSpecTemplateDeploymentMetadata: {
	// Annotations added to the Kubernetes resource.
	annotations?: #KafkaConnectSpecTemplateDeploymentMetadataAnnotations @go(Annotations)

	// Labels added to the Kubernetes resource.
	labels?: #KafkaConnectSpecTemplateDeploymentMetadataLabels @go(Labels)
}

// Annotations added to the Kubernetes resource.
#KafkaConnectSpecTemplateDeploymentMetadataAnnotations: {[string]: string}

// Labels added to the Kubernetes resource.
#KafkaConnectSpecTemplateDeploymentMetadataLabels: {[string]: string}

// Template for Kafka Connect headless `Service`.
#KafkaConnectSpecTemplateHeadlessService: {
	// Specifies the IP Families used by the service. Available options are `IPv4` and
	// `IPv6`. If unspecified, Kubernetes will choose the default value based on the
	// `ipFamilyPolicy` setting.
	ipFamilies?: [...#KafkaConnectSpecTemplateHeadlessServiceIpFamiliesElem] @go(IpFamilies,[]KafkaConnectSpecTemplateHeadlessServiceIpFamiliesElem)

	// Specifies the IP Family Policy used by the service. Available options are
	// `SingleStack`, `PreferDualStack` and `RequireDualStack`. `SingleStack` is for a
	// single IP family. `PreferDualStack` is for two IP families on dual-stack
	// configured clusters or a single IP family on single-stack clusters.
	// `RequireDualStack` fails unless there are two IP families on dual-stack
	// configured clusters. If unspecified, Kubernetes will choose the default value
	// based on the service type.
	ipFamilyPolicy?: null | #KafkaConnectSpecTemplateHeadlessServiceIpFamilyPolicy @go(IpFamilyPolicy,*KafkaConnectSpecTemplateHeadlessServiceIpFamilyPolicy)

	// Metadata applied to the resource.
	metadata?: null | #KafkaConnectSpecTemplateHeadlessServiceMetadata @go(Metadata,*KafkaConnectSpecTemplateHeadlessServiceMetadata)
}

#KafkaConnectSpecTemplateHeadlessServiceIpFamiliesElem: _ // #enumKafkaConnectSpecTemplateHeadlessServiceIpFamiliesElem

#enumKafkaConnectSpecTemplateHeadlessServiceIpFamiliesElem:
	#KafkaConnectSpecTemplateHeadlessServiceIpFamiliesElemIPv4 |
	#KafkaConnectSpecTemplateHeadlessServiceIpFamiliesElemIPv6

#KafkaConnectSpecTemplateHeadlessServiceIpFamiliesElemIPv4: #KafkaConnectSpecTemplateHeadlessServiceIpFamiliesElem & "IPv4"

#KafkaConnectSpecTemplateHeadlessServiceIpFamiliesElemIPv6: #KafkaConnectSpecTemplateHeadlessServiceIpFamiliesElem & "IPv6"

#KafkaConnectSpecTemplateHeadlessServiceIpFamilyPolicy: _ // #enumKafkaConnectSpecTemplateHeadlessServiceIpFamilyPolicy

#enumKafkaConnectSpecTemplateHeadlessServiceIpFamilyPolicy:
	#KafkaConnectSpecTemplateHeadlessServiceIpFamilyPolicyPreferDualStack |
	#KafkaConnectSpecTemplateHeadlessServiceIpFamilyPolicyRequireDualStack |
	#KafkaConnectSpecTemplateHeadlessServiceIpFamilyPolicySingleStack

#KafkaConnectSpecTemplateHeadlessServiceIpFamilyPolicyPreferDualStack: #KafkaConnectSpecTemplateHeadlessServiceIpFamilyPolicy & "PreferDualStack"

#KafkaConnectSpecTemplateHeadlessServiceIpFamilyPolicyRequireDualStack: #KafkaConnectSpecTemplateHeadlessServiceIpFamilyPolicy & "RequireDualStack"

#KafkaConnectSpecTemplateHeadlessServiceIpFamilyPolicySingleStack: #KafkaConnectSpecTemplateHeadlessServiceIpFamilyPolicy & "SingleStack"

// Metadata applied to the resource.
#KafkaConnectSpecTemplateHeadlessServiceMetadata: {
	// Annotations added to the Kubernetes resource.
	annotations?: #KafkaConnectSpecTemplateHeadlessServiceMetadataAnnotations @go(Annotations)

	// Labels added to the Kubernetes resource.
	labels?: #KafkaConnectSpecTemplateHeadlessServiceMetadataLabels @go(Labels)
}

// Annotations added to the Kubernetes resource.
#KafkaConnectSpecTemplateHeadlessServiceMetadataAnnotations: {[string]: string}

// Labels added to the Kubernetes resource.
#KafkaConnectSpecTemplateHeadlessServiceMetadataLabels: {[string]: string}

// Template for the Kafka init container.
#KafkaConnectSpecTemplateInitContainer: {
	// Environment variables which should be applied to the container.
	env?: [...#KafkaConnectSpecTemplateInitContainerEnvElem] @go(Env,[]KafkaConnectSpecTemplateInitContainerEnvElem)

	// Security context for the container.
	securityContext?: null | #KafkaConnectSpecTemplateInitContainerSecurityContext @go(SecurityContext,*KafkaConnectSpecTemplateInitContainerSecurityContext)
}

#KafkaConnectSpecTemplateInitContainerEnvElem: {
	// The environment variable key.
	name?: null | string @go(Name,*string)

	// The environment variable value.
	value?: null | string @go(Value,*string)
}

// Security context for the container.
#KafkaConnectSpecTemplateInitContainerSecurityContext: {
	// AllowPrivilegeEscalation corresponds to the JSON schema field
	// "allowPrivilegeEscalation".
	allowPrivilegeEscalation?: null | bool @go(AllowPrivilegeEscalation,*bool)

	// Capabilities corresponds to the JSON schema field "capabilities".
	capabilities?: null | #KafkaConnectSpecTemplateInitContainerSecurityContextCapabilities @go(Capabilities,*KafkaConnectSpecTemplateInitContainerSecurityContextCapabilities)

	// Privileged corresponds to the JSON schema field "privileged".
	privileged?: null | bool @go(Privileged,*bool)

	// ProcMount corresponds to the JSON schema field "procMount".
	procMount?: null | string @go(ProcMount,*string)

	// ReadOnlyRootFilesystem corresponds to the JSON schema field
	// "readOnlyRootFilesystem".
	readOnlyRootFilesystem?: null | bool @go(ReadOnlyRootFilesystem,*bool)

	// RunAsGroup corresponds to the JSON schema field "runAsGroup".
	runAsGroup?: null | int32 @go(RunAsGroup,*int32)

	// RunAsNonRoot corresponds to the JSON schema field "runAsNonRoot".
	runAsNonRoot?: null | bool @go(RunAsNonRoot,*bool)

	// RunAsUser corresponds to the JSON schema field "runAsUser".
	runAsUser?: null | int32 @go(RunAsUser,*int32)

	// SeLinuxOptions corresponds to the JSON schema field "seLinuxOptions".
	seLinuxOptions?: null | #KafkaConnectSpecTemplateInitContainerSecurityContextSeLinuxOptions @go(SeLinuxOptions,*KafkaConnectSpecTemplateInitContainerSecurityContextSeLinuxOptions)

	// SeccompProfile corresponds to the JSON schema field "seccompProfile".
	seccompProfile?: null | #KafkaConnectSpecTemplateInitContainerSecurityContextSeccompProfile @go(SeccompProfile,*KafkaConnectSpecTemplateInitContainerSecurityContextSeccompProfile)

	// WindowsOptions corresponds to the JSON schema field "windowsOptions".
	windowsOptions?: null | #KafkaConnectSpecTemplateInitContainerSecurityContextWindowsOptions @go(WindowsOptions,*KafkaConnectSpecTemplateInitContainerSecurityContextWindowsOptions)
}

#KafkaConnectSpecTemplateInitContainerSecurityContextCapabilities: {
	// Add corresponds to the JSON schema field "add".
	add?: [...string] @go(Add,[]string)

	// Drop corresponds to the JSON schema field "drop".
	drop?: [...string] @go(Drop,[]string)
}

#KafkaConnectSpecTemplateInitContainerSecurityContextSeLinuxOptions: {
	// Level corresponds to the JSON schema field "level".
	level?: null | string @go(Level,*string)

	// Role corresponds to the JSON schema field "role".
	role?: null | string @go(Role,*string)

	// Type corresponds to the JSON schema field "type".
	type?: null | string @go(Type,*string)

	// User corresponds to the JSON schema field "user".
	user?: null | string @go(User,*string)
}

#KafkaConnectSpecTemplateInitContainerSecurityContextSeccompProfile: {
	// LocalhostProfile corresponds to the JSON schema field "localhostProfile".
	localhostProfile?: null | string @go(LocalhostProfile,*string)

	// Type corresponds to the JSON schema field "type".
	type?: null | string @go(Type,*string)
}

#KafkaConnectSpecTemplateInitContainerSecurityContextWindowsOptions: {
	// GmsaCredentialSpec corresponds to the JSON schema field "gmsaCredentialSpec".
	gmsaCredentialSpec?: null | string @go(GmsaCredentialSpec,*string)

	// GmsaCredentialSpecName corresponds to the JSON schema field
	// "gmsaCredentialSpecName".
	gmsaCredentialSpecName?: null | string @go(GmsaCredentialSpecName,*string)

	// HostProcess corresponds to the JSON schema field "hostProcess".
	hostProcess?: null | bool @go(HostProcess,*bool)

	// RunAsUserName corresponds to the JSON schema field "runAsUserName".
	runAsUserName?: null | string @go(RunAsUserName,*string)
}

// Template for Secret of the Kafka Connect Cluster JMX authentication.
#KafkaConnectSpecTemplateJmxSecret: {
	// Metadata applied to the resource.
	metadata?: null | #KafkaConnectSpecTemplateJmxSecretMetadata @go(Metadata,*KafkaConnectSpecTemplateJmxSecretMetadata)
}

// Metadata applied to the resource.
#KafkaConnectSpecTemplateJmxSecretMetadata: {
	// Annotations added to the Kubernetes resource.
	annotations?: #KafkaConnectSpecTemplateJmxSecretMetadataAnnotations @go(Annotations)

	// Labels added to the Kubernetes resource.
	labels?: #KafkaConnectSpecTemplateJmxSecretMetadataLabels @go(Labels)
}

// Annotations added to the Kubernetes resource.
#KafkaConnectSpecTemplateJmxSecretMetadataAnnotations: {[string]: string}

// Labels added to the Kubernetes resource.
#KafkaConnectSpecTemplateJmxSecretMetadataLabels: {[string]: string}

// Template for Kafka Connect `Pods`.
#KafkaConnectSpecTemplatePod: {
	// The pod's affinity rules.
	affinity?: null | #KafkaConnectSpecTemplatePodAffinity @go(Affinity,*KafkaConnectSpecTemplatePodAffinity)

	// Indicates whether information about services should be injected into Pod's
	// environment variables.
	enableServiceLinks?: null | bool @go(EnableServiceLinks,*bool)

	// The pod's HostAliases. HostAliases is an optional list of hosts and IPs that
	// will be injected into the Pod's hosts file if specified.
	hostAliases?: [...#KafkaConnectSpecTemplatePodHostAliasesElem] @go(HostAliases,[]KafkaConnectSpecTemplatePodHostAliasesElem)

	// List of references to secrets in the same namespace to use for pulling any of
	// the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment
	// variable in Cluster Operator and the `imagePullSecrets` option are specified,
	// only the `imagePullSecrets` variable is used and the
	// `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored.
	imagePullSecrets?: [...#KafkaConnectSpecTemplatePodImagePullSecretsElem] @go(ImagePullSecrets,[]KafkaConnectSpecTemplatePodImagePullSecretsElem)

	// Metadata applied to the resource.
	metadata?: null | #KafkaConnectSpecTemplatePodMetadata @go(Metadata,*KafkaConnectSpecTemplatePodMetadata)

	// The name of the priority class used to assign priority to the pods.
	priorityClassName?: null | string @go(PriorityClassName,*string)

	// The name of the scheduler used to dispatch this `Pod`. If not specified, the
	// default scheduler will be used.
	schedulerName?: null | string @go(SchedulerName,*string)

	// Configures pod-level security attributes and common container settings.
	securityContext?: null | #KafkaConnectSpecTemplatePodSecurityContext @go(SecurityContext,*KafkaConnectSpecTemplatePodSecurityContext)

	// The grace period is the duration in seconds after the processes running in the
	// pod are sent a termination signal, and the time when the processes are forcibly
	// halted with a kill signal. Set this value to longer than the expected cleanup
	// time for your process. Value must be a non-negative integer. A zero value
	// indicates delete immediately. You might need to increase the grace period for
	// very large Kafka clusters, so that the Kafka brokers have enough time to
	// transfer their work to another broker before they are terminated. Defaults to
	// 30 seconds.
	terminationGracePeriodSeconds?: null | int32 @go(TerminationGracePeriodSeconds,*int32)

	// Defines the total amount (for example `1Gi`) of local storage required for
	// temporary EmptyDir volume (`/tmp`). Default value is `5Mi`.
	tmpDirSizeLimit?: null | string @go(TmpDirSizeLimit,*string)

	// The pod's tolerations.
	tolerations?: [...#KafkaConnectSpecTemplatePodTolerationsElem] @go(Tolerations,[]KafkaConnectSpecTemplatePodTolerationsElem)

	// The pod's topology spread constraints.
	topologySpreadConstraints?: [...#KafkaConnectSpecTemplatePodTopologySpreadConstraintsElem] @go(TopologySpreadConstraints,[]KafkaConnectSpecTemplatePodTopologySpreadConstraintsElem)
}

// The pod's affinity rules.
#KafkaConnectSpecTemplatePodAffinity: {
	// NodeAffinity corresponds to the JSON schema field "nodeAffinity".
	nodeAffinity?: null | #KafkaConnectSpecTemplatePodAffinityNodeAffinity @go(NodeAffinity,*KafkaConnectSpecTemplatePodAffinityNodeAffinity)

	// PodAffinity corresponds to the JSON schema field "podAffinity".
	podAffinity?: null | #KafkaConnectSpecTemplatePodAffinityPodAffinity @go(PodAffinity,*KafkaConnectSpecTemplatePodAffinityPodAffinity)

	// PodAntiAffinity corresponds to the JSON schema field "podAntiAffinity".
	podAntiAffinity?: null | #KafkaConnectSpecTemplatePodAffinityPodAntiAffinity @go(PodAntiAffinity,*KafkaConnectSpecTemplatePodAffinityPodAntiAffinity)
}

#KafkaConnectSpecTemplatePodAffinityNodeAffinity: {
	// PreferredDuringSchedulingIgnoredDuringExecution corresponds to the JSON schema
	// field "preferredDuringSchedulingIgnoredDuringExecution".
	preferredDuringSchedulingIgnoredDuringExecution?: [...#KafkaConnectSpecTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionElem] @go(PreferredDuringSchedulingIgnoredDuringExecution,[]KafkaConnectSpecTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionElem)

	// RequiredDuringSchedulingIgnoredDuringExecution corresponds to the JSON schema
	// field "requiredDuringSchedulingIgnoredDuringExecution".
	requiredDuringSchedulingIgnoredDuringExecution?: null | #KafkaConnectSpecTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution @go(RequiredDuringSchedulingIgnoredDuringExecution,*KafkaConnectSpecTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution)
}

#KafkaConnectSpecTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionElem: {
	// Preference corresponds to the JSON schema field "preference".
	preference?: null | #KafkaConnectSpecTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPreference @go(Preference,*KafkaConnectSpecTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPreference)

	// Weight corresponds to the JSON schema field "weight".
	weight?: null | int32 @go(Weight,*int32)
}

#KafkaConnectSpecTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPreference: {
	// MatchExpressions corresponds to the JSON schema field "matchExpressions".
	matchExpressions?: [...#KafkaConnectSpecTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPreferenceMatchExpressionsElem] @go(MatchExpressions,[]KafkaConnectSpecTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPreferenceMatchExpressionsElem)

	// MatchFields corresponds to the JSON schema field "matchFields".
	matchFields?: [...#KafkaConnectSpecTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPreferenceMatchFieldsElem] @go(MatchFields,[]KafkaConnectSpecTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPreferenceMatchFieldsElem)
}

#KafkaConnectSpecTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPreferenceMatchExpressionsElem: {
	// Key corresponds to the JSON schema field "key".
	key?: null | string @go(Key,*string)

	// Operator corresponds to the JSON schema field "operator".
	operator?: null | string @go(Operator,*string)

	// Values corresponds to the JSON schema field "values".
	values?: [...string] @go(Values,[]string)
}

#KafkaConnectSpecTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPreferenceMatchFieldsElem: {
	// Key corresponds to the JSON schema field "key".
	key?: null | string @go(Key,*string)

	// Operator corresponds to the JSON schema field "operator".
	operator?: null | string @go(Operator,*string)

	// Values corresponds to the JSON schema field "values".
	values?: [...string] @go(Values,[]string)
}

#KafkaConnectSpecTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution: {
	// NodeSelectorTerms corresponds to the JSON schema field "nodeSelectorTerms".
	nodeSelectorTerms?: [...#KafkaConnectSpecTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsElem] @go(NodeSelectorTerms,[]KafkaConnectSpecTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsElem)
}

#KafkaConnectSpecTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsElem: {
	// MatchExpressions corresponds to the JSON schema field "matchExpressions".
	matchExpressions?: [...#KafkaConnectSpecTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsElemMatchExpressionsElem] @go(MatchExpressions,[]KafkaConnectSpecTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsElemMatchExpressionsElem)

	// MatchFields corresponds to the JSON schema field "matchFields".
	matchFields?: [...#KafkaConnectSpecTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsElemMatchFieldsElem] @go(MatchFields,[]KafkaConnectSpecTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsElemMatchFieldsElem)
}

#KafkaConnectSpecTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsElemMatchExpressionsElem: {
	// Key corresponds to the JSON schema field "key".
	key?: null | string @go(Key,*string)

	// Operator corresponds to the JSON schema field "operator".
	operator?: null | string @go(Operator,*string)

	// Values corresponds to the JSON schema field "values".
	values?: [...string] @go(Values,[]string)
}

#KafkaConnectSpecTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsElemMatchFieldsElem: {
	// Key corresponds to the JSON schema field "key".
	key?: null | string @go(Key,*string)

	// Operator corresponds to the JSON schema field "operator".
	operator?: null | string @go(Operator,*string)

	// Values corresponds to the JSON schema field "values".
	values?: [...string] @go(Values,[]string)
}

#KafkaConnectSpecTemplatePodAffinityPodAffinity: {
	// PreferredDuringSchedulingIgnoredDuringExecution corresponds to the JSON schema
	// field "preferredDuringSchedulingIgnoredDuringExecution".
	preferredDuringSchedulingIgnoredDuringExecution?: [...#KafkaConnectSpecTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElem] @go(PreferredDuringSchedulingIgnoredDuringExecution,[]KafkaConnectSpecTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElem)

	// RequiredDuringSchedulingIgnoredDuringExecution corresponds to the JSON schema
	// field "requiredDuringSchedulingIgnoredDuringExecution".
	requiredDuringSchedulingIgnoredDuringExecution?: [...#KafkaConnectSpecTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElem] @go(RequiredDuringSchedulingIgnoredDuringExecution,[]KafkaConnectSpecTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElem)
}

#KafkaConnectSpecTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElem: {
	// PodAffinityTerm corresponds to the JSON schema field "podAffinityTerm".
	podAffinityTerm?: null | #KafkaConnectSpecTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTerm @go(PodAffinityTerm,*KafkaConnectSpecTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTerm)

	// Weight corresponds to the JSON schema field "weight".
	weight?: null | int32 @go(Weight,*int32)
}

#KafkaConnectSpecTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTerm: {
	// LabelSelector corresponds to the JSON schema field "labelSelector".
	labelSelector?: null | #KafkaConnectSpecTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermLabelSelector @go(LabelSelector,*KafkaConnectSpecTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermLabelSelector)

	// MatchLabelKeys corresponds to the JSON schema field "matchLabelKeys".
	matchLabelKeys?: [...string] @go(MatchLabelKeys,[]string)

	// MismatchLabelKeys corresponds to the JSON schema field "mismatchLabelKeys".
	mismatchLabelKeys?: [...string] @go(MismatchLabelKeys,[]string)

	// NamespaceSelector corresponds to the JSON schema field "namespaceSelector".
	namespaceSelector?: null | #KafkaConnectSpecTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermNamespaceSelector @go(NamespaceSelector,*KafkaConnectSpecTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermNamespaceSelector)

	// Namespaces corresponds to the JSON schema field "namespaces".
	namespaces?: [...string] @go(Namespaces,[]string)

	// TopologyKey corresponds to the JSON schema field "topologyKey".
	topologyKey?: null | string @go(TopologyKey,*string)
}

#KafkaConnectSpecTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermLabelSelector: {
	// MatchExpressions corresponds to the JSON schema field "matchExpressions".
	matchExpressions?: [...#KafkaConnectSpecTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermLabelSelectorMatchExpressionsElem] @go(MatchExpressions,[]KafkaConnectSpecTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermLabelSelectorMatchExpressionsElem)

	// MatchLabels corresponds to the JSON schema field "matchLabels".
	matchLabels?: #KafkaConnectSpecTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermLabelSelectorMatchLabels @go(MatchLabels)
}

#KafkaConnectSpecTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermLabelSelectorMatchExpressionsElem: {
	// Key corresponds to the JSON schema field "key".
	key?: null | string @go(Key,*string)

	// Operator corresponds to the JSON schema field "operator".
	operator?: null | string @go(Operator,*string)

	// Values corresponds to the JSON schema field "values".
	values?: [...string] @go(Values,[]string)
}

#KafkaConnectSpecTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermLabelSelectorMatchLabels: [string]: string

#KafkaConnectSpecTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermNamespaceSelector: {
	// MatchExpressions corresponds to the JSON schema field "matchExpressions".
	matchExpressions?: [...#KafkaConnectSpecTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermNamespaceSelectorMatchExpressionsElem] @go(MatchExpressions,[]KafkaConnectSpecTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermNamespaceSelectorMatchExpressionsElem)

	// MatchLabels corresponds to the JSON schema field "matchLabels".
	matchLabels?: #KafkaConnectSpecTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermNamespaceSelectorMatchLabels @go(MatchLabels)
}

#KafkaConnectSpecTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermNamespaceSelectorMatchExpressionsElem: {
	// Key corresponds to the JSON schema field "key".
	key?: null | string @go(Key,*string)

	// Operator corresponds to the JSON schema field "operator".
	operator?: null | string @go(Operator,*string)

	// Values corresponds to the JSON schema field "values".
	values?: [...string] @go(Values,[]string)
}

#KafkaConnectSpecTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermNamespaceSelectorMatchLabels: [string]: string

#KafkaConnectSpecTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElem: {
	// LabelSelector corresponds to the JSON schema field "labelSelector".
	labelSelector?: null | #KafkaConnectSpecTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemLabelSelector @go(LabelSelector,*KafkaConnectSpecTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemLabelSelector)

	// MatchLabelKeys corresponds to the JSON schema field "matchLabelKeys".
	matchLabelKeys?: [...string] @go(MatchLabelKeys,[]string)

	// MismatchLabelKeys corresponds to the JSON schema field "mismatchLabelKeys".
	mismatchLabelKeys?: [...string] @go(MismatchLabelKeys,[]string)

	// NamespaceSelector corresponds to the JSON schema field "namespaceSelector".
	namespaceSelector?: null | #KafkaConnectSpecTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemNamespaceSelector @go(NamespaceSelector,*KafkaConnectSpecTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemNamespaceSelector)

	// Namespaces corresponds to the JSON schema field "namespaces".
	namespaces?: [...string] @go(Namespaces,[]string)

	// TopologyKey corresponds to the JSON schema field "topologyKey".
	topologyKey?: null | string @go(TopologyKey,*string)
}

#KafkaConnectSpecTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemLabelSelector: {
	// MatchExpressions corresponds to the JSON schema field "matchExpressions".
	matchExpressions?: [...#KafkaConnectSpecTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemLabelSelectorMatchExpressionsElem] @go(MatchExpressions,[]KafkaConnectSpecTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemLabelSelectorMatchExpressionsElem)

	// MatchLabels corresponds to the JSON schema field "matchLabels".
	matchLabels?: #KafkaConnectSpecTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemLabelSelectorMatchLabels @go(MatchLabels)
}

#KafkaConnectSpecTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemLabelSelectorMatchExpressionsElem: {
	// Key corresponds to the JSON schema field "key".
	key?: null | string @go(Key,*string)

	// Operator corresponds to the JSON schema field "operator".
	operator?: null | string @go(Operator,*string)

	// Values corresponds to the JSON schema field "values".
	values?: [...string] @go(Values,[]string)
}

#KafkaConnectSpecTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemLabelSelectorMatchLabels: [string]: string

#KafkaConnectSpecTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemNamespaceSelector: {
	// MatchExpressions corresponds to the JSON schema field "matchExpressions".
	matchExpressions?: [...#KafkaConnectSpecTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemNamespaceSelectorMatchExpressionsElem] @go(MatchExpressions,[]KafkaConnectSpecTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemNamespaceSelectorMatchExpressionsElem)

	// MatchLabels corresponds to the JSON schema field "matchLabels".
	matchLabels?: #KafkaConnectSpecTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemNamespaceSelectorMatchLabels @go(MatchLabels)
}

#KafkaConnectSpecTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemNamespaceSelectorMatchExpressionsElem: {
	// Key corresponds to the JSON schema field "key".
	key?: null | string @go(Key,*string)

	// Operator corresponds to the JSON schema field "operator".
	operator?: null | string @go(Operator,*string)

	// Values corresponds to the JSON schema field "values".
	values?: [...string] @go(Values,[]string)
}

#KafkaConnectSpecTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemNamespaceSelectorMatchLabels: [string]: string

#KafkaConnectSpecTemplatePodAffinityPodAntiAffinity: {
	// PreferredDuringSchedulingIgnoredDuringExecution corresponds to the JSON schema
	// field "preferredDuringSchedulingIgnoredDuringExecution".
	preferredDuringSchedulingIgnoredDuringExecution?: [...#KafkaConnectSpecTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElem] @go(PreferredDuringSchedulingIgnoredDuringExecution,[]KafkaConnectSpecTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElem)

	// RequiredDuringSchedulingIgnoredDuringExecution corresponds to the JSON schema
	// field "requiredDuringSchedulingIgnoredDuringExecution".
	requiredDuringSchedulingIgnoredDuringExecution?: [...#KafkaConnectSpecTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElem] @go(RequiredDuringSchedulingIgnoredDuringExecution,[]KafkaConnectSpecTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElem)
}

#KafkaConnectSpecTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElem: {
	// PodAffinityTerm corresponds to the JSON schema field "podAffinityTerm".
	podAffinityTerm?: null | #KafkaConnectSpecTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTerm @go(PodAffinityTerm,*KafkaConnectSpecTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTerm)

	// Weight corresponds to the JSON schema field "weight".
	weight?: null | int32 @go(Weight,*int32)
}

#KafkaConnectSpecTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTerm: {
	// LabelSelector corresponds to the JSON schema field "labelSelector".
	labelSelector?: null | #KafkaConnectSpecTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermLabelSelector @go(LabelSelector,*KafkaConnectSpecTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermLabelSelector)

	// MatchLabelKeys corresponds to the JSON schema field "matchLabelKeys".
	matchLabelKeys?: [...string] @go(MatchLabelKeys,[]string)

	// MismatchLabelKeys corresponds to the JSON schema field "mismatchLabelKeys".
	mismatchLabelKeys?: [...string] @go(MismatchLabelKeys,[]string)

	// NamespaceSelector corresponds to the JSON schema field "namespaceSelector".
	namespaceSelector?: null | #KafkaConnectSpecTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermNamespaceSelector @go(NamespaceSelector,*KafkaConnectSpecTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermNamespaceSelector)

	// Namespaces corresponds to the JSON schema field "namespaces".
	namespaces?: [...string] @go(Namespaces,[]string)

	// TopologyKey corresponds to the JSON schema field "topologyKey".
	topologyKey?: null | string @go(TopologyKey,*string)
}

#KafkaConnectSpecTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermLabelSelector: {
	// MatchExpressions corresponds to the JSON schema field "matchExpressions".
	matchExpressions?: [...#KafkaConnectSpecTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermLabelSelectorMatchExpressionsElem] @go(MatchExpressions,[]KafkaConnectSpecTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermLabelSelectorMatchExpressionsElem)

	// MatchLabels corresponds to the JSON schema field "matchLabels".
	matchLabels?: #KafkaConnectSpecTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermLabelSelectorMatchLabels @go(MatchLabels)
}

#KafkaConnectSpecTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermLabelSelectorMatchExpressionsElem: {
	// Key corresponds to the JSON schema field "key".
	key?: null | string @go(Key,*string)

	// Operator corresponds to the JSON schema field "operator".
	operator?: null | string @go(Operator,*string)

	// Values corresponds to the JSON schema field "values".
	values?: [...string] @go(Values,[]string)
}

#KafkaConnectSpecTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermLabelSelectorMatchLabels: [string]: string

#KafkaConnectSpecTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermNamespaceSelector: {
	// MatchExpressions corresponds to the JSON schema field "matchExpressions".
	matchExpressions?: [...#KafkaConnectSpecTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermNamespaceSelectorMatchExpressionsElem] @go(MatchExpressions,[]KafkaConnectSpecTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermNamespaceSelectorMatchExpressionsElem)

	// MatchLabels corresponds to the JSON schema field "matchLabels".
	matchLabels?: #KafkaConnectSpecTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermNamespaceSelectorMatchLabels @go(MatchLabels)
}

#KafkaConnectSpecTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermNamespaceSelectorMatchExpressionsElem: {
	// Key corresponds to the JSON schema field "key".
	key?: null | string @go(Key,*string)

	// Operator corresponds to the JSON schema field "operator".
	operator?: null | string @go(Operator,*string)

	// Values corresponds to the JSON schema field "values".
	values?: [...string] @go(Values,[]string)
}

#KafkaConnectSpecTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermNamespaceSelectorMatchLabels: [string]: string

#KafkaConnectSpecTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElem: {
	// LabelSelector corresponds to the JSON schema field "labelSelector".
	labelSelector?: null | #KafkaConnectSpecTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemLabelSelector @go(LabelSelector,*KafkaConnectSpecTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemLabelSelector)

	// MatchLabelKeys corresponds to the JSON schema field "matchLabelKeys".
	matchLabelKeys?: [...string] @go(MatchLabelKeys,[]string)

	// MismatchLabelKeys corresponds to the JSON schema field "mismatchLabelKeys".
	mismatchLabelKeys?: [...string] @go(MismatchLabelKeys,[]string)

	// NamespaceSelector corresponds to the JSON schema field "namespaceSelector".
	namespaceSelector?: null | #KafkaConnectSpecTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemNamespaceSelector @go(NamespaceSelector,*KafkaConnectSpecTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemNamespaceSelector)

	// Namespaces corresponds to the JSON schema field "namespaces".
	namespaces?: [...string] @go(Namespaces,[]string)

	// TopologyKey corresponds to the JSON schema field "topologyKey".
	topologyKey?: null | string @go(TopologyKey,*string)
}

#KafkaConnectSpecTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemLabelSelector: {
	// MatchExpressions corresponds to the JSON schema field "matchExpressions".
	matchExpressions?: [...#KafkaConnectSpecTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemLabelSelectorMatchExpressionsElem] @go(MatchExpressions,[]KafkaConnectSpecTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemLabelSelectorMatchExpressionsElem)

	// MatchLabels corresponds to the JSON schema field "matchLabels".
	matchLabels?: #KafkaConnectSpecTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemLabelSelectorMatchLabels @go(MatchLabels)
}

#KafkaConnectSpecTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemLabelSelectorMatchExpressionsElem: {
	// Key corresponds to the JSON schema field "key".
	key?: null | string @go(Key,*string)

	// Operator corresponds to the JSON schema field "operator".
	operator?: null | string @go(Operator,*string)

	// Values corresponds to the JSON schema field "values".
	values?: [...string] @go(Values,[]string)
}

#KafkaConnectSpecTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemLabelSelectorMatchLabels: [string]: string

#KafkaConnectSpecTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemNamespaceSelector: {
	// MatchExpressions corresponds to the JSON schema field "matchExpressions".
	matchExpressions?: [...#KafkaConnectSpecTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemNamespaceSelectorMatchExpressionsElem] @go(MatchExpressions,[]KafkaConnectSpecTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemNamespaceSelectorMatchExpressionsElem)

	// MatchLabels corresponds to the JSON schema field "matchLabels".
	matchLabels?: #KafkaConnectSpecTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemNamespaceSelectorMatchLabels @go(MatchLabels)
}

#KafkaConnectSpecTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemNamespaceSelectorMatchExpressionsElem: {
	// Key corresponds to the JSON schema field "key".
	key?: null | string @go(Key,*string)

	// Operator corresponds to the JSON schema field "operator".
	operator?: null | string @go(Operator,*string)

	// Values corresponds to the JSON schema field "values".
	values?: [...string] @go(Values,[]string)
}

#KafkaConnectSpecTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemNamespaceSelectorMatchLabels: [string]: string

// Template for Kafka Connect `PodDisruptionBudget`.
#KafkaConnectSpecTemplatePodDisruptionBudget: {
	// Maximum number of unavailable pods to allow automatic Pod eviction. A Pod
	// eviction is allowed when the `maxUnavailable` number of pods or fewer are
	// unavailable after the eviction. Setting this value to 0 prevents all voluntary
	// evictions, so the pods must be evicted manually. Defaults to 1.
	maxUnavailable?: null | int32 @go(MaxUnavailable,*int32)

	// Metadata to apply to the `PodDisruptionBudgetTemplate` resource.
	metadata?: null | #KafkaConnectSpecTemplatePodDisruptionBudgetMetadata @go(Metadata,*KafkaConnectSpecTemplatePodDisruptionBudgetMetadata)
}

// Metadata to apply to the `PodDisruptionBudgetTemplate` resource.
#KafkaConnectSpecTemplatePodDisruptionBudgetMetadata: {
	// Annotations added to the Kubernetes resource.
	annotations?: #KafkaConnectSpecTemplatePodDisruptionBudgetMetadataAnnotations @go(Annotations)

	// Labels added to the Kubernetes resource.
	labels?: #KafkaConnectSpecTemplatePodDisruptionBudgetMetadataLabels @go(Labels)
}

// Annotations added to the Kubernetes resource.
#KafkaConnectSpecTemplatePodDisruptionBudgetMetadataAnnotations: {[string]: string}

// Labels added to the Kubernetes resource.
#KafkaConnectSpecTemplatePodDisruptionBudgetMetadataLabels: {[string]: string}

#KafkaConnectSpecTemplatePodHostAliasesElem: {
	// Hostnames corresponds to the JSON schema field "hostnames".
	hostnames?: [...string] @go(Hostnames,[]string)

	// Ip corresponds to the JSON schema field "ip".
	ip?: null | string @go(Ip,*string)
}

#KafkaConnectSpecTemplatePodImagePullSecretsElem: {
	// Name corresponds to the JSON schema field "name".
	name?: null | string @go(Name,*string)
}

// Metadata applied to the resource.
#KafkaConnectSpecTemplatePodMetadata: {
	// Annotations added to the Kubernetes resource.
	annotations?: #KafkaConnectSpecTemplatePodMetadataAnnotations @go(Annotations)

	// Labels added to the Kubernetes resource.
	labels?: #KafkaConnectSpecTemplatePodMetadataLabels @go(Labels)
}

// Annotations added to the Kubernetes resource.
#KafkaConnectSpecTemplatePodMetadataAnnotations: {[string]: string}

// Labels added to the Kubernetes resource.
#KafkaConnectSpecTemplatePodMetadataLabels: {[string]: string}

// Configures pod-level security attributes and common container settings.
#KafkaConnectSpecTemplatePodSecurityContext: {
	// FsGroup corresponds to the JSON schema field "fsGroup".
	fsGroup?: null | int32 @go(FsGroup,*int32)

	// FsGroupChangePolicy corresponds to the JSON schema field "fsGroupChangePolicy".
	fsGroupChangePolicy?: null | string @go(FsGroupChangePolicy,*string)

	// RunAsGroup corresponds to the JSON schema field "runAsGroup".
	runAsGroup?: null | int32 @go(RunAsGroup,*int32)

	// RunAsNonRoot corresponds to the JSON schema field "runAsNonRoot".
	runAsNonRoot?: null | bool @go(RunAsNonRoot,*bool)

	// RunAsUser corresponds to the JSON schema field "runAsUser".
	runAsUser?: null | int32 @go(RunAsUser,*int32)

	// SeLinuxOptions corresponds to the JSON schema field "seLinuxOptions".
	seLinuxOptions?: null | #KafkaConnectSpecTemplatePodSecurityContextSeLinuxOptions @go(SeLinuxOptions,*KafkaConnectSpecTemplatePodSecurityContextSeLinuxOptions)

	// SeccompProfile corresponds to the JSON schema field "seccompProfile".
	seccompProfile?: null | #KafkaConnectSpecTemplatePodSecurityContextSeccompProfile @go(SeccompProfile,*KafkaConnectSpecTemplatePodSecurityContextSeccompProfile)

	// SupplementalGroups corresponds to the JSON schema field "supplementalGroups".
	supplementalGroups?: [...int32] @go(SupplementalGroups,[]int32)

	// Sysctls corresponds to the JSON schema field "sysctls".
	sysctls?: [...#KafkaConnectSpecTemplatePodSecurityContextSysctlsElem] @go(Sysctls,[]KafkaConnectSpecTemplatePodSecurityContextSysctlsElem)

	// WindowsOptions corresponds to the JSON schema field "windowsOptions".
	windowsOptions?: null | #KafkaConnectSpecTemplatePodSecurityContextWindowsOptions @go(WindowsOptions,*KafkaConnectSpecTemplatePodSecurityContextWindowsOptions)
}

#KafkaConnectSpecTemplatePodSecurityContextSeLinuxOptions: {
	// Level corresponds to the JSON schema field "level".
	level?: null | string @go(Level,*string)

	// Role corresponds to the JSON schema field "role".
	role?: null | string @go(Role,*string)

	// Type corresponds to the JSON schema field "type".
	type?: null | string @go(Type,*string)

	// User corresponds to the JSON schema field "user".
	user?: null | string @go(User,*string)
}

#KafkaConnectSpecTemplatePodSecurityContextSeccompProfile: {
	// LocalhostProfile corresponds to the JSON schema field "localhostProfile".
	localhostProfile?: null | string @go(LocalhostProfile,*string)

	// Type corresponds to the JSON schema field "type".
	type?: null | string @go(Type,*string)
}

#KafkaConnectSpecTemplatePodSecurityContextSysctlsElem: {
	// Name corresponds to the JSON schema field "name".
	name?: null | string @go(Name,*string)

	// Value corresponds to the JSON schema field "value".
	value?: null | string @go(Value,*string)
}

#KafkaConnectSpecTemplatePodSecurityContextWindowsOptions: {
	// GmsaCredentialSpec corresponds to the JSON schema field "gmsaCredentialSpec".
	gmsaCredentialSpec?: null | string @go(GmsaCredentialSpec,*string)

	// GmsaCredentialSpecName corresponds to the JSON schema field
	// "gmsaCredentialSpecName".
	gmsaCredentialSpecName?: null | string @go(GmsaCredentialSpecName,*string)

	// HostProcess corresponds to the JSON schema field "hostProcess".
	hostProcess?: null | bool @go(HostProcess,*bool)

	// RunAsUserName corresponds to the JSON schema field "runAsUserName".
	runAsUserName?: null | string @go(RunAsUserName,*string)
}

// Template for Kafka Connect `StrimziPodSet` resource.
#KafkaConnectSpecTemplatePodSet: {
	// Metadata applied to the resource.
	metadata?: null | #KafkaConnectSpecTemplatePodSetMetadata @go(Metadata,*KafkaConnectSpecTemplatePodSetMetadata)
}

// Metadata applied to the resource.
#KafkaConnectSpecTemplatePodSetMetadata: {
	// Annotations added to the Kubernetes resource.
	annotations?: #KafkaConnectSpecTemplatePodSetMetadataAnnotations @go(Annotations)

	// Labels added to the Kubernetes resource.
	labels?: #KafkaConnectSpecTemplatePodSetMetadataLabels @go(Labels)
}

// Annotations added to the Kubernetes resource.
#KafkaConnectSpecTemplatePodSetMetadataAnnotations: {[string]: string}

// Labels added to the Kubernetes resource.
#KafkaConnectSpecTemplatePodSetMetadataLabels: {[string]: string}

#KafkaConnectSpecTemplatePodTolerationsElem: {
	// Effect corresponds to the JSON schema field "effect".
	effect?: null | string @go(Effect,*string)

	// Key corresponds to the JSON schema field "key".
	key?: null | string @go(Key,*string)

	// Operator corresponds to the JSON schema field "operator".
	operator?: null | string @go(Operator,*string)

	// TolerationSeconds corresponds to the JSON schema field "tolerationSeconds".
	tolerationSeconds?: null | int32 @go(TolerationSeconds,*int32)

	// Value corresponds to the JSON schema field "value".
	value?: null | string @go(Value,*string)
}

#KafkaConnectSpecTemplatePodTopologySpreadConstraintsElem: {
	// LabelSelector corresponds to the JSON schema field "labelSelector".
	labelSelector?: null | #KafkaConnectSpecTemplatePodTopologySpreadConstraintsElemLabelSelector @go(LabelSelector,*KafkaConnectSpecTemplatePodTopologySpreadConstraintsElemLabelSelector)

	// MatchLabelKeys corresponds to the JSON schema field "matchLabelKeys".
	matchLabelKeys?: [...string] @go(MatchLabelKeys,[]string)

	// MaxSkew corresponds to the JSON schema field "maxSkew".
	maxSkew?: null | int32 @go(MaxSkew,*int32)

	// MinDomains corresponds to the JSON schema field "minDomains".
	minDomains?: null | int32 @go(MinDomains,*int32)

	// NodeAffinityPolicy corresponds to the JSON schema field "nodeAffinityPolicy".
	nodeAffinityPolicy?: null | string @go(NodeAffinityPolicy,*string)

	// NodeTaintsPolicy corresponds to the JSON schema field "nodeTaintsPolicy".
	nodeTaintsPolicy?: null | string @go(NodeTaintsPolicy,*string)

	// TopologyKey corresponds to the JSON schema field "topologyKey".
	topologyKey?: null | string @go(TopologyKey,*string)

	// WhenUnsatisfiable corresponds to the JSON schema field "whenUnsatisfiable".
	whenUnsatisfiable?: null | string @go(WhenUnsatisfiable,*string)
}

#KafkaConnectSpecTemplatePodTopologySpreadConstraintsElemLabelSelector: {
	// MatchExpressions corresponds to the JSON schema field "matchExpressions".
	matchExpressions?: [...#KafkaConnectSpecTemplatePodTopologySpreadConstraintsElemLabelSelectorMatchExpressionsElem] @go(MatchExpressions,[]KafkaConnectSpecTemplatePodTopologySpreadConstraintsElemLabelSelectorMatchExpressionsElem)

	// MatchLabels corresponds to the JSON schema field "matchLabels".
	matchLabels?: #KafkaConnectSpecTemplatePodTopologySpreadConstraintsElemLabelSelectorMatchLabels @go(MatchLabels)
}

#KafkaConnectSpecTemplatePodTopologySpreadConstraintsElemLabelSelectorMatchExpressionsElem: {
	// Key corresponds to the JSON schema field "key".
	key?: null | string @go(Key,*string)

	// Operator corresponds to the JSON schema field "operator".
	operator?: null | string @go(Operator,*string)

	// Values corresponds to the JSON schema field "values".
	values?: [...string] @go(Values,[]string)
}

#KafkaConnectSpecTemplatePodTopologySpreadConstraintsElemLabelSelectorMatchLabels: [string]: string

#KafkaConnectStatusConnectorPluginsElem: {
	// The class of the connector plugin.
	class?: null | string @go(Class,*string)

	// The type of the connector plugin. The available types are `sink` and `source`.
	type?: null | string @go(Type,*string)

	// The version of the connector plugin.
	version?: null | string @go(Version,*string)
}

// Annotations added to the Kubernetes resource.
#KafkaConnectSpecTemplateServiceAccountMetadataAnnotations: {[string]: string}

// Labels added to the Kubernetes resource.
#KafkaConnectSpecTemplateServiceAccountMetadataLabels: {[string]: string}

// Metadata applied to the resource.
#KafkaConnectSpecTemplateServiceAccountMetadata: {
	// Annotations added to the Kubernetes resource.
	annotations?: #KafkaConnectSpecTemplateServiceAccountMetadataAnnotations @go(Annotations)

	// Labels added to the Kubernetes resource.
	labels?: #KafkaConnectSpecTemplateServiceAccountMetadataLabels @go(Labels)
}

// Template for the Kafka Connect service account.
#KafkaConnectSpecTemplateServiceAccount: {
	// Metadata applied to the resource.
	metadata?: null | #KafkaConnectSpecTemplateServiceAccountMetadata @go(Metadata,*KafkaConnectSpecTemplateServiceAccountMetadata)
}

#KafkaConnectSpecTlsTrustedCertificatesElem: _

// TLS configuration.
#KafkaConnectSpecTls: {
	// Trusted certificates for TLS connection.
	trustedCertificates?: [...#KafkaConnectSpecTlsTrustedCertificatesElem] @go(TrustedCertificates,[]KafkaConnectSpecTlsTrustedCertificatesElem)
}

#KafkaConnectSpecTracingType: _ // #enumKafkaConnectSpecTracingType

#enumKafkaConnectSpecTracingType:
	#KafkaConnectSpecTracingTypeJaeger |
	#KafkaConnectSpecTracingTypeOpentelemetry

#KafkaConnectSpecTracingTypeJaeger: #KafkaConnectSpecTracingType & "jaeger"

#KafkaConnectSpecTracingTypeOpentelemetry: #KafkaConnectSpecTracingType & "opentelemetry"

// The configuration of tracing in Kafka Connect.
#KafkaConnectSpecTracing: _

#KafkaConnectStatusConditionsElem: {
	// Last time the condition of a type changed from one status to another. The
	// required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.
	lastTransitionTime?: null | string @go(LastTransitionTime,*string)

	// Human-readable message indicating details about the condition's last
	// transition.
	message?: null | string @go(Message,*string)

	// The reason for the condition's last transition (a single word in CamelCase).
	reason?: null | string @go(Reason,*string)

	// The status of the condition, either True, False or Unknown.
	status?: null | string @go(Status,*string)

	// The unique identifier of a condition, used to distinguish between other
	// conditions in the resource.
	type?: null | string @go(Type,*string)
}

// The status of the Kafka Connect cluster.
#KafkaConnectStatus: {
	// List of status conditions.
	conditions?: [...#KafkaConnectStatusConditionsElem] @go(Conditions,[]KafkaConnectStatusConditionsElem)

	// The list of connector plugins available in this Kafka Connect deployment.
	connectorPlugins?: [...#KafkaConnectStatusConnectorPluginsElem] @go(ConnectorPlugins,[]KafkaConnectStatusConnectorPluginsElem)

	// Label selector for pods providing this resource.
	labelSelector?: null | string @go(LabelSelector,*string)

	// The generation of the CRD that was last reconciled by the operator.
	observedGeneration?: null | int32 @go(ObservedGeneration,*int32)

	// The current number of pods being used to provide this resource.
	replicas?: null | int32 @go(Replicas,*int32)

	// The URL of the REST API endpoint for managing and monitoring Kafka Connect
	// connectors.
	url?: null | string @go(Url,*string)
}
