// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/RedHatInsights/strimzi-client-go/apis/kafka.strimzi.io/v1beta2

package v1beta2

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	apiextensions "k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1"
)

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// KafkaMirrorMaker2
#KafkaMirrorMaker2: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)

	// The specification of the Kafka MirrorMaker 2 cluster.
	spec?: null | #KafkaMirrorMaker2Spec @go(Spec,*KafkaMirrorMaker2Spec)

	// The status of the Kafka MirrorMaker 2 cluster.
	status?: null | #KafkaMirrorMaker2Status @go(Status,*KafkaMirrorMaker2Status)
}

// +kubebuilder:object:root=true
// KafkaMirrorMaker2List contains a list of instances.
#KafkaMirrorMaker2List: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)

	// A list of KafkaMirrorMaker2 objects.
	items?: [...#KafkaMirrorMaker2] @go(Items,[]KafkaMirrorMaker2)
}

// The specification of the Kafka MirrorMaker 2 cluster.
#KafkaMirrorMaker2Spec: _

#KafkaMirrorMaker2SpecClustersElem: _

// Authentication configuration for connecting to the cluster.
#KafkaMirrorMaker2SpecClustersElemAuthentication: _

// Link to Kubernetes Secret containing the access token which was obtained from
// the authorization server.
#KafkaMirrorMaker2SpecClustersElemAuthenticationAccessToken: _

// Reference to the `Secret` which holds the certificate and private key pair.
#KafkaMirrorMaker2SpecClustersElemAuthenticationCertificateAndKey: _

// Link to Kubernetes Secret containing the OAuth client secret which the Kafka
// client can use to authenticate against the OAuth server and use the token
// endpoint URI.
#KafkaMirrorMaker2SpecClustersElemAuthenticationClientSecret: _

// Reference to the `Secret` which holds the password.
#KafkaMirrorMaker2SpecClustersElemAuthenticationPasswordSecret: _

// Link to Kubernetes Secret containing the refresh token which can be used to
// obtain access token from the authorization server.
#KafkaMirrorMaker2SpecClustersElemAuthenticationRefreshToken: _

#KafkaMirrorMaker2SpecClustersElemAuthenticationTlsTrustedCertificatesElem: _

#KafkaMirrorMaker2SpecClustersElemAuthenticationType: _ // #enumKafkaMirrorMaker2SpecClustersElemAuthenticationType

#enumKafkaMirrorMaker2SpecClustersElemAuthenticationType:
	#KafkaMirrorMaker2SpecClustersElemAuthenticationTypeOauth |
	#KafkaMirrorMaker2SpecClustersElemAuthenticationTypePlain |
	#KafkaMirrorMaker2SpecClustersElemAuthenticationTypeScramSha256 |
	#KafkaMirrorMaker2SpecClustersElemAuthenticationTypeScramSha512 |
	#KafkaMirrorMaker2SpecClustersElemAuthenticationTypeTls

#KafkaMirrorMaker2SpecClustersElemAuthenticationTypeOauth: #KafkaMirrorMaker2SpecClustersElemAuthenticationType & "oauth"

#KafkaMirrorMaker2SpecClustersElemAuthenticationTypePlain: #KafkaMirrorMaker2SpecClustersElemAuthenticationType & "plain"

#KafkaMirrorMaker2SpecClustersElemAuthenticationTypeScramSha256: #KafkaMirrorMaker2SpecClustersElemAuthenticationType & "scram-sha-256"

#KafkaMirrorMaker2SpecClustersElemAuthenticationTypeScramSha512: #KafkaMirrorMaker2SpecClustersElemAuthenticationType & "scram-sha-512"

#KafkaMirrorMaker2SpecClustersElemAuthenticationTypeTls: #KafkaMirrorMaker2SpecClustersElemAuthenticationType & "tls"

// TLS configuration for connecting MirrorMaker 2 connectors to a cluster.
#KafkaMirrorMaker2SpecClustersElemTls: {
	// Trusted certificates for TLS connection.
	trustedCertificates?: [...#KafkaMirrorMaker2SpecClustersElemTlsTrustedCertificatesElem] @go(TrustedCertificates,[]KafkaMirrorMaker2SpecClustersElemTlsTrustedCertificatesElem)
}

#KafkaMirrorMaker2SpecClustersElemTlsTrustedCertificatesElem: _

// Pass data from Secrets or ConfigMaps to the Kafka Connect pods and use them to
// configure connectors.
#KafkaMirrorMaker2SpecExternalConfiguration: {
	// Makes data from a Secret or ConfigMap available in the Kafka Connect pods as
	// environment variables.
	env?: [...#KafkaMirrorMaker2SpecExternalConfigurationEnvElem] @go(Env,[]KafkaMirrorMaker2SpecExternalConfigurationEnvElem)

	// Makes data from a Secret or ConfigMap available in the Kafka Connect pods as
	// volumes.
	volumes?: [...#KafkaMirrorMaker2SpecExternalConfigurationVolumesElem] @go(Volumes,[]KafkaMirrorMaker2SpecExternalConfigurationVolumesElem)
}

#KafkaMirrorMaker2SpecExternalConfigurationEnvElem: _

// Value of the environment variable which will be passed to the Kafka Connect
// pods. It can be passed either as a reference to Secret or ConfigMap field. The
// field has to specify exactly one Secret or ConfigMap.
#KafkaMirrorMaker2SpecExternalConfigurationEnvElemValueFrom: {
	// Reference to a key in a ConfigMap.
	configMapKeyRef?: null | #KafkaMirrorMaker2SpecExternalConfigurationEnvElemValueFromConfigMapKeyRef @go(ConfigMapKeyRef,*KafkaMirrorMaker2SpecExternalConfigurationEnvElemValueFromConfigMapKeyRef)

	// Reference to a key in a Secret.
	secretKeyRef?: null | #KafkaMirrorMaker2SpecExternalConfigurationEnvElemValueFromSecretKeyRef @go(SecretKeyRef,*KafkaMirrorMaker2SpecExternalConfigurationEnvElemValueFromSecretKeyRef)
}

// Reference to a key in a ConfigMap.
#KafkaMirrorMaker2SpecExternalConfigurationEnvElemValueFromConfigMapKeyRef: {
	// Key corresponds to the JSON schema field "key".
	key?: null | string @go(Key,*string)

	// Name corresponds to the JSON schema field "name".
	name?: null | string @go(Name,*string)

	// Optional corresponds to the JSON schema field "optional".
	optional?: null | bool @go(Optional,*bool)
}

// Reference to a key in a Secret.
#KafkaMirrorMaker2SpecExternalConfigurationEnvElemValueFromSecretKeyRef: {
	// Key corresponds to the JSON schema field "key".
	key?: null | string @go(Key,*string)

	// Name corresponds to the JSON schema field "name".
	name?: null | string @go(Name,*string)

	// Optional corresponds to the JSON schema field "optional".
	optional?: null | bool @go(Optional,*bool)
}

#KafkaMirrorMaker2SpecExternalConfigurationVolumesElem: _

// Reference to a key in a ConfigMap. Exactly one Secret or ConfigMap has to be
// specified.
#KafkaMirrorMaker2SpecExternalConfigurationVolumesElemConfigMap: {
	// DefaultMode corresponds to the JSON schema field "defaultMode".
	defaultMode?: null | int32 @go(DefaultMode,*int32)

	// Items corresponds to the JSON schema field "items".
	items?: [...#KafkaMirrorMaker2SpecExternalConfigurationVolumesElemConfigMapItemsElem] @go(Items,[]KafkaMirrorMaker2SpecExternalConfigurationVolumesElemConfigMapItemsElem)

	// Name corresponds to the JSON schema field "name".
	name?: null | string @go(Name,*string)

	// Optional corresponds to the JSON schema field "optional".
	optional?: null | bool @go(Optional,*bool)
}

#KafkaMirrorMaker2SpecExternalConfigurationVolumesElemConfigMapItemsElem: {
	// Key corresponds to the JSON schema field "key".
	key?: null | string @go(Key,*string)

	// Mode corresponds to the JSON schema field "mode".
	mode?: null | int32 @go(Mode,*int32)

	// Path corresponds to the JSON schema field "path".
	path?: null | string @go(Path,*string)
}

// Reference to a key in a Secret. Exactly one Secret or ConfigMap has to be
// specified.
#KafkaMirrorMaker2SpecExternalConfigurationVolumesElemSecret: {
	// DefaultMode corresponds to the JSON schema field "defaultMode".
	defaultMode?: null | int32 @go(DefaultMode,*int32)

	// Items corresponds to the JSON schema field "items".
	items?: [...#KafkaMirrorMaker2SpecExternalConfigurationVolumesElemSecretItemsElem] @go(Items,[]KafkaMirrorMaker2SpecExternalConfigurationVolumesElemSecretItemsElem)

	// Optional corresponds to the JSON schema field "optional".
	optional?: null | bool @go(Optional,*bool)

	// SecretName corresponds to the JSON schema field "secretName".
	secretName?: null | string @go(SecretName,*string)
}

#KafkaMirrorMaker2SpecExternalConfigurationVolumesElemSecretItemsElem: {
	// Key corresponds to the JSON schema field "key".
	key?: null | string @go(Key,*string)

	// Mode corresponds to the JSON schema field "mode".
	mode?: null | int32 @go(Mode,*int32)

	// Path corresponds to the JSON schema field "path".
	path?: null | string @go(Path,*string)
}

// JMX Options.
#KafkaMirrorMaker2SpecJmxOptions: {
	// Authentication configuration for connecting to the JMX port.
	authentication?: null | #KafkaMirrorMaker2SpecJmxOptionsAuthentication @go(Authentication,*KafkaMirrorMaker2SpecJmxOptionsAuthentication)
}

// Authentication configuration for connecting to the JMX port.
#KafkaMirrorMaker2SpecJmxOptionsAuthentication: _

#KafkaMirrorMaker2SpecJmxOptionsAuthenticationType: _ // #enumKafkaMirrorMaker2SpecJmxOptionsAuthenticationType

#enumKafkaMirrorMaker2SpecJmxOptionsAuthenticationType:
	#KafkaMirrorMaker2SpecJmxOptionsAuthenticationTypePassword

#KafkaMirrorMaker2SpecJmxOptionsAuthenticationTypePassword: #KafkaMirrorMaker2SpecJmxOptionsAuthenticationType & "password"

// JVM Options for pods.
#KafkaMirrorMaker2SpecJvmOptions: {
	// A map of -XX options to the JVM.
	"-XX"?: #KafkaMirrorMaker2SpecJvmOptionsXX @go(XX)

	// -Xms option to to the JVM.
	"-Xms"?: null | string @go(Xms,*string)

	// -Xmx option to to the JVM.
	"-Xmx"?: null | string @go(Xmx,*string)

	// Specifies whether the Garbage Collection logging is enabled. The default is
	// false.
	gcLoggingEnabled?: null | bool @go(GcLoggingEnabled,*bool)

	// A map of additional system properties which will be passed using the `-D`
	// option to the JVM.
	javaSystemProperties?: [...#KafkaMirrorMaker2SpecJvmOptionsJavaSystemPropertiesElem] @go(JavaSystemProperties,[]KafkaMirrorMaker2SpecJvmOptionsJavaSystemPropertiesElem)
}

#KafkaMirrorMaker2SpecJvmOptionsJavaSystemPropertiesElem: {
	// The system property name.
	name?: null | string @go(Name,*string)

	// The system property value.
	value?: null | string @go(Value,*string)
}

// A map of -XX options to the JVM.
#KafkaMirrorMaker2SpecJvmOptionsXX: {[string]: string}

// Pod liveness checking.
#KafkaMirrorMaker2SpecLivenessProbe: {
	// Minimum consecutive failures for the probe to be considered failed after having
	// succeeded. Defaults to 3. Minimum value is 1.
	failureThreshold?: null | int32 @go(FailureThreshold,*int32)

	// The initial delay before first the health is first checked. Default to 15
	// seconds. Minimum value is 0.
	initialDelaySeconds?: null | int32 @go(InitialDelaySeconds,*int32)

	// How often (in seconds) to perform the probe. Default to 10 seconds. Minimum
	// value is 1.
	periodSeconds?: null | int32 @go(PeriodSeconds,*int32)

	// Minimum consecutive successes for the probe to be considered successful after
	// having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
	successThreshold?: null | int32 @go(SuccessThreshold,*int32)

	// The timeout for each attempted health check. Default to 5 seconds. Minimum
	// value is 1.
	timeoutSeconds?: null | int32 @go(TimeoutSeconds,*int32)
}

// Logging configuration for Kafka Connect.
#KafkaMirrorMaker2SpecLogging: _

// A Map from logger name to logger level.
#KafkaMirrorMaker2SpecLoggingLoggers: {[string]: string}

#KafkaMirrorMaker2SpecLoggingType: _ // #enumKafkaMirrorMaker2SpecLoggingType

#enumKafkaMirrorMaker2SpecLoggingType:
	#KafkaMirrorMaker2SpecLoggingTypeExternal |
	#KafkaMirrorMaker2SpecLoggingTypeInline

#KafkaMirrorMaker2SpecLoggingTypeExternal: #KafkaMirrorMaker2SpecLoggingType & "external"

#KafkaMirrorMaker2SpecLoggingTypeInline: #KafkaMirrorMaker2SpecLoggingType & "inline"

// `ConfigMap` entry where the logging configuration is stored.
#KafkaMirrorMaker2SpecLoggingValueFrom: {
	// Reference to the key in the ConfigMap containing the configuration.
	configMapKeyRef?: null | #KafkaMirrorMaker2SpecLoggingValueFromConfigMapKeyRef @go(ConfigMapKeyRef,*KafkaMirrorMaker2SpecLoggingValueFromConfigMapKeyRef)
}

// Reference to the key in the ConfigMap containing the configuration.
#KafkaMirrorMaker2SpecLoggingValueFromConfigMapKeyRef: {
	// Key corresponds to the JSON schema field "key".
	key?: null | string @go(Key,*string)

	// Name corresponds to the JSON schema field "name".
	name?: null | string @go(Name,*string)

	// Optional corresponds to the JSON schema field "optional".
	optional?: null | bool @go(Optional,*bool)
}

// Metrics configuration.
#KafkaMirrorMaker2SpecMetricsConfig: _

#KafkaMirrorMaker2SpecMetricsConfigType: _ // #enumKafkaMirrorMaker2SpecMetricsConfigType

#enumKafkaMirrorMaker2SpecMetricsConfigType:
	#KafkaMirrorMaker2SpecMetricsConfigTypeJmxPrometheusExporter

#KafkaMirrorMaker2SpecMetricsConfigTypeJmxPrometheusExporter: #KafkaMirrorMaker2SpecMetricsConfigType & "jmxPrometheusExporter"

// ConfigMap entry where the Prometheus JMX Exporter configuration is stored.
#KafkaMirrorMaker2SpecMetricsConfigValueFrom: {
	// Reference to the key in the ConfigMap containing the configuration.
	configMapKeyRef?: null | #KafkaMirrorMaker2SpecMetricsConfigValueFromConfigMapKeyRef @go(ConfigMapKeyRef,*KafkaMirrorMaker2SpecMetricsConfigValueFromConfigMapKeyRef)
}

// Reference to the key in the ConfigMap containing the configuration.
#KafkaMirrorMaker2SpecMetricsConfigValueFromConfigMapKeyRef: {
	// Key corresponds to the JSON schema field "key".
	key?: null | string @go(Key,*string)

	// Name corresponds to the JSON schema field "name".
	name?: null | string @go(Name,*string)

	// Optional corresponds to the JSON schema field "optional".
	optional?: null | bool @go(Optional,*bool)
}

#KafkaMirrorMaker2SpecMirrorsElem: _

// The specification of the Kafka MirrorMaker 2 checkpoint connector.
#KafkaMirrorMaker2SpecMirrorsElemCheckpointConnector: {
	// Automatic restart of connector and tasks configuration.
	autoRestart?: null | #KafkaMirrorMaker2SpecMirrorsElemCheckpointConnectorAutoRestart @go(AutoRestart,*KafkaMirrorMaker2SpecMirrorsElemCheckpointConnectorAutoRestart)

	// The Kafka Connector configuration. The following properties cannot be set:
	// connector.class, tasks.max.
	config?: null | apiextensions.#JSON @go(Config,*apiextensions.JSON)

	// Whether the connector should be paused. Defaults to false.
	pause?: null | bool @go(Pause,*bool)

	// The state the connector should be in. Defaults to running.
	state?: null | #KafkaMirrorMaker2SpecMirrorsElemCheckpointConnectorState @go(State,*KafkaMirrorMaker2SpecMirrorsElemCheckpointConnectorState)

	// The maximum number of tasks for the Kafka Connector.
	tasksMax?: null | int32 @go(TasksMax,*int32)
}

// Automatic restart of connector and tasks configuration.
#KafkaMirrorMaker2SpecMirrorsElemCheckpointConnectorAutoRestart: {
	// Whether automatic restart for failed connectors and tasks should be enabled or
	// disabled.
	enabled?: null | bool @go(Enabled,*bool)

	// The maximum number of connector restarts that the operator will try. If the
	// connector remains in a failed state after reaching this limit, it must be
	// restarted manually by the user. Defaults to an unlimited number of restarts.
	maxRestarts?: null | int32 @go(MaxRestarts,*int32)
}

#KafkaMirrorMaker2SpecMirrorsElemCheckpointConnectorState: _ // #enumKafkaMirrorMaker2SpecMirrorsElemCheckpointConnectorState

#enumKafkaMirrorMaker2SpecMirrorsElemCheckpointConnectorState:
	#KafkaMirrorMaker2SpecMirrorsElemCheckpointConnectorStatePaused |
	#KafkaMirrorMaker2SpecMirrorsElemCheckpointConnectorStateRunning |
	#KafkaMirrorMaker2SpecMirrorsElemCheckpointConnectorStateStopped

#KafkaMirrorMaker2SpecMirrorsElemCheckpointConnectorStatePaused: #KafkaMirrorMaker2SpecMirrorsElemCheckpointConnectorState & "paused"

#KafkaMirrorMaker2SpecMirrorsElemCheckpointConnectorStateRunning: #KafkaMirrorMaker2SpecMirrorsElemCheckpointConnectorState & "running"

#KafkaMirrorMaker2SpecMirrorsElemCheckpointConnectorStateStopped: #KafkaMirrorMaker2SpecMirrorsElemCheckpointConnectorState & "stopped"

// The specification of the Kafka MirrorMaker 2 heartbeat connector.
#KafkaMirrorMaker2SpecMirrorsElemHeartbeatConnector: {
	// Automatic restart of connector and tasks configuration.
	autoRestart?: null | #KafkaMirrorMaker2SpecMirrorsElemHeartbeatConnectorAutoRestart @go(AutoRestart,*KafkaMirrorMaker2SpecMirrorsElemHeartbeatConnectorAutoRestart)

	// The Kafka Connector configuration. The following properties cannot be set:
	// connector.class, tasks.max.
	config?: null | apiextensions.#JSON @go(Config,*apiextensions.JSON)

	// Whether the connector should be paused. Defaults to false.
	pause?: null | bool @go(Pause,*bool)

	// The state the connector should be in. Defaults to running.
	state?: null | #KafkaMirrorMaker2SpecMirrorsElemHeartbeatConnectorState @go(State,*KafkaMirrorMaker2SpecMirrorsElemHeartbeatConnectorState)

	// The maximum number of tasks for the Kafka Connector.
	tasksMax?: null | int32 @go(TasksMax,*int32)
}

// Automatic restart of connector and tasks configuration.
#KafkaMirrorMaker2SpecMirrorsElemHeartbeatConnectorAutoRestart: {
	// Whether automatic restart for failed connectors and tasks should be enabled or
	// disabled.
	enabled?: null | bool @go(Enabled,*bool)

	// The maximum number of connector restarts that the operator will try. If the
	// connector remains in a failed state after reaching this limit, it must be
	// restarted manually by the user. Defaults to an unlimited number of restarts.
	maxRestarts?: null | int32 @go(MaxRestarts,*int32)
}

#KafkaMirrorMaker2SpecMirrorsElemHeartbeatConnectorState: _ // #enumKafkaMirrorMaker2SpecMirrorsElemHeartbeatConnectorState

#enumKafkaMirrorMaker2SpecMirrorsElemHeartbeatConnectorState:
	#KafkaMirrorMaker2SpecMirrorsElemHeartbeatConnectorStatePaused |
	#KafkaMirrorMaker2SpecMirrorsElemHeartbeatConnectorStateRunning |
	#KafkaMirrorMaker2SpecMirrorsElemHeartbeatConnectorStateStopped

#KafkaMirrorMaker2SpecMirrorsElemHeartbeatConnectorStatePaused: #KafkaMirrorMaker2SpecMirrorsElemHeartbeatConnectorState & "paused"

#KafkaMirrorMaker2SpecMirrorsElemHeartbeatConnectorStateRunning: #KafkaMirrorMaker2SpecMirrorsElemHeartbeatConnectorState & "running"

#KafkaMirrorMaker2SpecMirrorsElemHeartbeatConnectorStateStopped: #KafkaMirrorMaker2SpecMirrorsElemHeartbeatConnectorState & "stopped"

// The specification of the Kafka MirrorMaker 2 source connector.
#KafkaMirrorMaker2SpecMirrorsElemSourceConnector: {
	// Automatic restart of connector and tasks configuration.
	autoRestart?: null | #KafkaMirrorMaker2SpecMirrorsElemSourceConnectorAutoRestart @go(AutoRestart,*KafkaMirrorMaker2SpecMirrorsElemSourceConnectorAutoRestart)

	// The Kafka Connector configuration. The following properties cannot be set:
	// connector.class, tasks.max.
	config?: null | apiextensions.#JSON @go(Config,*apiextensions.JSON)

	// Whether the connector should be paused. Defaults to false.
	pause?: null | bool @go(Pause,*bool)

	// The state the connector should be in. Defaults to running.
	state?: null | #KafkaMirrorMaker2SpecMirrorsElemSourceConnectorState @go(State,*KafkaMirrorMaker2SpecMirrorsElemSourceConnectorState)

	// The maximum number of tasks for the Kafka Connector.
	tasksMax?: null | int32 @go(TasksMax,*int32)
}

// Automatic restart of connector and tasks configuration.
#KafkaMirrorMaker2SpecMirrorsElemSourceConnectorAutoRestart: {
	// Whether automatic restart for failed connectors and tasks should be enabled or
	// disabled.
	enabled?: null | bool @go(Enabled,*bool)

	// The maximum number of connector restarts that the operator will try. If the
	// connector remains in a failed state after reaching this limit, it must be
	// restarted manually by the user. Defaults to an unlimited number of restarts.
	maxRestarts?: null | int32 @go(MaxRestarts,*int32)
}

#KafkaMirrorMaker2SpecMirrorsElemSourceConnectorState: _ // #enumKafkaMirrorMaker2SpecMirrorsElemSourceConnectorState

#enumKafkaMirrorMaker2SpecMirrorsElemSourceConnectorState:
	#KafkaMirrorMaker2SpecMirrorsElemSourceConnectorStatePaused |
	#KafkaMirrorMaker2SpecMirrorsElemSourceConnectorStateRunning |
	#KafkaMirrorMaker2SpecMirrorsElemSourceConnectorStateStopped

#KafkaMirrorMaker2SpecMirrorsElemSourceConnectorStatePaused: #KafkaMirrorMaker2SpecMirrorsElemSourceConnectorState & "paused"

#KafkaMirrorMaker2SpecMirrorsElemSourceConnectorStateRunning: #KafkaMirrorMaker2SpecMirrorsElemSourceConnectorState & "running"

#KafkaMirrorMaker2SpecMirrorsElemSourceConnectorStateStopped: #KafkaMirrorMaker2SpecMirrorsElemSourceConnectorState & "stopped"

// Configuration of the node label which will be used as the `client.rack` consumer
// configuration.
#KafkaMirrorMaker2SpecRack: _

// Pod readiness checking.
#KafkaMirrorMaker2SpecReadinessProbe: {
	// Minimum consecutive failures for the probe to be considered failed after having
	// succeeded. Defaults to 3. Minimum value is 1.
	failureThreshold?: null | int32 @go(FailureThreshold,*int32)

	// The initial delay before first the health is first checked. Default to 15
	// seconds. Minimum value is 0.
	initialDelaySeconds?: null | int32 @go(InitialDelaySeconds,*int32)

	// How often (in seconds) to perform the probe. Default to 10 seconds. Minimum
	// value is 1.
	periodSeconds?: null | int32 @go(PeriodSeconds,*int32)

	// Minimum consecutive successes for the probe to be considered successful after
	// having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
	successThreshold?: null | int32 @go(SuccessThreshold,*int32)

	// The timeout for each attempted health check. Default to 5 seconds. Minimum
	// value is 1.
	timeoutSeconds?: null | int32 @go(TimeoutSeconds,*int32)
}

// The maximum limits for CPU and memory resources and the requested initial
// resources.
#KafkaMirrorMaker2SpecResources: {
	// Claims corresponds to the JSON schema field "claims".
	claims?: [...#KafkaMirrorMaker2SpecResourcesClaimsElem] @go(Claims,[]KafkaMirrorMaker2SpecResourcesClaimsElem)

	// Limits corresponds to the JSON schema field "limits".
	limits?: null | apiextensions.#JSON @go(Limits,*apiextensions.JSON)

	// Requests corresponds to the JSON schema field "requests".
	requests?: null | apiextensions.#JSON @go(Requests,*apiextensions.JSON)
}

#KafkaMirrorMaker2SpecResourcesClaimsElem: {
	// Name corresponds to the JSON schema field "name".
	name?: null | string @go(Name,*string)
}

// Template for Kafka Connect and Kafka Mirror Maker 2 resources. The template
// allows users to specify how the `Pods`, `Service`, and other services are
// generated.
#KafkaMirrorMaker2SpecTemplate: {
	// Template for Kafka Connect API `Service`.
	apiService?: null | #KafkaMirrorMaker2SpecTemplateApiService @go(ApiService,*KafkaMirrorMaker2SpecTemplateApiService)

	// Template for the Kafka Connect BuildConfig used to build new container images.
	// The BuildConfig is used only on OpenShift.
	buildConfig?: null | #KafkaMirrorMaker2SpecTemplateBuildConfig @go(BuildConfig,*KafkaMirrorMaker2SpecTemplateBuildConfig)

	// Template for the Kafka Connect Build container. The build container is used
	// only on Kubernetes.
	buildContainer?: null | #KafkaMirrorMaker2SpecTemplateBuildContainer @go(BuildContainer,*KafkaMirrorMaker2SpecTemplateBuildContainer)

	// Template for Kafka Connect Build `Pods`. The build pod is used only on
	// Kubernetes.
	buildPod?: null | #KafkaMirrorMaker2SpecTemplateBuildPod @go(BuildPod,*KafkaMirrorMaker2SpecTemplateBuildPod)

	// Template for the Kafka Connect Build service account.
	buildServiceAccount?: null | #KafkaMirrorMaker2SpecTemplateBuildServiceAccount @go(BuildServiceAccount,*KafkaMirrorMaker2SpecTemplateBuildServiceAccount)

	// Template for the Kafka Connect ClusterRoleBinding.
	clusterRoleBinding?: null | #KafkaMirrorMaker2SpecTemplateClusterRoleBinding @go(ClusterRoleBinding,*KafkaMirrorMaker2SpecTemplateClusterRoleBinding)

	// Template for the Kafka Connect container.
	connectContainer?: null | #KafkaMirrorMaker2SpecTemplateConnectContainer @go(ConnectContainer,*KafkaMirrorMaker2SpecTemplateConnectContainer)

	// Template for Kafka Connect `Deployment`.
	deployment?: null | #KafkaMirrorMaker2SpecTemplateDeployment @go(Deployment,*KafkaMirrorMaker2SpecTemplateDeployment)

	// Template for Kafka Connect headless `Service`.
	headlessService?: null | #KafkaMirrorMaker2SpecTemplateHeadlessService @go(HeadlessService,*KafkaMirrorMaker2SpecTemplateHeadlessService)

	// Template for the Kafka init container.
	initContainer?: null | #KafkaMirrorMaker2SpecTemplateInitContainer @go(InitContainer,*KafkaMirrorMaker2SpecTemplateInitContainer)

	// Template for Secret of the Kafka Connect Cluster JMX authentication.
	jmxSecret?: null | #KafkaMirrorMaker2SpecTemplateJmxSecret @go(JmxSecret,*KafkaMirrorMaker2SpecTemplateJmxSecret)

	// Template for Kafka Connect `Pods`.
	pod?: null | #KafkaMirrorMaker2SpecTemplatePod @go(Pod,*KafkaMirrorMaker2SpecTemplatePod)

	// Template for Kafka Connect `PodDisruptionBudget`.
	podDisruptionBudget?: null | #KafkaMirrorMaker2SpecTemplatePodDisruptionBudget @go(PodDisruptionBudget,*KafkaMirrorMaker2SpecTemplatePodDisruptionBudget)

	// Template for Kafka Connect `StrimziPodSet` resource.
	podSet?: null | #KafkaMirrorMaker2SpecTemplatePodSet @go(PodSet,*KafkaMirrorMaker2SpecTemplatePodSet)

	// Template for the Kafka Connect service account.
	serviceAccount?: null | #KafkaMirrorMaker2SpecTemplateServiceAccount @go(ServiceAccount,*KafkaMirrorMaker2SpecTemplateServiceAccount)
}

// Template for Kafka Connect API `Service`.
#KafkaMirrorMaker2SpecTemplateApiService: {
	// Specifies the IP Families used by the service. Available options are `IPv4` and
	// `IPv6`. If unspecified, Kubernetes will choose the default value based on the
	// `ipFamilyPolicy` setting.
	ipFamilies?: [...#KafkaMirrorMaker2SpecTemplateApiServiceIpFamiliesElem] @go(IpFamilies,[]KafkaMirrorMaker2SpecTemplateApiServiceIpFamiliesElem)

	// Specifies the IP Family Policy used by the service. Available options are
	// `SingleStack`, `PreferDualStack` and `RequireDualStack`. `SingleStack` is for a
	// single IP family. `PreferDualStack` is for two IP families on dual-stack
	// configured clusters or a single IP family on single-stack clusters.
	// `RequireDualStack` fails unless there are two IP families on dual-stack
	// configured clusters. If unspecified, Kubernetes will choose the default value
	// based on the service type.
	ipFamilyPolicy?: null | #KafkaMirrorMaker2SpecTemplateApiServiceIpFamilyPolicy @go(IpFamilyPolicy,*KafkaMirrorMaker2SpecTemplateApiServiceIpFamilyPolicy)

	// Metadata applied to the resource.
	metadata?: null | #KafkaMirrorMaker2SpecTemplateApiServiceMetadata @go(Metadata,*KafkaMirrorMaker2SpecTemplateApiServiceMetadata)
}

#KafkaMirrorMaker2SpecTemplateApiServiceIpFamiliesElem: _ // #enumKafkaMirrorMaker2SpecTemplateApiServiceIpFamiliesElem

#enumKafkaMirrorMaker2SpecTemplateApiServiceIpFamiliesElem:
	#KafkaMirrorMaker2SpecTemplateApiServiceIpFamiliesElemIPv4 |
	#KafkaMirrorMaker2SpecTemplateApiServiceIpFamiliesElemIPv6

#KafkaMirrorMaker2SpecTemplateApiServiceIpFamiliesElemIPv4: #KafkaMirrorMaker2SpecTemplateApiServiceIpFamiliesElem & "IPv4"

#KafkaMirrorMaker2SpecTemplateApiServiceIpFamiliesElemIPv6: #KafkaMirrorMaker2SpecTemplateApiServiceIpFamiliesElem & "IPv6"

#KafkaMirrorMaker2SpecTemplateApiServiceIpFamilyPolicy: _ // #enumKafkaMirrorMaker2SpecTemplateApiServiceIpFamilyPolicy

#enumKafkaMirrorMaker2SpecTemplateApiServiceIpFamilyPolicy:
	#KafkaMirrorMaker2SpecTemplateApiServiceIpFamilyPolicyPreferDualStack |
	#KafkaMirrorMaker2SpecTemplateApiServiceIpFamilyPolicyRequireDualStack |
	#KafkaMirrorMaker2SpecTemplateApiServiceIpFamilyPolicySingleStack

#KafkaMirrorMaker2SpecTemplateApiServiceIpFamilyPolicyPreferDualStack: #KafkaMirrorMaker2SpecTemplateApiServiceIpFamilyPolicy & "PreferDualStack"

#KafkaMirrorMaker2SpecTemplateApiServiceIpFamilyPolicyRequireDualStack: #KafkaMirrorMaker2SpecTemplateApiServiceIpFamilyPolicy & "RequireDualStack"

#KafkaMirrorMaker2SpecTemplateApiServiceIpFamilyPolicySingleStack: #KafkaMirrorMaker2SpecTemplateApiServiceIpFamilyPolicy & "SingleStack"

// Metadata applied to the resource.
#KafkaMirrorMaker2SpecTemplateApiServiceMetadata: {
	// Annotations added to the Kubernetes resource.
	annotations?: #KafkaMirrorMaker2SpecTemplateApiServiceMetadataAnnotations @go(Annotations)

	// Labels added to the Kubernetes resource.
	labels?: #KafkaMirrorMaker2SpecTemplateApiServiceMetadataLabels @go(Labels)
}

// Annotations added to the Kubernetes resource.
#KafkaMirrorMaker2SpecTemplateApiServiceMetadataAnnotations: {[string]: string}

// Labels added to the Kubernetes resource.
#KafkaMirrorMaker2SpecTemplateApiServiceMetadataLabels: {[string]: string}

// Template for the Kafka Connect BuildConfig used to build new container images.
// The BuildConfig is used only on OpenShift.
#KafkaMirrorMaker2SpecTemplateBuildConfig: {
	// Metadata to apply to the `PodDisruptionBudgetTemplate` resource.
	metadata?: null | #KafkaMirrorMaker2SpecTemplateBuildConfigMetadata @go(Metadata,*KafkaMirrorMaker2SpecTemplateBuildConfigMetadata)

	// Container Registry Secret with the credentials for pulling the base image.
	pullSecret?: null | string @go(PullSecret,*string)
}

// Metadata to apply to the `PodDisruptionBudgetTemplate` resource.
#KafkaMirrorMaker2SpecTemplateBuildConfigMetadata: {
	// Annotations added to the Kubernetes resource.
	annotations?: #KafkaMirrorMaker2SpecTemplateBuildConfigMetadataAnnotations @go(Annotations)

	// Labels added to the Kubernetes resource.
	labels?: #KafkaMirrorMaker2SpecTemplateBuildConfigMetadataLabels @go(Labels)
}

// Annotations added to the Kubernetes resource.
#KafkaMirrorMaker2SpecTemplateBuildConfigMetadataAnnotations: {[string]: string}

// Labels added to the Kubernetes resource.
#KafkaMirrorMaker2SpecTemplateBuildConfigMetadataLabels: {[string]: string}

// Template for the Kafka Connect Build container. The build container is used only
// on Kubernetes.
#KafkaMirrorMaker2SpecTemplateBuildContainer: {
	// Environment variables which should be applied to the container.
	env?: [...#KafkaMirrorMaker2SpecTemplateBuildContainerEnvElem] @go(Env,[]KafkaMirrorMaker2SpecTemplateBuildContainerEnvElem)

	// Security context for the container.
	securityContext?: null | #KafkaMirrorMaker2SpecTemplateBuildContainerSecurityContext @go(SecurityContext,*KafkaMirrorMaker2SpecTemplateBuildContainerSecurityContext)
}

#KafkaMirrorMaker2SpecTemplateBuildContainerEnvElem: {
	// The environment variable key.
	name?: null | string @go(Name,*string)

	// The environment variable value.
	value?: null | string @go(Value,*string)
}

// Security context for the container.
#KafkaMirrorMaker2SpecTemplateBuildContainerSecurityContext: {
	// AllowPrivilegeEscalation corresponds to the JSON schema field
	// "allowPrivilegeEscalation".
	allowPrivilegeEscalation?: null | bool @go(AllowPrivilegeEscalation,*bool)

	// Capabilities corresponds to the JSON schema field "capabilities".
	capabilities?: null | #KafkaMirrorMaker2SpecTemplateBuildContainerSecurityContextCapabilities @go(Capabilities,*KafkaMirrorMaker2SpecTemplateBuildContainerSecurityContextCapabilities)

	// Privileged corresponds to the JSON schema field "privileged".
	privileged?: null | bool @go(Privileged,*bool)

	// ProcMount corresponds to the JSON schema field "procMount".
	procMount?: null | string @go(ProcMount,*string)

	// ReadOnlyRootFilesystem corresponds to the JSON schema field
	// "readOnlyRootFilesystem".
	readOnlyRootFilesystem?: null | bool @go(ReadOnlyRootFilesystem,*bool)

	// RunAsGroup corresponds to the JSON schema field "runAsGroup".
	runAsGroup?: null | int32 @go(RunAsGroup,*int32)

	// RunAsNonRoot corresponds to the JSON schema field "runAsNonRoot".
	runAsNonRoot?: null | bool @go(RunAsNonRoot,*bool)

	// RunAsUser corresponds to the JSON schema field "runAsUser".
	runAsUser?: null | int32 @go(RunAsUser,*int32)

	// SeLinuxOptions corresponds to the JSON schema field "seLinuxOptions".
	seLinuxOptions?: null | #KafkaMirrorMaker2SpecTemplateBuildContainerSecurityContextSeLinuxOptions @go(SeLinuxOptions,*KafkaMirrorMaker2SpecTemplateBuildContainerSecurityContextSeLinuxOptions)

	// SeccompProfile corresponds to the JSON schema field "seccompProfile".
	seccompProfile?: null | #KafkaMirrorMaker2SpecTemplateBuildContainerSecurityContextSeccompProfile @go(SeccompProfile,*KafkaMirrorMaker2SpecTemplateBuildContainerSecurityContextSeccompProfile)

	// WindowsOptions corresponds to the JSON schema field "windowsOptions".
	windowsOptions?: null | #KafkaMirrorMaker2SpecTemplateBuildContainerSecurityContextWindowsOptions @go(WindowsOptions,*KafkaMirrorMaker2SpecTemplateBuildContainerSecurityContextWindowsOptions)
}

#KafkaMirrorMaker2SpecTemplateBuildContainerSecurityContextCapabilities: {
	// Add corresponds to the JSON schema field "add".
	add?: [...string] @go(Add,[]string)

	// Drop corresponds to the JSON schema field "drop".
	drop?: [...string] @go(Drop,[]string)
}

#KafkaMirrorMaker2SpecTemplateBuildContainerSecurityContextSeLinuxOptions: {
	// Level corresponds to the JSON schema field "level".
	level?: null | string @go(Level,*string)

	// Role corresponds to the JSON schema field "role".
	role?: null | string @go(Role,*string)

	// Type corresponds to the JSON schema field "type".
	type?: null | string @go(Type,*string)

	// User corresponds to the JSON schema field "user".
	user?: null | string @go(User,*string)
}

#KafkaMirrorMaker2SpecTemplateBuildContainerSecurityContextSeccompProfile: {
	// LocalhostProfile corresponds to the JSON schema field "localhostProfile".
	localhostProfile?: null | string @go(LocalhostProfile,*string)

	// Type corresponds to the JSON schema field "type".
	type?: null | string @go(Type,*string)
}

#KafkaMirrorMaker2SpecTemplateBuildContainerSecurityContextWindowsOptions: {
	// GmsaCredentialSpec corresponds to the JSON schema field "gmsaCredentialSpec".
	gmsaCredentialSpec?: null | string @go(GmsaCredentialSpec,*string)

	// GmsaCredentialSpecName corresponds to the JSON schema field
	// "gmsaCredentialSpecName".
	gmsaCredentialSpecName?: null | string @go(GmsaCredentialSpecName,*string)

	// HostProcess corresponds to the JSON schema field "hostProcess".
	hostProcess?: null | bool @go(HostProcess,*bool)

	// RunAsUserName corresponds to the JSON schema field "runAsUserName".
	runAsUserName?: null | string @go(RunAsUserName,*string)
}

// Template for Kafka Connect Build `Pods`. The build pod is used only on
// Kubernetes.
#KafkaMirrorMaker2SpecTemplateBuildPod: {
	// The pod's affinity rules.
	affinity?: null | #KafkaMirrorMaker2SpecTemplateBuildPodAffinity @go(Affinity,*KafkaMirrorMaker2SpecTemplateBuildPodAffinity)

	// Indicates whether information about services should be injected into Pod's
	// environment variables.
	enableServiceLinks?: null | bool @go(EnableServiceLinks,*bool)

	// The pod's HostAliases. HostAliases is an optional list of hosts and IPs that
	// will be injected into the Pod's hosts file if specified.
	hostAliases?: [...#KafkaMirrorMaker2SpecTemplateBuildPodHostAliasesElem] @go(HostAliases,[]KafkaMirrorMaker2SpecTemplateBuildPodHostAliasesElem)

	// List of references to secrets in the same namespace to use for pulling any of
	// the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment
	// variable in Cluster Operator and the `imagePullSecrets` option are specified,
	// only the `imagePullSecrets` variable is used and the
	// `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored.
	imagePullSecrets?: [...#KafkaMirrorMaker2SpecTemplateBuildPodImagePullSecretsElem] @go(ImagePullSecrets,[]KafkaMirrorMaker2SpecTemplateBuildPodImagePullSecretsElem)

	// Metadata applied to the resource.
	metadata?: null | #KafkaMirrorMaker2SpecTemplateBuildPodMetadata @go(Metadata,*KafkaMirrorMaker2SpecTemplateBuildPodMetadata)

	// The name of the priority class used to assign priority to the pods.
	priorityClassName?: null | string @go(PriorityClassName,*string)

	// The name of the scheduler used to dispatch this `Pod`. If not specified, the
	// default scheduler will be used.
	schedulerName?: null | string @go(SchedulerName,*string)

	// Configures pod-level security attributes and common container settings.
	securityContext?: null | #KafkaMirrorMaker2SpecTemplateBuildPodSecurityContext @go(SecurityContext,*KafkaMirrorMaker2SpecTemplateBuildPodSecurityContext)

	// The grace period is the duration in seconds after the processes running in the
	// pod are sent a termination signal, and the time when the processes are forcibly
	// halted with a kill signal. Set this value to longer than the expected cleanup
	// time for your process. Value must be a non-negative integer. A zero value
	// indicates delete immediately. You might need to increase the grace period for
	// very large Kafka clusters, so that the Kafka brokers have enough time to
	// transfer their work to another broker before they are terminated. Defaults to
	// 30 seconds.
	terminationGracePeriodSeconds?: null | int32 @go(TerminationGracePeriodSeconds,*int32)

	// Defines the total amount (for example `1Gi`) of local storage required for
	// temporary EmptyDir volume (`/tmp`). Default value is `5Mi`.
	tmpDirSizeLimit?: null | string @go(TmpDirSizeLimit,*string)

	// The pod's tolerations.
	tolerations?: [...#KafkaMirrorMaker2SpecTemplateBuildPodTolerationsElem] @go(Tolerations,[]KafkaMirrorMaker2SpecTemplateBuildPodTolerationsElem)

	// The pod's topology spread constraints.
	topologySpreadConstraints?: [...#KafkaMirrorMaker2SpecTemplateBuildPodTopologySpreadConstraintsElem] @go(TopologySpreadConstraints,[]KafkaMirrorMaker2SpecTemplateBuildPodTopologySpreadConstraintsElem)
}

// The pod's affinity rules.
#KafkaMirrorMaker2SpecTemplateBuildPodAffinity: {
	// NodeAffinity corresponds to the JSON schema field "nodeAffinity".
	nodeAffinity?: null | #KafkaMirrorMaker2SpecTemplateBuildPodAffinityNodeAffinity @go(NodeAffinity,*KafkaMirrorMaker2SpecTemplateBuildPodAffinityNodeAffinity)

	// PodAffinity corresponds to the JSON schema field "podAffinity".
	podAffinity?: null | #KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAffinity @go(PodAffinity,*KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAffinity)

	// PodAntiAffinity corresponds to the JSON schema field "podAntiAffinity".
	podAntiAffinity?: null | #KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAntiAffinity @go(PodAntiAffinity,*KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAntiAffinity)
}

#KafkaMirrorMaker2SpecTemplateBuildPodAffinityNodeAffinity: {
	// PreferredDuringSchedulingIgnoredDuringExecution corresponds to the JSON schema
	// field "preferredDuringSchedulingIgnoredDuringExecution".
	preferredDuringSchedulingIgnoredDuringExecution?: [...#KafkaMirrorMaker2SpecTemplateBuildPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionElem] @go(PreferredDuringSchedulingIgnoredDuringExecution,[]KafkaMirrorMaker2SpecTemplateBuildPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionElem)

	// RequiredDuringSchedulingIgnoredDuringExecution corresponds to the JSON schema
	// field "requiredDuringSchedulingIgnoredDuringExecution".
	requiredDuringSchedulingIgnoredDuringExecution?: null | #KafkaMirrorMaker2SpecTemplateBuildPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution @go(RequiredDuringSchedulingIgnoredDuringExecution,*KafkaMirrorMaker2SpecTemplateBuildPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution)
}

#KafkaMirrorMaker2SpecTemplateBuildPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionElem: {
	// Preference corresponds to the JSON schema field "preference".
	preference?: null | #KafkaMirrorMaker2SpecTemplateBuildPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPreference @go(Preference,*KafkaMirrorMaker2SpecTemplateBuildPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPreference)

	// Weight corresponds to the JSON schema field "weight".
	weight?: null | int32 @go(Weight,*int32)
}

#KafkaMirrorMaker2SpecTemplateBuildPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPreference: {
	// MatchExpressions corresponds to the JSON schema field "matchExpressions".
	matchExpressions?: [...#KafkaMirrorMaker2SpecTemplateBuildPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPreferenceMatchExpressionsElem] @go(MatchExpressions,[]KafkaMirrorMaker2SpecTemplateBuildPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPreferenceMatchExpressionsElem)

	// MatchFields corresponds to the JSON schema field "matchFields".
	matchFields?: [...#KafkaMirrorMaker2SpecTemplateBuildPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPreferenceMatchFieldsElem] @go(MatchFields,[]KafkaMirrorMaker2SpecTemplateBuildPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPreferenceMatchFieldsElem)
}

#KafkaMirrorMaker2SpecTemplateBuildPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPreferenceMatchExpressionsElem: {
	// Key corresponds to the JSON schema field "key".
	key?: null | string @go(Key,*string)

	// Operator corresponds to the JSON schema field "operator".
	operator?: null | string @go(Operator,*string)

	// Values corresponds to the JSON schema field "values".
	values?: [...string] @go(Values,[]string)
}

#KafkaMirrorMaker2SpecTemplateBuildPodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPreferenceMatchFieldsElem: {
	// Key corresponds to the JSON schema field "key".
	key?: null | string @go(Key,*string)

	// Operator corresponds to the JSON schema field "operator".
	operator?: null | string @go(Operator,*string)

	// Values corresponds to the JSON schema field "values".
	values?: [...string] @go(Values,[]string)
}

#KafkaMirrorMaker2SpecTemplateBuildPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution: {
	// NodeSelectorTerms corresponds to the JSON schema field "nodeSelectorTerms".
	nodeSelectorTerms?: [...#KafkaMirrorMaker2SpecTemplateBuildPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsElem] @go(NodeSelectorTerms,[]KafkaMirrorMaker2SpecTemplateBuildPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsElem)
}

#KafkaMirrorMaker2SpecTemplateBuildPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsElem: {
	// MatchExpressions corresponds to the JSON schema field "matchExpressions".
	matchExpressions?: [...#KafkaMirrorMaker2SpecTemplateBuildPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsElemMatchExpressionsElem] @go(MatchExpressions,[]KafkaMirrorMaker2SpecTemplateBuildPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsElemMatchExpressionsElem)

	// MatchFields corresponds to the JSON schema field "matchFields".
	matchFields?: [...#KafkaMirrorMaker2SpecTemplateBuildPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsElemMatchFieldsElem] @go(MatchFields,[]KafkaMirrorMaker2SpecTemplateBuildPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsElemMatchFieldsElem)
}

#KafkaMirrorMaker2SpecTemplateBuildPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsElemMatchExpressionsElem: {
	// Key corresponds to the JSON schema field "key".
	key?: null | string @go(Key,*string)

	// Operator corresponds to the JSON schema field "operator".
	operator?: null | string @go(Operator,*string)

	// Values corresponds to the JSON schema field "values".
	values?: [...string] @go(Values,[]string)
}

#KafkaMirrorMaker2SpecTemplateBuildPodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsElemMatchFieldsElem: {
	// Key corresponds to the JSON schema field "key".
	key?: null | string @go(Key,*string)

	// Operator corresponds to the JSON schema field "operator".
	operator?: null | string @go(Operator,*string)

	// Values corresponds to the JSON schema field "values".
	values?: [...string] @go(Values,[]string)
}

#KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAffinity: {
	// PreferredDuringSchedulingIgnoredDuringExecution corresponds to the JSON schema
	// field "preferredDuringSchedulingIgnoredDuringExecution".
	preferredDuringSchedulingIgnoredDuringExecution?: [...#KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElem] @go(PreferredDuringSchedulingIgnoredDuringExecution,[]KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElem)

	// RequiredDuringSchedulingIgnoredDuringExecution corresponds to the JSON schema
	// field "requiredDuringSchedulingIgnoredDuringExecution".
	requiredDuringSchedulingIgnoredDuringExecution?: [...#KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElem] @go(RequiredDuringSchedulingIgnoredDuringExecution,[]KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElem)
}

#KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElem: {
	// PodAffinityTerm corresponds to the JSON schema field "podAffinityTerm".
	podAffinityTerm?: null | #KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTerm @go(PodAffinityTerm,*KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTerm)

	// Weight corresponds to the JSON schema field "weight".
	weight?: null | int32 @go(Weight,*int32)
}

#KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTerm: {
	// LabelSelector corresponds to the JSON schema field "labelSelector".
	labelSelector?: null | #KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermLabelSelector @go(LabelSelector,*KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermLabelSelector)

	// MatchLabelKeys corresponds to the JSON schema field "matchLabelKeys".
	matchLabelKeys?: [...string] @go(MatchLabelKeys,[]string)

	// MismatchLabelKeys corresponds to the JSON schema field "mismatchLabelKeys".
	mismatchLabelKeys?: [...string] @go(MismatchLabelKeys,[]string)

	// NamespaceSelector corresponds to the JSON schema field "namespaceSelector".
	namespaceSelector?: null | #KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermNamespaceSelector @go(NamespaceSelector,*KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermNamespaceSelector)

	// Namespaces corresponds to the JSON schema field "namespaces".
	namespaces?: [...string] @go(Namespaces,[]string)

	// TopologyKey corresponds to the JSON schema field "topologyKey".
	topologyKey?: null | string @go(TopologyKey,*string)
}

#KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermLabelSelector: {
	// MatchExpressions corresponds to the JSON schema field "matchExpressions".
	matchExpressions?: [...#KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermLabelSelectorMatchExpressionsElem] @go(MatchExpressions,[]KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermLabelSelectorMatchExpressionsElem)

	// MatchLabels corresponds to the JSON schema field "matchLabels".
	matchLabels?: #KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermLabelSelectorMatchLabels @go(MatchLabels)
}

#KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermLabelSelectorMatchExpressionsElem: {
	// Key corresponds to the JSON schema field "key".
	key?: null | string @go(Key,*string)

	// Operator corresponds to the JSON schema field "operator".
	operator?: null | string @go(Operator,*string)

	// Values corresponds to the JSON schema field "values".
	values?: [...string] @go(Values,[]string)
}

#KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermLabelSelectorMatchLabels: [string]: string

#KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermNamespaceSelector: {
	// MatchExpressions corresponds to the JSON schema field "matchExpressions".
	matchExpressions?: [...#KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermNamespaceSelectorMatchExpressionsElem] @go(MatchExpressions,[]KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermNamespaceSelectorMatchExpressionsElem)

	// MatchLabels corresponds to the JSON schema field "matchLabels".
	matchLabels?: #KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermNamespaceSelectorMatchLabels @go(MatchLabels)
}

#KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermNamespaceSelectorMatchExpressionsElem: {
	// Key corresponds to the JSON schema field "key".
	key?: null | string @go(Key,*string)

	// Operator corresponds to the JSON schema field "operator".
	operator?: null | string @go(Operator,*string)

	// Values corresponds to the JSON schema field "values".
	values?: [...string] @go(Values,[]string)
}

#KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermNamespaceSelectorMatchLabels: [string]: string

#KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElem: {
	// LabelSelector corresponds to the JSON schema field "labelSelector".
	labelSelector?: null | #KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemLabelSelector @go(LabelSelector,*KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemLabelSelector)

	// MatchLabelKeys corresponds to the JSON schema field "matchLabelKeys".
	matchLabelKeys?: [...string] @go(MatchLabelKeys,[]string)

	// MismatchLabelKeys corresponds to the JSON schema field "mismatchLabelKeys".
	mismatchLabelKeys?: [...string] @go(MismatchLabelKeys,[]string)

	// NamespaceSelector corresponds to the JSON schema field "namespaceSelector".
	namespaceSelector?: null | #KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemNamespaceSelector @go(NamespaceSelector,*KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemNamespaceSelector)

	// Namespaces corresponds to the JSON schema field "namespaces".
	namespaces?: [...string] @go(Namespaces,[]string)

	// TopologyKey corresponds to the JSON schema field "topologyKey".
	topologyKey?: null | string @go(TopologyKey,*string)
}

#KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemLabelSelector: {
	// MatchExpressions corresponds to the JSON schema field "matchExpressions".
	matchExpressions?: [...#KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemLabelSelectorMatchExpressionsElem] @go(MatchExpressions,[]KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemLabelSelectorMatchExpressionsElem)

	// MatchLabels corresponds to the JSON schema field "matchLabels".
	matchLabels?: #KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemLabelSelectorMatchLabels @go(MatchLabels)
}

#KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemLabelSelectorMatchExpressionsElem: {
	// Key corresponds to the JSON schema field "key".
	key?: null | string @go(Key,*string)

	// Operator corresponds to the JSON schema field "operator".
	operator?: null | string @go(Operator,*string)

	// Values corresponds to the JSON schema field "values".
	values?: [...string] @go(Values,[]string)
}

#KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemLabelSelectorMatchLabels: [string]: string

#KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemNamespaceSelector: {
	// MatchExpressions corresponds to the JSON schema field "matchExpressions".
	matchExpressions?: [...#KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemNamespaceSelectorMatchExpressionsElem] @go(MatchExpressions,[]KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemNamespaceSelectorMatchExpressionsElem)

	// MatchLabels corresponds to the JSON schema field "matchLabels".
	matchLabels?: #KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemNamespaceSelectorMatchLabels @go(MatchLabels)
}

#KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemNamespaceSelectorMatchExpressionsElem: {
	// Key corresponds to the JSON schema field "key".
	key?: null | string @go(Key,*string)

	// Operator corresponds to the JSON schema field "operator".
	operator?: null | string @go(Operator,*string)

	// Values corresponds to the JSON schema field "values".
	values?: [...string] @go(Values,[]string)
}

#KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemNamespaceSelectorMatchLabels: [string]: string

#KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAntiAffinity: {
	// PreferredDuringSchedulingIgnoredDuringExecution corresponds to the JSON schema
	// field "preferredDuringSchedulingIgnoredDuringExecution".
	preferredDuringSchedulingIgnoredDuringExecution?: [...#KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElem] @go(PreferredDuringSchedulingIgnoredDuringExecution,[]KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElem)

	// RequiredDuringSchedulingIgnoredDuringExecution corresponds to the JSON schema
	// field "requiredDuringSchedulingIgnoredDuringExecution".
	requiredDuringSchedulingIgnoredDuringExecution?: [...#KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElem] @go(RequiredDuringSchedulingIgnoredDuringExecution,[]KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElem)
}

#KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElem: {
	// PodAffinityTerm corresponds to the JSON schema field "podAffinityTerm".
	podAffinityTerm?: null | #KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTerm @go(PodAffinityTerm,*KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTerm)

	// Weight corresponds to the JSON schema field "weight".
	weight?: null | int32 @go(Weight,*int32)
}

#KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTerm: {
	// LabelSelector corresponds to the JSON schema field "labelSelector".
	labelSelector?: null | #KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermLabelSelector @go(LabelSelector,*KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermLabelSelector)

	// MatchLabelKeys corresponds to the JSON schema field "matchLabelKeys".
	matchLabelKeys?: [...string] @go(MatchLabelKeys,[]string)

	// MismatchLabelKeys corresponds to the JSON schema field "mismatchLabelKeys".
	mismatchLabelKeys?: [...string] @go(MismatchLabelKeys,[]string)

	// NamespaceSelector corresponds to the JSON schema field "namespaceSelector".
	namespaceSelector?: null | #KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermNamespaceSelector @go(NamespaceSelector,*KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermNamespaceSelector)

	// Namespaces corresponds to the JSON schema field "namespaces".
	namespaces?: [...string] @go(Namespaces,[]string)

	// TopologyKey corresponds to the JSON schema field "topologyKey".
	topologyKey?: null | string @go(TopologyKey,*string)
}

#KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermLabelSelector: {
	// MatchExpressions corresponds to the JSON schema field "matchExpressions".
	matchExpressions?: [...#KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermLabelSelectorMatchExpressionsElem] @go(MatchExpressions,[]KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermLabelSelectorMatchExpressionsElem)

	// MatchLabels corresponds to the JSON schema field "matchLabels".
	matchLabels?: #KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermLabelSelectorMatchLabels @go(MatchLabels)
}

#KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermLabelSelectorMatchExpressionsElem: {
	// Key corresponds to the JSON schema field "key".
	key?: null | string @go(Key,*string)

	// Operator corresponds to the JSON schema field "operator".
	operator?: null | string @go(Operator,*string)

	// Values corresponds to the JSON schema field "values".
	values?: [...string] @go(Values,[]string)
}

#KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermLabelSelectorMatchLabels: [string]: string

#KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermNamespaceSelector: {
	// MatchExpressions corresponds to the JSON schema field "matchExpressions".
	matchExpressions?: [...#KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermNamespaceSelectorMatchExpressionsElem] @go(MatchExpressions,[]KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermNamespaceSelectorMatchExpressionsElem)

	// MatchLabels corresponds to the JSON schema field "matchLabels".
	matchLabels?: #KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermNamespaceSelectorMatchLabels @go(MatchLabels)
}

#KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermNamespaceSelectorMatchExpressionsElem: {
	// Key corresponds to the JSON schema field "key".
	key?: null | string @go(Key,*string)

	// Operator corresponds to the JSON schema field "operator".
	operator?: null | string @go(Operator,*string)

	// Values corresponds to the JSON schema field "values".
	values?: [...string] @go(Values,[]string)
}

#KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermNamespaceSelectorMatchLabels: [string]: string

#KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElem: {
	// LabelSelector corresponds to the JSON schema field "labelSelector".
	labelSelector?: null | #KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemLabelSelector @go(LabelSelector,*KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemLabelSelector)

	// MatchLabelKeys corresponds to the JSON schema field "matchLabelKeys".
	matchLabelKeys?: [...string] @go(MatchLabelKeys,[]string)

	// MismatchLabelKeys corresponds to the JSON schema field "mismatchLabelKeys".
	mismatchLabelKeys?: [...string] @go(MismatchLabelKeys,[]string)

	// NamespaceSelector corresponds to the JSON schema field "namespaceSelector".
	namespaceSelector?: null | #KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemNamespaceSelector @go(NamespaceSelector,*KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemNamespaceSelector)

	// Namespaces corresponds to the JSON schema field "namespaces".
	namespaces?: [...string] @go(Namespaces,[]string)

	// TopologyKey corresponds to the JSON schema field "topologyKey".
	topologyKey?: null | string @go(TopologyKey,*string)
}

#KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemLabelSelector: {
	// MatchExpressions corresponds to the JSON schema field "matchExpressions".
	matchExpressions?: [...#KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemLabelSelectorMatchExpressionsElem] @go(MatchExpressions,[]KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemLabelSelectorMatchExpressionsElem)

	// MatchLabels corresponds to the JSON schema field "matchLabels".
	matchLabels?: #KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemLabelSelectorMatchLabels @go(MatchLabels)
}

#KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemLabelSelectorMatchExpressionsElem: {
	// Key corresponds to the JSON schema field "key".
	key?: null | string @go(Key,*string)

	// Operator corresponds to the JSON schema field "operator".
	operator?: null | string @go(Operator,*string)

	// Values corresponds to the JSON schema field "values".
	values?: [...string] @go(Values,[]string)
}

#KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemLabelSelectorMatchLabels: [string]: string

#KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemNamespaceSelector: {
	// MatchExpressions corresponds to the JSON schema field "matchExpressions".
	matchExpressions?: [...#KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemNamespaceSelectorMatchExpressionsElem] @go(MatchExpressions,[]KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemNamespaceSelectorMatchExpressionsElem)

	// MatchLabels corresponds to the JSON schema field "matchLabels".
	matchLabels?: #KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemNamespaceSelectorMatchLabels @go(MatchLabels)
}

#KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemNamespaceSelectorMatchExpressionsElem: {
	// Key corresponds to the JSON schema field "key".
	key?: null | string @go(Key,*string)

	// Operator corresponds to the JSON schema field "operator".
	operator?: null | string @go(Operator,*string)

	// Values corresponds to the JSON schema field "values".
	values?: [...string] @go(Values,[]string)
}

#KafkaMirrorMaker2SpecTemplateBuildPodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemNamespaceSelectorMatchLabels: [string]: string

#KafkaMirrorMaker2SpecTemplateBuildPodHostAliasesElem: {
	// Hostnames corresponds to the JSON schema field "hostnames".
	hostnames?: [...string] @go(Hostnames,[]string)

	// Ip corresponds to the JSON schema field "ip".
	ip?: null | string @go(Ip,*string)
}

#KafkaMirrorMaker2SpecTemplateBuildPodImagePullSecretsElem: {
	// Name corresponds to the JSON schema field "name".
	name?: null | string @go(Name,*string)
}

// Metadata applied to the resource.
#KafkaMirrorMaker2SpecTemplateBuildPodMetadata: {
	// Annotations added to the Kubernetes resource.
	annotations?: #KafkaMirrorMaker2SpecTemplateBuildPodMetadataAnnotations @go(Annotations)

	// Labels added to the Kubernetes resource.
	labels?: #KafkaMirrorMaker2SpecTemplateBuildPodMetadataLabels @go(Labels)
}

// Annotations added to the Kubernetes resource.
#KafkaMirrorMaker2SpecTemplateBuildPodMetadataAnnotations: {[string]: string}

// Labels added to the Kubernetes resource.
#KafkaMirrorMaker2SpecTemplateBuildPodMetadataLabels: {[string]: string}

// Configures pod-level security attributes and common container settings.
#KafkaMirrorMaker2SpecTemplateBuildPodSecurityContext: {
	// FsGroup corresponds to the JSON schema field "fsGroup".
	fsGroup?: null | int32 @go(FsGroup,*int32)

	// FsGroupChangePolicy corresponds to the JSON schema field "fsGroupChangePolicy".
	fsGroupChangePolicy?: null | string @go(FsGroupChangePolicy,*string)

	// RunAsGroup corresponds to the JSON schema field "runAsGroup".
	runAsGroup?: null | int32 @go(RunAsGroup,*int32)

	// RunAsNonRoot corresponds to the JSON schema field "runAsNonRoot".
	runAsNonRoot?: null | bool @go(RunAsNonRoot,*bool)

	// RunAsUser corresponds to the JSON schema field "runAsUser".
	runAsUser?: null | int32 @go(RunAsUser,*int32)

	// SeLinuxOptions corresponds to the JSON schema field "seLinuxOptions".
	seLinuxOptions?: null | #KafkaMirrorMaker2SpecTemplateBuildPodSecurityContextSeLinuxOptions @go(SeLinuxOptions,*KafkaMirrorMaker2SpecTemplateBuildPodSecurityContextSeLinuxOptions)

	// SeccompProfile corresponds to the JSON schema field "seccompProfile".
	seccompProfile?: null | #KafkaMirrorMaker2SpecTemplateBuildPodSecurityContextSeccompProfile @go(SeccompProfile,*KafkaMirrorMaker2SpecTemplateBuildPodSecurityContextSeccompProfile)

	// SupplementalGroups corresponds to the JSON schema field "supplementalGroups".
	supplementalGroups?: [...int32] @go(SupplementalGroups,[]int32)

	// Sysctls corresponds to the JSON schema field "sysctls".
	sysctls?: [...#KafkaMirrorMaker2SpecTemplateBuildPodSecurityContextSysctlsElem] @go(Sysctls,[]KafkaMirrorMaker2SpecTemplateBuildPodSecurityContextSysctlsElem)

	// WindowsOptions corresponds to the JSON schema field "windowsOptions".
	windowsOptions?: null | #KafkaMirrorMaker2SpecTemplateBuildPodSecurityContextWindowsOptions @go(WindowsOptions,*KafkaMirrorMaker2SpecTemplateBuildPodSecurityContextWindowsOptions)
}

#KafkaMirrorMaker2SpecTemplateBuildPodSecurityContextSeLinuxOptions: {
	// Level corresponds to the JSON schema field "level".
	level?: null | string @go(Level,*string)

	// Role corresponds to the JSON schema field "role".
	role?: null | string @go(Role,*string)

	// Type corresponds to the JSON schema field "type".
	type?: null | string @go(Type,*string)

	// User corresponds to the JSON schema field "user".
	user?: null | string @go(User,*string)
}

#KafkaMirrorMaker2SpecTemplateBuildPodSecurityContextSeccompProfile: {
	// LocalhostProfile corresponds to the JSON schema field "localhostProfile".
	localhostProfile?: null | string @go(LocalhostProfile,*string)

	// Type corresponds to the JSON schema field "type".
	type?: null | string @go(Type,*string)
}

#KafkaMirrorMaker2SpecTemplateBuildPodSecurityContextSysctlsElem: {
	// Name corresponds to the JSON schema field "name".
	name?: null | string @go(Name,*string)

	// Value corresponds to the JSON schema field "value".
	value?: null | string @go(Value,*string)
}

#KafkaMirrorMaker2SpecTemplateBuildPodSecurityContextWindowsOptions: {
	// GmsaCredentialSpec corresponds to the JSON schema field "gmsaCredentialSpec".
	gmsaCredentialSpec?: null | string @go(GmsaCredentialSpec,*string)

	// GmsaCredentialSpecName corresponds to the JSON schema field
	// "gmsaCredentialSpecName".
	gmsaCredentialSpecName?: null | string @go(GmsaCredentialSpecName,*string)

	// HostProcess corresponds to the JSON schema field "hostProcess".
	hostProcess?: null | bool @go(HostProcess,*bool)

	// RunAsUserName corresponds to the JSON schema field "runAsUserName".
	runAsUserName?: null | string @go(RunAsUserName,*string)
}

#KafkaMirrorMaker2SpecTemplateBuildPodTolerationsElem: {
	// Effect corresponds to the JSON schema field "effect".
	effect?: null | string @go(Effect,*string)

	// Key corresponds to the JSON schema field "key".
	key?: null | string @go(Key,*string)

	// Operator corresponds to the JSON schema field "operator".
	operator?: null | string @go(Operator,*string)

	// TolerationSeconds corresponds to the JSON schema field "tolerationSeconds".
	tolerationSeconds?: null | int32 @go(TolerationSeconds,*int32)

	// Value corresponds to the JSON schema field "value".
	value?: null | string @go(Value,*string)
}

#KafkaMirrorMaker2SpecTemplateBuildPodTopologySpreadConstraintsElem: {
	// LabelSelector corresponds to the JSON schema field "labelSelector".
	labelSelector?: null | #KafkaMirrorMaker2SpecTemplateBuildPodTopologySpreadConstraintsElemLabelSelector @go(LabelSelector,*KafkaMirrorMaker2SpecTemplateBuildPodTopologySpreadConstraintsElemLabelSelector)

	// MatchLabelKeys corresponds to the JSON schema field "matchLabelKeys".
	matchLabelKeys?: [...string] @go(MatchLabelKeys,[]string)

	// MaxSkew corresponds to the JSON schema field "maxSkew".
	maxSkew?: null | int32 @go(MaxSkew,*int32)

	// MinDomains corresponds to the JSON schema field "minDomains".
	minDomains?: null | int32 @go(MinDomains,*int32)

	// NodeAffinityPolicy corresponds to the JSON schema field "nodeAffinityPolicy".
	nodeAffinityPolicy?: null | string @go(NodeAffinityPolicy,*string)

	// NodeTaintsPolicy corresponds to the JSON schema field "nodeTaintsPolicy".
	nodeTaintsPolicy?: null | string @go(NodeTaintsPolicy,*string)

	// TopologyKey corresponds to the JSON schema field "topologyKey".
	topologyKey?: null | string @go(TopologyKey,*string)

	// WhenUnsatisfiable corresponds to the JSON schema field "whenUnsatisfiable".
	whenUnsatisfiable?: null | string @go(WhenUnsatisfiable,*string)
}

#KafkaMirrorMaker2SpecTemplateBuildPodTopologySpreadConstraintsElemLabelSelector: {
	// MatchExpressions corresponds to the JSON schema field "matchExpressions".
	matchExpressions?: [...#KafkaMirrorMaker2SpecTemplateBuildPodTopologySpreadConstraintsElemLabelSelectorMatchExpressionsElem] @go(MatchExpressions,[]KafkaMirrorMaker2SpecTemplateBuildPodTopologySpreadConstraintsElemLabelSelectorMatchExpressionsElem)

	// MatchLabels corresponds to the JSON schema field "matchLabels".
	matchLabels?: #KafkaMirrorMaker2SpecTemplateBuildPodTopologySpreadConstraintsElemLabelSelectorMatchLabels @go(MatchLabels)
}

#KafkaMirrorMaker2SpecTemplateBuildPodTopologySpreadConstraintsElemLabelSelectorMatchExpressionsElem: {
	// Key corresponds to the JSON schema field "key".
	key?: null | string @go(Key,*string)

	// Operator corresponds to the JSON schema field "operator".
	operator?: null | string @go(Operator,*string)

	// Values corresponds to the JSON schema field "values".
	values?: [...string] @go(Values,[]string)
}

#KafkaMirrorMaker2SpecTemplateBuildPodTopologySpreadConstraintsElemLabelSelectorMatchLabels: [string]: string

// Template for the Kafka Connect Build service account.
#KafkaMirrorMaker2SpecTemplateBuildServiceAccount: {
	// Metadata applied to the resource.
	metadata?: null | #KafkaMirrorMaker2SpecTemplateBuildServiceAccountMetadata @go(Metadata,*KafkaMirrorMaker2SpecTemplateBuildServiceAccountMetadata)
}

// Metadata applied to the resource.
#KafkaMirrorMaker2SpecTemplateBuildServiceAccountMetadata: {
	// Annotations added to the Kubernetes resource.
	annotations?: #KafkaMirrorMaker2SpecTemplateBuildServiceAccountMetadataAnnotations @go(Annotations)

	// Labels added to the Kubernetes resource.
	labels?: #KafkaMirrorMaker2SpecTemplateBuildServiceAccountMetadataLabels @go(Labels)
}

// Annotations added to the Kubernetes resource.
#KafkaMirrorMaker2SpecTemplateBuildServiceAccountMetadataAnnotations: {[string]: string}

// Labels added to the Kubernetes resource.
#KafkaMirrorMaker2SpecTemplateBuildServiceAccountMetadataLabels: {[string]: string}

// Template for the Kafka Connect ClusterRoleBinding.
#KafkaMirrorMaker2SpecTemplateClusterRoleBinding: {
	// Metadata applied to the resource.
	metadata?: null | #KafkaMirrorMaker2SpecTemplateClusterRoleBindingMetadata @go(Metadata,*KafkaMirrorMaker2SpecTemplateClusterRoleBindingMetadata)
}

// Metadata applied to the resource.
#KafkaMirrorMaker2SpecTemplateClusterRoleBindingMetadata: {
	// Annotations added to the Kubernetes resource.
	annotations?: #KafkaMirrorMaker2SpecTemplateClusterRoleBindingMetadataAnnotations @go(Annotations)

	// Labels added to the Kubernetes resource.
	labels?: #KafkaMirrorMaker2SpecTemplateClusterRoleBindingMetadataLabels @go(Labels)
}

// Annotations added to the Kubernetes resource.
#KafkaMirrorMaker2SpecTemplateClusterRoleBindingMetadataAnnotations: {[string]: string}

// Labels added to the Kubernetes resource.
#KafkaMirrorMaker2SpecTemplateClusterRoleBindingMetadataLabels: {[string]: string}

// Template for the Kafka Connect container.
#KafkaMirrorMaker2SpecTemplateConnectContainer: {
	// Environment variables which should be applied to the container.
	env?: [...#KafkaMirrorMaker2SpecTemplateConnectContainerEnvElem] @go(Env,[]KafkaMirrorMaker2SpecTemplateConnectContainerEnvElem)

	// Security context for the container.
	securityContext?: null | #KafkaMirrorMaker2SpecTemplateConnectContainerSecurityContext @go(SecurityContext,*KafkaMirrorMaker2SpecTemplateConnectContainerSecurityContext)
}

#KafkaMirrorMaker2SpecTemplateConnectContainerEnvElem: {
	// The environment variable key.
	name?: null | string @go(Name,*string)

	// The environment variable value.
	value?: null | string @go(Value,*string)
}

// Security context for the container.
#KafkaMirrorMaker2SpecTemplateConnectContainerSecurityContext: {
	// AllowPrivilegeEscalation corresponds to the JSON schema field
	// "allowPrivilegeEscalation".
	allowPrivilegeEscalation?: null | bool @go(AllowPrivilegeEscalation,*bool)

	// Capabilities corresponds to the JSON schema field "capabilities".
	capabilities?: null | #KafkaMirrorMaker2SpecTemplateConnectContainerSecurityContextCapabilities @go(Capabilities,*KafkaMirrorMaker2SpecTemplateConnectContainerSecurityContextCapabilities)

	// Privileged corresponds to the JSON schema field "privileged".
	privileged?: null | bool @go(Privileged,*bool)

	// ProcMount corresponds to the JSON schema field "procMount".
	procMount?: null | string @go(ProcMount,*string)

	// ReadOnlyRootFilesystem corresponds to the JSON schema field
	// "readOnlyRootFilesystem".
	readOnlyRootFilesystem?: null | bool @go(ReadOnlyRootFilesystem,*bool)

	// RunAsGroup corresponds to the JSON schema field "runAsGroup".
	runAsGroup?: null | int32 @go(RunAsGroup,*int32)

	// RunAsNonRoot corresponds to the JSON schema field "runAsNonRoot".
	runAsNonRoot?: null | bool @go(RunAsNonRoot,*bool)

	// RunAsUser corresponds to the JSON schema field "runAsUser".
	runAsUser?: null | int32 @go(RunAsUser,*int32)

	// SeLinuxOptions corresponds to the JSON schema field "seLinuxOptions".
	seLinuxOptions?: null | #KafkaMirrorMaker2SpecTemplateConnectContainerSecurityContextSeLinuxOptions @go(SeLinuxOptions,*KafkaMirrorMaker2SpecTemplateConnectContainerSecurityContextSeLinuxOptions)

	// SeccompProfile corresponds to the JSON schema field "seccompProfile".
	seccompProfile?: null | #KafkaMirrorMaker2SpecTemplateConnectContainerSecurityContextSeccompProfile @go(SeccompProfile,*KafkaMirrorMaker2SpecTemplateConnectContainerSecurityContextSeccompProfile)

	// WindowsOptions corresponds to the JSON schema field "windowsOptions".
	windowsOptions?: null | #KafkaMirrorMaker2SpecTemplateConnectContainerSecurityContextWindowsOptions @go(WindowsOptions,*KafkaMirrorMaker2SpecTemplateConnectContainerSecurityContextWindowsOptions)
}

#KafkaMirrorMaker2SpecTemplateConnectContainerSecurityContextCapabilities: {
	// Add corresponds to the JSON schema field "add".
	add?: [...string] @go(Add,[]string)

	// Drop corresponds to the JSON schema field "drop".
	drop?: [...string] @go(Drop,[]string)
}

#KafkaMirrorMaker2SpecTemplateConnectContainerSecurityContextSeLinuxOptions: {
	// Level corresponds to the JSON schema field "level".
	level?: null | string @go(Level,*string)

	// Role corresponds to the JSON schema field "role".
	role?: null | string @go(Role,*string)

	// Type corresponds to the JSON schema field "type".
	type?: null | string @go(Type,*string)

	// User corresponds to the JSON schema field "user".
	user?: null | string @go(User,*string)
}

#KafkaMirrorMaker2SpecTemplateConnectContainerSecurityContextSeccompProfile: {
	// LocalhostProfile corresponds to the JSON schema field "localhostProfile".
	localhostProfile?: null | string @go(LocalhostProfile,*string)

	// Type corresponds to the JSON schema field "type".
	type?: null | string @go(Type,*string)
}

#KafkaMirrorMaker2SpecTemplateConnectContainerSecurityContextWindowsOptions: {
	// GmsaCredentialSpec corresponds to the JSON schema field "gmsaCredentialSpec".
	gmsaCredentialSpec?: null | string @go(GmsaCredentialSpec,*string)

	// GmsaCredentialSpecName corresponds to the JSON schema field
	// "gmsaCredentialSpecName".
	gmsaCredentialSpecName?: null | string @go(GmsaCredentialSpecName,*string)

	// HostProcess corresponds to the JSON schema field "hostProcess".
	hostProcess?: null | bool @go(HostProcess,*bool)

	// RunAsUserName corresponds to the JSON schema field "runAsUserName".
	runAsUserName?: null | string @go(RunAsUserName,*string)
}

// Template for Kafka Connect `Deployment`.
#KafkaMirrorMaker2SpecTemplateDeployment: {
	// Pod replacement strategy for deployment configuration changes. Valid values are
	// `RollingUpdate` and `Recreate`. Defaults to `RollingUpdate`.
	deploymentStrategy?: null | #KafkaMirrorMaker2SpecTemplateDeploymentDeploymentStrategy @go(DeploymentStrategy,*KafkaMirrorMaker2SpecTemplateDeploymentDeploymentStrategy)

	// Metadata applied to the resource.
	metadata?: null | #KafkaMirrorMaker2SpecTemplateDeploymentMetadata @go(Metadata,*KafkaMirrorMaker2SpecTemplateDeploymentMetadata)
}

#KafkaMirrorMaker2SpecTemplateDeploymentDeploymentStrategy: _ // #enumKafkaMirrorMaker2SpecTemplateDeploymentDeploymentStrategy

#enumKafkaMirrorMaker2SpecTemplateDeploymentDeploymentStrategy:
	#KafkaMirrorMaker2SpecTemplateDeploymentDeploymentStrategyRecreate |
	#KafkaMirrorMaker2SpecTemplateDeploymentDeploymentStrategyRollingUpdate

#KafkaMirrorMaker2SpecTemplateDeploymentDeploymentStrategyRecreate: #KafkaMirrorMaker2SpecTemplateDeploymentDeploymentStrategy & "Recreate"

#KafkaMirrorMaker2SpecTemplateDeploymentDeploymentStrategyRollingUpdate: #KafkaMirrorMaker2SpecTemplateDeploymentDeploymentStrategy & "RollingUpdate"

// Metadata applied to the resource.
#KafkaMirrorMaker2SpecTemplateDeploymentMetadata: {
	// Annotations added to the Kubernetes resource.
	annotations?: #KafkaMirrorMaker2SpecTemplateDeploymentMetadataAnnotations @go(Annotations)

	// Labels added to the Kubernetes resource.
	labels?: #KafkaMirrorMaker2SpecTemplateDeploymentMetadataLabels @go(Labels)
}

// Annotations added to the Kubernetes resource.
#KafkaMirrorMaker2SpecTemplateDeploymentMetadataAnnotations: {[string]: string}

// Labels added to the Kubernetes resource.
#KafkaMirrorMaker2SpecTemplateDeploymentMetadataLabels: {[string]: string}

// Template for Kafka Connect headless `Service`.
#KafkaMirrorMaker2SpecTemplateHeadlessService: {
	// Specifies the IP Families used by the service. Available options are `IPv4` and
	// `IPv6`. If unspecified, Kubernetes will choose the default value based on the
	// `ipFamilyPolicy` setting.
	ipFamilies?: [...#KafkaMirrorMaker2SpecTemplateHeadlessServiceIpFamiliesElem] @go(IpFamilies,[]KafkaMirrorMaker2SpecTemplateHeadlessServiceIpFamiliesElem)

	// Specifies the IP Family Policy used by the service. Available options are
	// `SingleStack`, `PreferDualStack` and `RequireDualStack`. `SingleStack` is for a
	// single IP family. `PreferDualStack` is for two IP families on dual-stack
	// configured clusters or a single IP family on single-stack clusters.
	// `RequireDualStack` fails unless there are two IP families on dual-stack
	// configured clusters. If unspecified, Kubernetes will choose the default value
	// based on the service type.
	ipFamilyPolicy?: null | #KafkaMirrorMaker2SpecTemplateHeadlessServiceIpFamilyPolicy @go(IpFamilyPolicy,*KafkaMirrorMaker2SpecTemplateHeadlessServiceIpFamilyPolicy)

	// Metadata applied to the resource.
	metadata?: null | #KafkaMirrorMaker2SpecTemplateHeadlessServiceMetadata @go(Metadata,*KafkaMirrorMaker2SpecTemplateHeadlessServiceMetadata)
}

#KafkaMirrorMaker2SpecTemplateHeadlessServiceIpFamiliesElem: _ // #enumKafkaMirrorMaker2SpecTemplateHeadlessServiceIpFamiliesElem

#enumKafkaMirrorMaker2SpecTemplateHeadlessServiceIpFamiliesElem:
	#KafkaMirrorMaker2SpecTemplateHeadlessServiceIpFamiliesElemIPv4 |
	#KafkaMirrorMaker2SpecTemplateHeadlessServiceIpFamiliesElemIPv6

#KafkaMirrorMaker2SpecTemplateHeadlessServiceIpFamiliesElemIPv4: #KafkaMirrorMaker2SpecTemplateHeadlessServiceIpFamiliesElem & "IPv4"

#KafkaMirrorMaker2SpecTemplateHeadlessServiceIpFamiliesElemIPv6: #KafkaMirrorMaker2SpecTemplateHeadlessServiceIpFamiliesElem & "IPv6"

#KafkaMirrorMaker2SpecTemplateHeadlessServiceIpFamilyPolicy: _ // #enumKafkaMirrorMaker2SpecTemplateHeadlessServiceIpFamilyPolicy

#enumKafkaMirrorMaker2SpecTemplateHeadlessServiceIpFamilyPolicy:
	#KafkaMirrorMaker2SpecTemplateHeadlessServiceIpFamilyPolicyPreferDualStack |
	#KafkaMirrorMaker2SpecTemplateHeadlessServiceIpFamilyPolicyRequireDualStack |
	#KafkaMirrorMaker2SpecTemplateHeadlessServiceIpFamilyPolicySingleStack

#KafkaMirrorMaker2SpecTemplateHeadlessServiceIpFamilyPolicyPreferDualStack: #KafkaMirrorMaker2SpecTemplateHeadlessServiceIpFamilyPolicy & "PreferDualStack"

#KafkaMirrorMaker2SpecTemplateHeadlessServiceIpFamilyPolicyRequireDualStack: #KafkaMirrorMaker2SpecTemplateHeadlessServiceIpFamilyPolicy & "RequireDualStack"

#KafkaMirrorMaker2SpecTemplateHeadlessServiceIpFamilyPolicySingleStack: #KafkaMirrorMaker2SpecTemplateHeadlessServiceIpFamilyPolicy & "SingleStack"

// Metadata applied to the resource.
#KafkaMirrorMaker2SpecTemplateHeadlessServiceMetadata: {
	// Annotations added to the Kubernetes resource.
	annotations?: #KafkaMirrorMaker2SpecTemplateHeadlessServiceMetadataAnnotations @go(Annotations)

	// Labels added to the Kubernetes resource.
	labels?: #KafkaMirrorMaker2SpecTemplateHeadlessServiceMetadataLabels @go(Labels)
}

// Annotations added to the Kubernetes resource.
#KafkaMirrorMaker2SpecTemplateHeadlessServiceMetadataAnnotations: {[string]: string}

// Labels added to the Kubernetes resource.
#KafkaMirrorMaker2SpecTemplateHeadlessServiceMetadataLabels: {[string]: string}

// Template for the Kafka init container.
#KafkaMirrorMaker2SpecTemplateInitContainer: {
	// Environment variables which should be applied to the container.
	env?: [...#KafkaMirrorMaker2SpecTemplateInitContainerEnvElem] @go(Env,[]KafkaMirrorMaker2SpecTemplateInitContainerEnvElem)

	// Security context for the container.
	securityContext?: null | #KafkaMirrorMaker2SpecTemplateInitContainerSecurityContext @go(SecurityContext,*KafkaMirrorMaker2SpecTemplateInitContainerSecurityContext)
}

#KafkaMirrorMaker2SpecTemplateInitContainerEnvElem: {
	// The environment variable key.
	name?: null | string @go(Name,*string)

	// The environment variable value.
	value?: null | string @go(Value,*string)
}

// Security context for the container.
#KafkaMirrorMaker2SpecTemplateInitContainerSecurityContext: {
	// AllowPrivilegeEscalation corresponds to the JSON schema field
	// "allowPrivilegeEscalation".
	allowPrivilegeEscalation?: null | bool @go(AllowPrivilegeEscalation,*bool)

	// Capabilities corresponds to the JSON schema field "capabilities".
	capabilities?: null | #KafkaMirrorMaker2SpecTemplateInitContainerSecurityContextCapabilities @go(Capabilities,*KafkaMirrorMaker2SpecTemplateInitContainerSecurityContextCapabilities)

	// Privileged corresponds to the JSON schema field "privileged".
	privileged?: null | bool @go(Privileged,*bool)

	// ProcMount corresponds to the JSON schema field "procMount".
	procMount?: null | string @go(ProcMount,*string)

	// ReadOnlyRootFilesystem corresponds to the JSON schema field
	// "readOnlyRootFilesystem".
	readOnlyRootFilesystem?: null | bool @go(ReadOnlyRootFilesystem,*bool)

	// RunAsGroup corresponds to the JSON schema field "runAsGroup".
	runAsGroup?: null | int32 @go(RunAsGroup,*int32)

	// RunAsNonRoot corresponds to the JSON schema field "runAsNonRoot".
	runAsNonRoot?: null | bool @go(RunAsNonRoot,*bool)

	// RunAsUser corresponds to the JSON schema field "runAsUser".
	runAsUser?: null | int32 @go(RunAsUser,*int32)

	// SeLinuxOptions corresponds to the JSON schema field "seLinuxOptions".
	seLinuxOptions?: null | #KafkaMirrorMaker2SpecTemplateInitContainerSecurityContextSeLinuxOptions @go(SeLinuxOptions,*KafkaMirrorMaker2SpecTemplateInitContainerSecurityContextSeLinuxOptions)

	// SeccompProfile corresponds to the JSON schema field "seccompProfile".
	seccompProfile?: null | #KafkaMirrorMaker2SpecTemplateInitContainerSecurityContextSeccompProfile @go(SeccompProfile,*KafkaMirrorMaker2SpecTemplateInitContainerSecurityContextSeccompProfile)

	// WindowsOptions corresponds to the JSON schema field "windowsOptions".
	windowsOptions?: null | #KafkaMirrorMaker2SpecTemplateInitContainerSecurityContextWindowsOptions @go(WindowsOptions,*KafkaMirrorMaker2SpecTemplateInitContainerSecurityContextWindowsOptions)
}

#KafkaMirrorMaker2SpecTemplateInitContainerSecurityContextCapabilities: {
	// Add corresponds to the JSON schema field "add".
	add?: [...string] @go(Add,[]string)

	// Drop corresponds to the JSON schema field "drop".
	drop?: [...string] @go(Drop,[]string)
}

#KafkaMirrorMaker2SpecTemplateInitContainerSecurityContextSeLinuxOptions: {
	// Level corresponds to the JSON schema field "level".
	level?: null | string @go(Level,*string)

	// Role corresponds to the JSON schema field "role".
	role?: null | string @go(Role,*string)

	// Type corresponds to the JSON schema field "type".
	type?: null | string @go(Type,*string)

	// User corresponds to the JSON schema field "user".
	user?: null | string @go(User,*string)
}

#KafkaMirrorMaker2SpecTemplateInitContainerSecurityContextSeccompProfile: {
	// LocalhostProfile corresponds to the JSON schema field "localhostProfile".
	localhostProfile?: null | string @go(LocalhostProfile,*string)

	// Type corresponds to the JSON schema field "type".
	type?: null | string @go(Type,*string)
}

#KafkaMirrorMaker2SpecTemplateInitContainerSecurityContextWindowsOptions: {
	// GmsaCredentialSpec corresponds to the JSON schema field "gmsaCredentialSpec".
	gmsaCredentialSpec?: null | string @go(GmsaCredentialSpec,*string)

	// GmsaCredentialSpecName corresponds to the JSON schema field
	// "gmsaCredentialSpecName".
	gmsaCredentialSpecName?: null | string @go(GmsaCredentialSpecName,*string)

	// HostProcess corresponds to the JSON schema field "hostProcess".
	hostProcess?: null | bool @go(HostProcess,*bool)

	// RunAsUserName corresponds to the JSON schema field "runAsUserName".
	runAsUserName?: null | string @go(RunAsUserName,*string)
}

// Template for Secret of the Kafka Connect Cluster JMX authentication.
#KafkaMirrorMaker2SpecTemplateJmxSecret: {
	// Metadata applied to the resource.
	metadata?: null | #KafkaMirrorMaker2SpecTemplateJmxSecretMetadata @go(Metadata,*KafkaMirrorMaker2SpecTemplateJmxSecretMetadata)
}

// Metadata applied to the resource.
#KafkaMirrorMaker2SpecTemplateJmxSecretMetadata: {
	// Annotations added to the Kubernetes resource.
	annotations?: #KafkaMirrorMaker2SpecTemplateJmxSecretMetadataAnnotations @go(Annotations)

	// Labels added to the Kubernetes resource.
	labels?: #KafkaMirrorMaker2SpecTemplateJmxSecretMetadataLabels @go(Labels)
}

// Annotations added to the Kubernetes resource.
#KafkaMirrorMaker2SpecTemplateJmxSecretMetadataAnnotations: {[string]: string}

// Labels added to the Kubernetes resource.
#KafkaMirrorMaker2SpecTemplateJmxSecretMetadataLabels: {[string]: string}

// Template for Kafka Connect `Pods`.
#KafkaMirrorMaker2SpecTemplatePod: {
	// The pod's affinity rules.
	affinity?: null | #KafkaMirrorMaker2SpecTemplatePodAffinity @go(Affinity,*KafkaMirrorMaker2SpecTemplatePodAffinity)

	// Indicates whether information about services should be injected into Pod's
	// environment variables.
	enableServiceLinks?: null | bool @go(EnableServiceLinks,*bool)

	// The pod's HostAliases. HostAliases is an optional list of hosts and IPs that
	// will be injected into the Pod's hosts file if specified.
	hostAliases?: [...#KafkaMirrorMaker2SpecTemplatePodHostAliasesElem] @go(HostAliases,[]KafkaMirrorMaker2SpecTemplatePodHostAliasesElem)

	// List of references to secrets in the same namespace to use for pulling any of
	// the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment
	// variable in Cluster Operator and the `imagePullSecrets` option are specified,
	// only the `imagePullSecrets` variable is used and the
	// `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored.
	imagePullSecrets?: [...#KafkaMirrorMaker2SpecTemplatePodImagePullSecretsElem] @go(ImagePullSecrets,[]KafkaMirrorMaker2SpecTemplatePodImagePullSecretsElem)

	// Metadata applied to the resource.
	metadata?: null | #KafkaMirrorMaker2SpecTemplatePodMetadata @go(Metadata,*KafkaMirrorMaker2SpecTemplatePodMetadata)

	// The name of the priority class used to assign priority to the pods.
	priorityClassName?: null | string @go(PriorityClassName,*string)

	// The name of the scheduler used to dispatch this `Pod`. If not specified, the
	// default scheduler will be used.
	schedulerName?: null | string @go(SchedulerName,*string)

	// Configures pod-level security attributes and common container settings.
	securityContext?: null | #KafkaMirrorMaker2SpecTemplatePodSecurityContext @go(SecurityContext,*KafkaMirrorMaker2SpecTemplatePodSecurityContext)

	// The grace period is the duration in seconds after the processes running in the
	// pod are sent a termination signal, and the time when the processes are forcibly
	// halted with a kill signal. Set this value to longer than the expected cleanup
	// time for your process. Value must be a non-negative integer. A zero value
	// indicates delete immediately. You might need to increase the grace period for
	// very large Kafka clusters, so that the Kafka brokers have enough time to
	// transfer their work to another broker before they are terminated. Defaults to
	// 30 seconds.
	terminationGracePeriodSeconds?: null | int32 @go(TerminationGracePeriodSeconds,*int32)

	// Defines the total amount (for example `1Gi`) of local storage required for
	// temporary EmptyDir volume (`/tmp`). Default value is `5Mi`.
	tmpDirSizeLimit?: null | string @go(TmpDirSizeLimit,*string)

	// The pod's tolerations.
	tolerations?: [...#KafkaMirrorMaker2SpecTemplatePodTolerationsElem] @go(Tolerations,[]KafkaMirrorMaker2SpecTemplatePodTolerationsElem)

	// The pod's topology spread constraints.
	topologySpreadConstraints?: [...#KafkaMirrorMaker2SpecTemplatePodTopologySpreadConstraintsElem] @go(TopologySpreadConstraints,[]KafkaMirrorMaker2SpecTemplatePodTopologySpreadConstraintsElem)
}

// The pod's affinity rules.
#KafkaMirrorMaker2SpecTemplatePodAffinity: {
	// NodeAffinity corresponds to the JSON schema field "nodeAffinity".
	nodeAffinity?: null | #KafkaMirrorMaker2SpecTemplatePodAffinityNodeAffinity @go(NodeAffinity,*KafkaMirrorMaker2SpecTemplatePodAffinityNodeAffinity)

	// PodAffinity corresponds to the JSON schema field "podAffinity".
	podAffinity?: null | #KafkaMirrorMaker2SpecTemplatePodAffinityPodAffinity @go(PodAffinity,*KafkaMirrorMaker2SpecTemplatePodAffinityPodAffinity)

	// PodAntiAffinity corresponds to the JSON schema field "podAntiAffinity".
	podAntiAffinity?: null | #KafkaMirrorMaker2SpecTemplatePodAffinityPodAntiAffinity @go(PodAntiAffinity,*KafkaMirrorMaker2SpecTemplatePodAffinityPodAntiAffinity)
}

#KafkaMirrorMaker2SpecTemplatePodAffinityNodeAffinity: {
	// PreferredDuringSchedulingIgnoredDuringExecution corresponds to the JSON schema
	// field "preferredDuringSchedulingIgnoredDuringExecution".
	preferredDuringSchedulingIgnoredDuringExecution?: [...#KafkaMirrorMaker2SpecTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionElem] @go(PreferredDuringSchedulingIgnoredDuringExecution,[]KafkaMirrorMaker2SpecTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionElem)

	// RequiredDuringSchedulingIgnoredDuringExecution corresponds to the JSON schema
	// field "requiredDuringSchedulingIgnoredDuringExecution".
	requiredDuringSchedulingIgnoredDuringExecution?: null | #KafkaMirrorMaker2SpecTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution @go(RequiredDuringSchedulingIgnoredDuringExecution,*KafkaMirrorMaker2SpecTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution)
}

#KafkaMirrorMaker2SpecTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionElem: {
	// Preference corresponds to the JSON schema field "preference".
	preference?: null | #KafkaMirrorMaker2SpecTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPreference @go(Preference,*KafkaMirrorMaker2SpecTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPreference)

	// Weight corresponds to the JSON schema field "weight".
	weight?: null | int32 @go(Weight,*int32)
}

#KafkaMirrorMaker2SpecTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPreference: {
	// MatchExpressions corresponds to the JSON schema field "matchExpressions".
	matchExpressions?: [...#KafkaMirrorMaker2SpecTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPreferenceMatchExpressionsElem] @go(MatchExpressions,[]KafkaMirrorMaker2SpecTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPreferenceMatchExpressionsElem)

	// MatchFields corresponds to the JSON schema field "matchFields".
	matchFields?: [...#KafkaMirrorMaker2SpecTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPreferenceMatchFieldsElem] @go(MatchFields,[]KafkaMirrorMaker2SpecTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPreferenceMatchFieldsElem)
}

#KafkaMirrorMaker2SpecTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPreferenceMatchExpressionsElem: {
	// Key corresponds to the JSON schema field "key".
	key?: null | string @go(Key,*string)

	// Operator corresponds to the JSON schema field "operator".
	operator?: null | string @go(Operator,*string)

	// Values corresponds to the JSON schema field "values".
	values?: [...string] @go(Values,[]string)
}

#KafkaMirrorMaker2SpecTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPreferenceMatchFieldsElem: {
	// Key corresponds to the JSON schema field "key".
	key?: null | string @go(Key,*string)

	// Operator corresponds to the JSON schema field "operator".
	operator?: null | string @go(Operator,*string)

	// Values corresponds to the JSON schema field "values".
	values?: [...string] @go(Values,[]string)
}

#KafkaMirrorMaker2SpecTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution: {
	// NodeSelectorTerms corresponds to the JSON schema field "nodeSelectorTerms".
	nodeSelectorTerms?: [...#KafkaMirrorMaker2SpecTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsElem] @go(NodeSelectorTerms,[]KafkaMirrorMaker2SpecTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsElem)
}

#KafkaMirrorMaker2SpecTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsElem: {
	// MatchExpressions corresponds to the JSON schema field "matchExpressions".
	matchExpressions?: [...#KafkaMirrorMaker2SpecTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsElemMatchExpressionsElem] @go(MatchExpressions,[]KafkaMirrorMaker2SpecTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsElemMatchExpressionsElem)

	// MatchFields corresponds to the JSON schema field "matchFields".
	matchFields?: [...#KafkaMirrorMaker2SpecTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsElemMatchFieldsElem] @go(MatchFields,[]KafkaMirrorMaker2SpecTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsElemMatchFieldsElem)
}

#KafkaMirrorMaker2SpecTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsElemMatchExpressionsElem: {
	// Key corresponds to the JSON schema field "key".
	key?: null | string @go(Key,*string)

	// Operator corresponds to the JSON schema field "operator".
	operator?: null | string @go(Operator,*string)

	// Values corresponds to the JSON schema field "values".
	values?: [...string] @go(Values,[]string)
}

#KafkaMirrorMaker2SpecTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsElemMatchFieldsElem: {
	// Key corresponds to the JSON schema field "key".
	key?: null | string @go(Key,*string)

	// Operator corresponds to the JSON schema field "operator".
	operator?: null | string @go(Operator,*string)

	// Values corresponds to the JSON schema field "values".
	values?: [...string] @go(Values,[]string)
}

#KafkaMirrorMaker2SpecTemplatePodAffinityPodAffinity: {
	// PreferredDuringSchedulingIgnoredDuringExecution corresponds to the JSON schema
	// field "preferredDuringSchedulingIgnoredDuringExecution".
	preferredDuringSchedulingIgnoredDuringExecution?: [...#KafkaMirrorMaker2SpecTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElem] @go(PreferredDuringSchedulingIgnoredDuringExecution,[]KafkaMirrorMaker2SpecTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElem)

	// RequiredDuringSchedulingIgnoredDuringExecution corresponds to the JSON schema
	// field "requiredDuringSchedulingIgnoredDuringExecution".
	requiredDuringSchedulingIgnoredDuringExecution?: [...#KafkaMirrorMaker2SpecTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElem] @go(RequiredDuringSchedulingIgnoredDuringExecution,[]KafkaMirrorMaker2SpecTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElem)
}

#KafkaMirrorMaker2SpecTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElem: {
	// PodAffinityTerm corresponds to the JSON schema field "podAffinityTerm".
	podAffinityTerm?: null | #KafkaMirrorMaker2SpecTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTerm @go(PodAffinityTerm,*KafkaMirrorMaker2SpecTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTerm)

	// Weight corresponds to the JSON schema field "weight".
	weight?: null | int32 @go(Weight,*int32)
}

#KafkaMirrorMaker2SpecTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTerm: {
	// LabelSelector corresponds to the JSON schema field "labelSelector".
	labelSelector?: null | #KafkaMirrorMaker2SpecTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermLabelSelector @go(LabelSelector,*KafkaMirrorMaker2SpecTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermLabelSelector)

	// MatchLabelKeys corresponds to the JSON schema field "matchLabelKeys".
	matchLabelKeys?: [...string] @go(MatchLabelKeys,[]string)

	// MismatchLabelKeys corresponds to the JSON schema field "mismatchLabelKeys".
	mismatchLabelKeys?: [...string] @go(MismatchLabelKeys,[]string)

	// NamespaceSelector corresponds to the JSON schema field "namespaceSelector".
	namespaceSelector?: null | #KafkaMirrorMaker2SpecTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermNamespaceSelector @go(NamespaceSelector,*KafkaMirrorMaker2SpecTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermNamespaceSelector)

	// Namespaces corresponds to the JSON schema field "namespaces".
	namespaces?: [...string] @go(Namespaces,[]string)

	// TopologyKey corresponds to the JSON schema field "topologyKey".
	topologyKey?: null | string @go(TopologyKey,*string)
}

#KafkaMirrorMaker2SpecTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermLabelSelector: {
	// MatchExpressions corresponds to the JSON schema field "matchExpressions".
	matchExpressions?: [...#KafkaMirrorMaker2SpecTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermLabelSelectorMatchExpressionsElem] @go(MatchExpressions,[]KafkaMirrorMaker2SpecTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermLabelSelectorMatchExpressionsElem)

	// MatchLabels corresponds to the JSON schema field "matchLabels".
	matchLabels?: #KafkaMirrorMaker2SpecTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermLabelSelectorMatchLabels @go(MatchLabels)
}

#KafkaMirrorMaker2SpecTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermLabelSelectorMatchExpressionsElem: {
	// Key corresponds to the JSON schema field "key".
	key?: null | string @go(Key,*string)

	// Operator corresponds to the JSON schema field "operator".
	operator?: null | string @go(Operator,*string)

	// Values corresponds to the JSON schema field "values".
	values?: [...string] @go(Values,[]string)
}

#KafkaMirrorMaker2SpecTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermLabelSelectorMatchLabels: [string]: string

#KafkaMirrorMaker2SpecTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermNamespaceSelector: {
	// MatchExpressions corresponds to the JSON schema field "matchExpressions".
	matchExpressions?: [...#KafkaMirrorMaker2SpecTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermNamespaceSelectorMatchExpressionsElem] @go(MatchExpressions,[]KafkaMirrorMaker2SpecTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermNamespaceSelectorMatchExpressionsElem)

	// MatchLabels corresponds to the JSON schema field "matchLabels".
	matchLabels?: #KafkaMirrorMaker2SpecTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermNamespaceSelectorMatchLabels @go(MatchLabels)
}

#KafkaMirrorMaker2SpecTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermNamespaceSelectorMatchExpressionsElem: {
	// Key corresponds to the JSON schema field "key".
	key?: null | string @go(Key,*string)

	// Operator corresponds to the JSON schema field "operator".
	operator?: null | string @go(Operator,*string)

	// Values corresponds to the JSON schema field "values".
	values?: [...string] @go(Values,[]string)
}

#KafkaMirrorMaker2SpecTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermNamespaceSelectorMatchLabels: [string]: string

#KafkaMirrorMaker2SpecTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElem: {
	// LabelSelector corresponds to the JSON schema field "labelSelector".
	labelSelector?: null | #KafkaMirrorMaker2SpecTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemLabelSelector @go(LabelSelector,*KafkaMirrorMaker2SpecTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemLabelSelector)

	// MatchLabelKeys corresponds to the JSON schema field "matchLabelKeys".
	matchLabelKeys?: [...string] @go(MatchLabelKeys,[]string)

	// MismatchLabelKeys corresponds to the JSON schema field "mismatchLabelKeys".
	mismatchLabelKeys?: [...string] @go(MismatchLabelKeys,[]string)

	// NamespaceSelector corresponds to the JSON schema field "namespaceSelector".
	namespaceSelector?: null | #KafkaMirrorMaker2SpecTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemNamespaceSelector @go(NamespaceSelector,*KafkaMirrorMaker2SpecTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemNamespaceSelector)

	// Namespaces corresponds to the JSON schema field "namespaces".
	namespaces?: [...string] @go(Namespaces,[]string)

	// TopologyKey corresponds to the JSON schema field "topologyKey".
	topologyKey?: null | string @go(TopologyKey,*string)
}

#KafkaMirrorMaker2SpecTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemLabelSelector: {
	// MatchExpressions corresponds to the JSON schema field "matchExpressions".
	matchExpressions?: [...#KafkaMirrorMaker2SpecTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemLabelSelectorMatchExpressionsElem] @go(MatchExpressions,[]KafkaMirrorMaker2SpecTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemLabelSelectorMatchExpressionsElem)

	// MatchLabels corresponds to the JSON schema field "matchLabels".
	matchLabels?: #KafkaMirrorMaker2SpecTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemLabelSelectorMatchLabels @go(MatchLabels)
}

#KafkaMirrorMaker2SpecTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemLabelSelectorMatchExpressionsElem: {
	// Key corresponds to the JSON schema field "key".
	key?: null | string @go(Key,*string)

	// Operator corresponds to the JSON schema field "operator".
	operator?: null | string @go(Operator,*string)

	// Values corresponds to the JSON schema field "values".
	values?: [...string] @go(Values,[]string)
}

#KafkaMirrorMaker2SpecTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemLabelSelectorMatchLabels: [string]: string

#KafkaMirrorMaker2SpecTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemNamespaceSelector: {
	// MatchExpressions corresponds to the JSON schema field "matchExpressions".
	matchExpressions?: [...#KafkaMirrorMaker2SpecTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemNamespaceSelectorMatchExpressionsElem] @go(MatchExpressions,[]KafkaMirrorMaker2SpecTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemNamespaceSelectorMatchExpressionsElem)

	// MatchLabels corresponds to the JSON schema field "matchLabels".
	matchLabels?: #KafkaMirrorMaker2SpecTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemNamespaceSelectorMatchLabels @go(MatchLabels)
}

#KafkaMirrorMaker2SpecTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemNamespaceSelectorMatchExpressionsElem: {
	// Key corresponds to the JSON schema field "key".
	key?: null | string @go(Key,*string)

	// Operator corresponds to the JSON schema field "operator".
	operator?: null | string @go(Operator,*string)

	// Values corresponds to the JSON schema field "values".
	values?: [...string] @go(Values,[]string)
}

#KafkaMirrorMaker2SpecTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemNamespaceSelectorMatchLabels: [string]: string

#KafkaMirrorMaker2SpecTemplatePodAffinityPodAntiAffinity: {
	// PreferredDuringSchedulingIgnoredDuringExecution corresponds to the JSON schema
	// field "preferredDuringSchedulingIgnoredDuringExecution".
	preferredDuringSchedulingIgnoredDuringExecution?: [...#KafkaMirrorMaker2SpecTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElem] @go(PreferredDuringSchedulingIgnoredDuringExecution,[]KafkaMirrorMaker2SpecTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElem)

	// RequiredDuringSchedulingIgnoredDuringExecution corresponds to the JSON schema
	// field "requiredDuringSchedulingIgnoredDuringExecution".
	requiredDuringSchedulingIgnoredDuringExecution?: [...#KafkaMirrorMaker2SpecTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElem] @go(RequiredDuringSchedulingIgnoredDuringExecution,[]KafkaMirrorMaker2SpecTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElem)
}

#KafkaMirrorMaker2SpecTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElem: {
	// PodAffinityTerm corresponds to the JSON schema field "podAffinityTerm".
	podAffinityTerm?: null | #KafkaMirrorMaker2SpecTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTerm @go(PodAffinityTerm,*KafkaMirrorMaker2SpecTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTerm)

	// Weight corresponds to the JSON schema field "weight".
	weight?: null | int32 @go(Weight,*int32)
}

#KafkaMirrorMaker2SpecTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTerm: {
	// LabelSelector corresponds to the JSON schema field "labelSelector".
	labelSelector?: null | #KafkaMirrorMaker2SpecTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermLabelSelector @go(LabelSelector,*KafkaMirrorMaker2SpecTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermLabelSelector)

	// MatchLabelKeys corresponds to the JSON schema field "matchLabelKeys".
	matchLabelKeys?: [...string] @go(MatchLabelKeys,[]string)

	// MismatchLabelKeys corresponds to the JSON schema field "mismatchLabelKeys".
	mismatchLabelKeys?: [...string] @go(MismatchLabelKeys,[]string)

	// NamespaceSelector corresponds to the JSON schema field "namespaceSelector".
	namespaceSelector?: null | #KafkaMirrorMaker2SpecTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermNamespaceSelector @go(NamespaceSelector,*KafkaMirrorMaker2SpecTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermNamespaceSelector)

	// Namespaces corresponds to the JSON schema field "namespaces".
	namespaces?: [...string] @go(Namespaces,[]string)

	// TopologyKey corresponds to the JSON schema field "topologyKey".
	topologyKey?: null | string @go(TopologyKey,*string)
}

#KafkaMirrorMaker2SpecTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermLabelSelector: {
	// MatchExpressions corresponds to the JSON schema field "matchExpressions".
	matchExpressions?: [...#KafkaMirrorMaker2SpecTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermLabelSelectorMatchExpressionsElem] @go(MatchExpressions,[]KafkaMirrorMaker2SpecTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermLabelSelectorMatchExpressionsElem)

	// MatchLabels corresponds to the JSON schema field "matchLabels".
	matchLabels?: #KafkaMirrorMaker2SpecTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermLabelSelectorMatchLabels @go(MatchLabels)
}

#KafkaMirrorMaker2SpecTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermLabelSelectorMatchExpressionsElem: {
	// Key corresponds to the JSON schema field "key".
	key?: null | string @go(Key,*string)

	// Operator corresponds to the JSON schema field "operator".
	operator?: null | string @go(Operator,*string)

	// Values corresponds to the JSON schema field "values".
	values?: [...string] @go(Values,[]string)
}

#KafkaMirrorMaker2SpecTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermLabelSelectorMatchLabels: [string]: string

#KafkaMirrorMaker2SpecTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermNamespaceSelector: {
	// MatchExpressions corresponds to the JSON schema field "matchExpressions".
	matchExpressions?: [...#KafkaMirrorMaker2SpecTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermNamespaceSelectorMatchExpressionsElem] @go(MatchExpressions,[]KafkaMirrorMaker2SpecTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermNamespaceSelectorMatchExpressionsElem)

	// MatchLabels corresponds to the JSON schema field "matchLabels".
	matchLabels?: #KafkaMirrorMaker2SpecTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermNamespaceSelectorMatchLabels @go(MatchLabels)
}

#KafkaMirrorMaker2SpecTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermNamespaceSelectorMatchExpressionsElem: {
	// Key corresponds to the JSON schema field "key".
	key?: null | string @go(Key,*string)

	// Operator corresponds to the JSON schema field "operator".
	operator?: null | string @go(Operator,*string)

	// Values corresponds to the JSON schema field "values".
	values?: [...string] @go(Values,[]string)
}

#KafkaMirrorMaker2SpecTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionElemPodAffinityTermNamespaceSelectorMatchLabels: [string]: string

#KafkaMirrorMaker2SpecTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElem: {
	// LabelSelector corresponds to the JSON schema field "labelSelector".
	labelSelector?: null | #KafkaMirrorMaker2SpecTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemLabelSelector @go(LabelSelector,*KafkaMirrorMaker2SpecTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemLabelSelector)

	// MatchLabelKeys corresponds to the JSON schema field "matchLabelKeys".
	matchLabelKeys?: [...string] @go(MatchLabelKeys,[]string)

	// MismatchLabelKeys corresponds to the JSON schema field "mismatchLabelKeys".
	mismatchLabelKeys?: [...string] @go(MismatchLabelKeys,[]string)

	// NamespaceSelector corresponds to the JSON schema field "namespaceSelector".
	namespaceSelector?: null | #KafkaMirrorMaker2SpecTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemNamespaceSelector @go(NamespaceSelector,*KafkaMirrorMaker2SpecTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemNamespaceSelector)

	// Namespaces corresponds to the JSON schema field "namespaces".
	namespaces?: [...string] @go(Namespaces,[]string)

	// TopologyKey corresponds to the JSON schema field "topologyKey".
	topologyKey?: null | string @go(TopologyKey,*string)
}

#KafkaMirrorMaker2SpecTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemLabelSelector: {
	// MatchExpressions corresponds to the JSON schema field "matchExpressions".
	matchExpressions?: [...#KafkaMirrorMaker2SpecTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemLabelSelectorMatchExpressionsElem] @go(MatchExpressions,[]KafkaMirrorMaker2SpecTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemLabelSelectorMatchExpressionsElem)

	// MatchLabels corresponds to the JSON schema field "matchLabels".
	matchLabels?: #KafkaMirrorMaker2SpecTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemLabelSelectorMatchLabels @go(MatchLabels)
}

#KafkaMirrorMaker2SpecTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemLabelSelectorMatchExpressionsElem: {
	// Key corresponds to the JSON schema field "key".
	key?: null | string @go(Key,*string)

	// Operator corresponds to the JSON schema field "operator".
	operator?: null | string @go(Operator,*string)

	// Values corresponds to the JSON schema field "values".
	values?: [...string] @go(Values,[]string)
}

#KafkaMirrorMaker2SpecTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemLabelSelectorMatchLabels: [string]: string

#KafkaMirrorMaker2SpecTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemNamespaceSelector: {
	// MatchExpressions corresponds to the JSON schema field "matchExpressions".
	matchExpressions?: [...#KafkaMirrorMaker2SpecTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemNamespaceSelectorMatchExpressionsElem] @go(MatchExpressions,[]KafkaMirrorMaker2SpecTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemNamespaceSelectorMatchExpressionsElem)

	// MatchLabels corresponds to the JSON schema field "matchLabels".
	matchLabels?: #KafkaMirrorMaker2SpecTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemNamespaceSelectorMatchLabels @go(MatchLabels)
}

#KafkaMirrorMaker2SpecTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemNamespaceSelectorMatchExpressionsElem: {
	// Key corresponds to the JSON schema field "key".
	key?: null | string @go(Key,*string)

	// Operator corresponds to the JSON schema field "operator".
	operator?: null | string @go(Operator,*string)

	// Values corresponds to the JSON schema field "values".
	values?: [...string] @go(Values,[]string)
}

#KafkaMirrorMaker2SpecTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionElemNamespaceSelectorMatchLabels: [string]: string

// Template for Kafka Connect `PodDisruptionBudget`.
#KafkaMirrorMaker2SpecTemplatePodDisruptionBudget: {
	// Maximum number of unavailable pods to allow automatic Pod eviction. A Pod
	// eviction is allowed when the `maxUnavailable` number of pods or fewer are
	// unavailable after the eviction. Setting this value to 0 prevents all voluntary
	// evictions, so the pods must be evicted manually. Defaults to 1.
	maxUnavailable?: null | int32 @go(MaxUnavailable,*int32)

	// Metadata to apply to the `PodDisruptionBudgetTemplate` resource.
	metadata?: null | #KafkaMirrorMaker2SpecTemplatePodDisruptionBudgetMetadata @go(Metadata,*KafkaMirrorMaker2SpecTemplatePodDisruptionBudgetMetadata)
}

// Metadata to apply to the `PodDisruptionBudgetTemplate` resource.
#KafkaMirrorMaker2SpecTemplatePodDisruptionBudgetMetadata: {
	// Annotations added to the Kubernetes resource.
	annotations?: #KafkaMirrorMaker2SpecTemplatePodDisruptionBudgetMetadataAnnotations @go(Annotations)

	// Labels added to the Kubernetes resource.
	labels?: #KafkaMirrorMaker2SpecTemplatePodDisruptionBudgetMetadataLabels @go(Labels)
}

// Annotations added to the Kubernetes resource.
#KafkaMirrorMaker2SpecTemplatePodDisruptionBudgetMetadataAnnotations: {[string]: string}

// Labels added to the Kubernetes resource.
#KafkaMirrorMaker2SpecTemplatePodDisruptionBudgetMetadataLabels: {[string]: string}

#KafkaMirrorMaker2SpecTemplatePodHostAliasesElem: {
	// Hostnames corresponds to the JSON schema field "hostnames".
	hostnames?: [...string] @go(Hostnames,[]string)

	// Ip corresponds to the JSON schema field "ip".
	ip?: null | string @go(Ip,*string)
}

#KafkaMirrorMaker2SpecTemplatePodImagePullSecretsElem: {
	// Name corresponds to the JSON schema field "name".
	name?: null | string @go(Name,*string)
}

// Metadata applied to the resource.
#KafkaMirrorMaker2SpecTemplatePodMetadata: {
	// Annotations added to the Kubernetes resource.
	annotations?: #KafkaMirrorMaker2SpecTemplatePodMetadataAnnotations @go(Annotations)

	// Labels added to the Kubernetes resource.
	labels?: #KafkaMirrorMaker2SpecTemplatePodMetadataLabels @go(Labels)
}

// Annotations added to the Kubernetes resource.
#KafkaMirrorMaker2SpecTemplatePodMetadataAnnotations: {[string]: string}

// Labels added to the Kubernetes resource.
#KafkaMirrorMaker2SpecTemplatePodMetadataLabels: {[string]: string}

// Configures pod-level security attributes and common container settings.
#KafkaMirrorMaker2SpecTemplatePodSecurityContext: {
	// FsGroup corresponds to the JSON schema field "fsGroup".
	fsGroup?: null | int32 @go(FsGroup,*int32)

	// FsGroupChangePolicy corresponds to the JSON schema field "fsGroupChangePolicy".
	fsGroupChangePolicy?: null | string @go(FsGroupChangePolicy,*string)

	// RunAsGroup corresponds to the JSON schema field "runAsGroup".
	runAsGroup?: null | int32 @go(RunAsGroup,*int32)

	// RunAsNonRoot corresponds to the JSON schema field "runAsNonRoot".
	runAsNonRoot?: null | bool @go(RunAsNonRoot,*bool)

	// RunAsUser corresponds to the JSON schema field "runAsUser".
	runAsUser?: null | int32 @go(RunAsUser,*int32)

	// SeLinuxOptions corresponds to the JSON schema field "seLinuxOptions".
	seLinuxOptions?: null | #KafkaMirrorMaker2SpecTemplatePodSecurityContextSeLinuxOptions @go(SeLinuxOptions,*KafkaMirrorMaker2SpecTemplatePodSecurityContextSeLinuxOptions)

	// SeccompProfile corresponds to the JSON schema field "seccompProfile".
	seccompProfile?: null | #KafkaMirrorMaker2SpecTemplatePodSecurityContextSeccompProfile @go(SeccompProfile,*KafkaMirrorMaker2SpecTemplatePodSecurityContextSeccompProfile)

	// SupplementalGroups corresponds to the JSON schema field "supplementalGroups".
	supplementalGroups?: [...int32] @go(SupplementalGroups,[]int32)

	// Sysctls corresponds to the JSON schema field "sysctls".
	sysctls?: [...#KafkaMirrorMaker2SpecTemplatePodSecurityContextSysctlsElem] @go(Sysctls,[]KafkaMirrorMaker2SpecTemplatePodSecurityContextSysctlsElem)

	// WindowsOptions corresponds to the JSON schema field "windowsOptions".
	windowsOptions?: null | #KafkaMirrorMaker2SpecTemplatePodSecurityContextWindowsOptions @go(WindowsOptions,*KafkaMirrorMaker2SpecTemplatePodSecurityContextWindowsOptions)
}

#KafkaMirrorMaker2SpecTemplatePodSecurityContextSeLinuxOptions: {
	// Level corresponds to the JSON schema field "level".
	level?: null | string @go(Level,*string)

	// Role corresponds to the JSON schema field "role".
	role?: null | string @go(Role,*string)

	// Type corresponds to the JSON schema field "type".
	type?: null | string @go(Type,*string)

	// User corresponds to the JSON schema field "user".
	user?: null | string @go(User,*string)
}

#KafkaMirrorMaker2SpecTemplatePodSecurityContextSeccompProfile: {
	// LocalhostProfile corresponds to the JSON schema field "localhostProfile".
	localhostProfile?: null | string @go(LocalhostProfile,*string)

	// Type corresponds to the JSON schema field "type".
	type?: null | string @go(Type,*string)
}

#KafkaMirrorMaker2SpecTemplatePodSecurityContextSysctlsElem: {
	// Name corresponds to the JSON schema field "name".
	name?: null | string @go(Name,*string)

	// Value corresponds to the JSON schema field "value".
	value?: null | string @go(Value,*string)
}

#KafkaMirrorMaker2SpecTemplatePodSecurityContextWindowsOptions: {
	// GmsaCredentialSpec corresponds to the JSON schema field "gmsaCredentialSpec".
	gmsaCredentialSpec?: null | string @go(GmsaCredentialSpec,*string)

	// GmsaCredentialSpecName corresponds to the JSON schema field
	// "gmsaCredentialSpecName".
	gmsaCredentialSpecName?: null | string @go(GmsaCredentialSpecName,*string)

	// HostProcess corresponds to the JSON schema field "hostProcess".
	hostProcess?: null | bool @go(HostProcess,*bool)

	// RunAsUserName corresponds to the JSON schema field "runAsUserName".
	runAsUserName?: null | string @go(RunAsUserName,*string)
}

// Template for Kafka Connect `StrimziPodSet` resource.
#KafkaMirrorMaker2SpecTemplatePodSet: {
	// Metadata applied to the resource.
	metadata?: null | #KafkaMirrorMaker2SpecTemplatePodSetMetadata @go(Metadata,*KafkaMirrorMaker2SpecTemplatePodSetMetadata)
}

// Metadata applied to the resource.
#KafkaMirrorMaker2SpecTemplatePodSetMetadata: {
	// Annotations added to the Kubernetes resource.
	annotations?: #KafkaMirrorMaker2SpecTemplatePodSetMetadataAnnotations @go(Annotations)

	// Labels added to the Kubernetes resource.
	labels?: #KafkaMirrorMaker2SpecTemplatePodSetMetadataLabels @go(Labels)
}

// Annotations added to the Kubernetes resource.
#KafkaMirrorMaker2SpecTemplatePodSetMetadataAnnotations: {[string]: string}

// Labels added to the Kubernetes resource.
#KafkaMirrorMaker2SpecTemplatePodSetMetadataLabels: {[string]: string}

#KafkaMirrorMaker2SpecTemplatePodTolerationsElem: {
	// Effect corresponds to the JSON schema field "effect".
	effect?: null | string @go(Effect,*string)

	// Key corresponds to the JSON schema field "key".
	key?: null | string @go(Key,*string)

	// Operator corresponds to the JSON schema field "operator".
	operator?: null | string @go(Operator,*string)

	// TolerationSeconds corresponds to the JSON schema field "tolerationSeconds".
	tolerationSeconds?: null | int32 @go(TolerationSeconds,*int32)

	// Value corresponds to the JSON schema field "value".
	value?: null | string @go(Value,*string)
}

#KafkaMirrorMaker2SpecTemplatePodTopologySpreadConstraintsElem: {
	// LabelSelector corresponds to the JSON schema field "labelSelector".
	labelSelector?: null | #KafkaMirrorMaker2SpecTemplatePodTopologySpreadConstraintsElemLabelSelector @go(LabelSelector,*KafkaMirrorMaker2SpecTemplatePodTopologySpreadConstraintsElemLabelSelector)

	// MatchLabelKeys corresponds to the JSON schema field "matchLabelKeys".
	matchLabelKeys?: [...string] @go(MatchLabelKeys,[]string)

	// MaxSkew corresponds to the JSON schema field "maxSkew".
	maxSkew?: null | int32 @go(MaxSkew,*int32)

	// MinDomains corresponds to the JSON schema field "minDomains".
	minDomains?: null | int32 @go(MinDomains,*int32)

	// NodeAffinityPolicy corresponds to the JSON schema field "nodeAffinityPolicy".
	nodeAffinityPolicy?: null | string @go(NodeAffinityPolicy,*string)

	// NodeTaintsPolicy corresponds to the JSON schema field "nodeTaintsPolicy".
	nodeTaintsPolicy?: null | string @go(NodeTaintsPolicy,*string)

	// TopologyKey corresponds to the JSON schema field "topologyKey".
	topologyKey?: null | string @go(TopologyKey,*string)

	// WhenUnsatisfiable corresponds to the JSON schema field "whenUnsatisfiable".
	whenUnsatisfiable?: null | string @go(WhenUnsatisfiable,*string)
}

#KafkaMirrorMaker2SpecTemplatePodTopologySpreadConstraintsElemLabelSelector: {
	// MatchExpressions corresponds to the JSON schema field "matchExpressions".
	matchExpressions?: [...#KafkaMirrorMaker2SpecTemplatePodTopologySpreadConstraintsElemLabelSelectorMatchExpressionsElem] @go(MatchExpressions,[]KafkaMirrorMaker2SpecTemplatePodTopologySpreadConstraintsElemLabelSelectorMatchExpressionsElem)

	// MatchLabels corresponds to the JSON schema field "matchLabels".
	matchLabels?: #KafkaMirrorMaker2SpecTemplatePodTopologySpreadConstraintsElemLabelSelectorMatchLabels @go(MatchLabels)
}

#KafkaMirrorMaker2SpecTemplatePodTopologySpreadConstraintsElemLabelSelectorMatchExpressionsElem: {
	// Key corresponds to the JSON schema field "key".
	key?: null | string @go(Key,*string)

	// Operator corresponds to the JSON schema field "operator".
	operator?: null | string @go(Operator,*string)

	// Values corresponds to the JSON schema field "values".
	values?: [...string] @go(Values,[]string)
}

#KafkaMirrorMaker2SpecTemplatePodTopologySpreadConstraintsElemLabelSelectorMatchLabels: [string]: string

// Template for the Kafka Connect service account.
#KafkaMirrorMaker2SpecTemplateServiceAccount: {
	// Metadata applied to the resource.
	metadata?: null | #KafkaMirrorMaker2SpecTemplateServiceAccountMetadata @go(Metadata,*KafkaMirrorMaker2SpecTemplateServiceAccountMetadata)
}

// Metadata applied to the resource.
#KafkaMirrorMaker2SpecTemplateServiceAccountMetadata: {
	// Annotations added to the Kubernetes resource.
	annotations?: #KafkaMirrorMaker2SpecTemplateServiceAccountMetadataAnnotations @go(Annotations)

	// Labels added to the Kubernetes resource.
	labels?: #KafkaMirrorMaker2SpecTemplateServiceAccountMetadataLabels @go(Labels)
}

// Annotations added to the Kubernetes resource.
#KafkaMirrorMaker2SpecTemplateServiceAccountMetadataAnnotations: {[string]: string}

// Labels added to the Kubernetes resource.
#KafkaMirrorMaker2SpecTemplateServiceAccountMetadataLabels: {[string]: string}

// The configuration of tracing in Kafka Connect.
#KafkaMirrorMaker2SpecTracing: _

#KafkaMirrorMaker2SpecTracingType: _ // #enumKafkaMirrorMaker2SpecTracingType

#enumKafkaMirrorMaker2SpecTracingType:
	#KafkaMirrorMaker2SpecTracingTypeJaeger |
	#KafkaMirrorMaker2SpecTracingTypeOpentelemetry

#KafkaMirrorMaker2SpecTracingTypeJaeger: #KafkaMirrorMaker2SpecTracingType & "jaeger"

#KafkaMirrorMaker2SpecTracingTypeOpentelemetry: #KafkaMirrorMaker2SpecTracingType & "opentelemetry"

// The status of the Kafka MirrorMaker 2 cluster.
#KafkaMirrorMaker2Status: {
	// List of MirrorMaker 2 connector auto restart statuses.
	autoRestartStatuses?: [...#KafkaMirrorMaker2StatusAutoRestartStatusesElem] @go(AutoRestartStatuses,[]KafkaMirrorMaker2StatusAutoRestartStatusesElem)

	// List of status conditions.
	conditions?: [...#KafkaMirrorMaker2StatusConditionsElem] @go(Conditions,[]KafkaMirrorMaker2StatusConditionsElem)

	// The list of connector plugins available in this Kafka Connect deployment.
	connectorPlugins?: [...#KafkaMirrorMaker2StatusConnectorPluginsElem] @go(ConnectorPlugins,[]KafkaMirrorMaker2StatusConnectorPluginsElem)

	// List of MirrorMaker 2 connector statuses, as reported by the Kafka Connect REST
	// API.
	connectors?: [...null | apiextensions.#JSON] @go(Connectors,[]*apiextensions.JSON)

	// Label selector for pods providing this resource.
	labelSelector?: null | string @go(LabelSelector,*string)

	// The generation of the CRD that was last reconciled by the operator.
	observedGeneration?: null | int32 @go(ObservedGeneration,*int32)

	// The current number of pods being used to provide this resource.
	replicas?: null | int32 @go(Replicas,*int32)

	// The URL of the REST API endpoint for managing and monitoring Kafka Connect
	// connectors.
	url?: null | string @go(Url,*string)
}

#KafkaMirrorMaker2StatusAutoRestartStatusesElem: {
	// The name of the connector being restarted.
	connectorName?: null | string @go(ConnectorName,*string)

	// The number of times the connector or task is restarted.
	count?: null | int32 @go(Count,*int32)

	// The last time the automatic restart was attempted. The required format is
	// 'yyyy-MM-ddTHH:mm:ssZ' in the UTC time zone.
	lastRestartTimestamp?: null | string @go(LastRestartTimestamp,*string)
}

#KafkaMirrorMaker2StatusConditionsElem: {
	// Last time the condition of a type changed from one status to another. The
	// required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.
	lastTransitionTime?: null | string @go(LastTransitionTime,*string)

	// Human-readable message indicating details about the condition's last
	// transition.
	message?: null | string @go(Message,*string)

	// The reason for the condition's last transition (a single word in CamelCase).
	reason?: null | string @go(Reason,*string)

	// The status of the condition, either True, False or Unknown.
	status?: null | string @go(Status,*string)

	// The unique identifier of a condition, used to distinguish between other
	// conditions in the resource.
	type?: null | string @go(Type,*string)
}

#KafkaMirrorMaker2StatusConnectorPluginsElem: {
	// The class of the connector plugin.
	class?: null | string @go(Class,*string)

	// The type of the connector plugin. The available types are `sink` and `source`.
	type?: null | string @go(Type,*string)

	// The version of the connector plugin.
	version?: null | string @go(Version,*string)
}
