// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go bitbucket.org/sudosweden/dockyards-backend/pkg/api/v1alpha3

package v1alpha3

import (
	corev1 "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#ContainerImageDeploymentKind: "ContainerImageDeployment"

#ContainerImageDeploymentSpec: {
	credentialRef?: null | corev1.#LocalObjectReference @go(CredentialRef,*corev1.LocalObjectReference)
	image:          string                              @go(Image)
	port?:          int32                               @go(Port)
}

#ContainerImageDeploymentStatus: {
	conditions?: [...metav1.#Condition] @go(Conditions,[]metav1.Condition)
	repositoryURL?: string @go(RepositoryURL)
}

// +kubebuilder:object:root=true
// +kubebuilder:storageversion
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Ready",type=string,JSONPath=".status.conditions[?(@.type==\"Ready\")].status"
// +kubebuilder:printcolumn:name="Age",type=date,JSONPath=".metadata.creationTimestamp"
// +kubebuilder:deprecatedversion
#ContainerImageDeployment: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta              @go(ObjectMeta)
	spec?:     #ContainerImageDeploymentSpec   @go(Spec)
	status?:   #ContainerImageDeploymentStatus @go(Status)
}

// +kubebuilder:object:root=true
#ContainerImageDeploymentList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#ContainerImageDeployment] @go(Items,[]ContainerImageDeployment)
}
