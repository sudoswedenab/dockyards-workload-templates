// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go bitbucket.org/sudosweden/dockyards-backend/pkg/api/v1alpha3

package v1alpha3

import (
	"k8s.io/apimachinery/pkg/api/resource"
	corev1 "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#NodePoolKind: "NodePool"

#StorageResourceTypeHostPath: "HostPath"

#NodePoolStorageResource: {
	name:     string             @go(Name)
	type?:    string             @go(Type)
	quantity: resource.#Quantity @go(Quantity)
}

#NodePoolSecurity: {
	enableAppArmor?: bool @go(EnableAppArmor)
}

#NodePoolSpec: {
	replicas?:      null | int32         @go(Replicas,*int32)
	controlPlane?:  bool                 @go(ControlPlane)
	loadBalancer?:  bool                 @go(LoadBalancer)
	dedicatedRole?: bool                 @go(DedicatedRole)
	resources?:     corev1.#ResourceList @go(Resources)
	storage?:       bool                 @go(Storage)
	storageResources?: [...#NodePoolStorageResource] @go(StorageResources,[]NodePoolStorageResource)
	releaseRef?: null | corev1.#TypedObjectReference @go(ReleaseRef,*corev1.TypedObjectReference)
	security?:   #NodePoolSecurity                   @go(Security)
}

#NodePoolStatus: {
	conditions?: [...metav1.#Condition] @go(Conditions,[]metav1.Condition)
	clusterServiceID?: string               @go(ClusterServiceID)
	resources?:        corev1.#ResourceList @go(Resources)
}

// +kubebuilder:object:root=true
// +kubebuilder:storageversion
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Ready",type=string,JSONPath=".status.conditions[?(@.type==\"Ready\")].status"
// +kubebuilder:printcolumn:name="Reason",type=string,JSONPath=".status.conditions[?(@.type==\"Ready\")].reason"
// +kubebuilder:printcolumn:name="Age",type=date,JSONPath=".metadata.creationTimestamp"
#NodePool: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)
	spec?:     #NodePoolSpec      @go(Spec)
	status?:   #NodePoolStatus    @go(Status)
}

// +kubebuilder:object:root=true
#NodePoolList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items?: [...#NodePool] @go(Items,[]NodePool)
}
