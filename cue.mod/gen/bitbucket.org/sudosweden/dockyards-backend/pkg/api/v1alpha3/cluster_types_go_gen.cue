// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go bitbucket.org/sudosweden/dockyards-backend/pkg/api/v1alpha3

package v1alpha3

import (
	corev1 "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#ClusterKind:     "Cluster"
#ResourceCluster: corev1.#ResourceName & "cluster"

#ClusterUpgrade: {
	to: string @go(To)
}

#ClusterAPIEndpoint: {
	host: string @go(Host)
	port: int32  @go(Port)
}

#ClusterSpec: {
	version?:                  string @go(Version)
	noDefaultIngressProvider?: bool   @go(NoDefaultIngressProvider)
	upgrades?: [...#ClusterUpgrade] @go(Upgrades,[]ClusterUpgrade)
	blockDeletion?:      bool                                     @go(BlockDeletion)
	allocateInternalIP?: bool                                     @go(AllocateInternalIP)
	ipPoolRef?:          null | corev1.#TypedLocalObjectReference @go(IPPoolRef,*corev1.TypedLocalObjectReference)
	duration?:           null | metav1.#Duration                  @go(Duration,*metav1.Duration)
}

#ClusterStatus: {
	conditions?: [...metav1.#Condition] @go(Conditions,[]metav1.Condition)
	clusterServiceID?: string @go(ClusterServiceID)
	version?:          string @go(Version)
	dnsZones?: [...string] @go(DNSZones,[]string)
	apiEndpoint?:         #ClusterAPIEndpoint @go(APIEndpoint)
	expirationTimestamp?: null | metav1.#Time @go(ExpirationTimestamp,*metav1.Time)
}

// +kubebuilder:object:root=true
// +kubebuilder:storageversion
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Ready",type=string,JSONPath=".status.conditions[?(@.type==\"Ready\")].status"
// +kubebuilder:printcolumn:name="Reason",type=string,priority=1,JSONPath=".status.conditions[?(@.type==\"Ready\")].reason"
// +kubebuilder:printcolumn:name="Version",type=string,JSONPath=".status.version"
// +kubebuilder:printcolumn:name="Age",type=date,JSONPath=".metadata.creationTimestamp"
// +kubebuilder:printcolumn:name="Duration",type=string,JSONPath=".spec.duration"
#Cluster: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)
	spec?:     #ClusterSpec       @go(Spec)
	status?:   #ClusterStatus     @go(Status)
}

// +kubebuilder:object:root=true
#ClusterList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items?: [...#Cluster] @go(Items,[]Cluster)
}
